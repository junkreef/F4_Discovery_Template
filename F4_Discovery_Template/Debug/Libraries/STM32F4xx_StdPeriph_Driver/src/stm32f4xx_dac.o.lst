   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f4xx_dac.c"
  23              	.Ltext0:
  24              		.file 1 "../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c"
 24584              		.align	2
 24585              		.global	DAC_DeInit
 24586              		.thumb
 24587              		.thumb_func
 24589              	DAC_DeInit:
 24590              	.LFB110:
   1:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
   2:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************
   3:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @file    stm32f4xx_dac.c
   4:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @author  MCD Application Team
   5:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @version V1.0.2
   6:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @date    05-March-2012
   7:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****    * @brief   This file provides firmware functions to manage the following 
   8:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          functionalities of the Digital-to-Analog Converter (DAC) peripheral: 
   9:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - DAC channels configuration: trigger, output buffer, data format
  10:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - DMA management      
  11:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - Interrupts and flags management
  12:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  13:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *  @verbatim
  14:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *    
  15:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================
  16:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                             DAC Peripheral features
  17:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================
  18:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  19:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Channels
  20:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============  
  21:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The device integrates two 12-bit Digital Analog Converters that can 
  22:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          be used independently or simultaneously (dual mode):
  23:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            1- DAC channel1 with DAC_OUT1 (PA4) as output
  24:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            1- DAC channel2 with DAC_OUT2 (PA5) as output
  25:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  26:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Triggers
  27:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============
  28:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Digital to Analog conversion can be non-triggered using DAC_Trigger_None
  29:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          and DAC_OUT1/DAC_OUT2 is available once writing to DHRx register 
  30:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          using DAC_SetChannel1Data() / DAC_SetChannel2Data() functions.
  31:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *   
  32:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         Digital to Analog conversion can be triggered by:
  33:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- External event: EXTI Line 9 (any GPIOx_Pin9) using DAC_Trigger_Ext_IT9.
  34:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                The used pin (GPIOx_Pin9) must be configured in input mode.
  35:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  36:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- Timers TRGO: TIM2, TIM4, TIM5, TIM6, TIM7 and TIM8 
  37:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                (DAC_Trigger_T2_TRGO, DAC_Trigger_T4_TRGO...)
  38:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                The timer TRGO event should be selected using TIM_SelectOutputTrigger()
  39:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  40:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             3- Software using DAC_Trigger_Software
  41:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  42:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Buffer mode feature
  43:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ========================  
  44:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Each DAC channel integrates an output buffer that can be used to 
  45:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          reduce the output impedance, and to drive external loads directly
  46:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          without having to add an external operational amplifier.
  47:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          To enable, the output buffer use  
  48:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
  49:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  50:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Refer to the device datasheet for more details about output 
  51:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          impedance value with and without output buffer.
  52:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  53:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC wave generation feature
  54:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============================      
  55:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Both DAC channels can be used to generate
  56:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- Noise wave using DAC_WaveGeneration_Noise
  57:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- Triangle wave using DAC_WaveGeneration_Triangle
  58:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *        
  59:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Wave generation can be disabled using DAC_WaveGeneration_None
  60:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  61:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC data format
  62:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ================   
  63:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The DAC data format can be:
  64:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- 8-bit right alignment using DAC_Align_8b_R
  65:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- 12-bit left alignment using DAC_Align_12b_L
  66:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             3- 12-bit right alignment using DAC_Align_12b_R
  67:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  68:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC data value to voltage correspondence  
  69:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ========================================  
  70:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The analog output voltage on each DAC channel pin is determined
  71:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          by the following equation: 
  72:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC_OUTx = VREF+ * DOR / 4095
  73:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          with  DOR is the Data Output Register
  74:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                VEF+ is the input voltage reference (refer to the device datasheet)
  75:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          e.g. To set DAC_OUT1 to 0.7V, use
  76:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            DAC_SetChannel1Data(DAC_Align_12b_R, 868);
  77:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Assuming that VREF+ = 3.3V, DAC_OUT1 = (3.3 * 868) / 4095 = 0.7V
  78:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  79:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DMA requests 
  80:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============    
  81:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          A DMA1 request can be generated when an external trigger (but not
  82:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          a software trigger) occurs if DMA1 requests are enabled using
  83:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC_DMACmd()
  84:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DMA1 requests are mapped as following:
  85:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- DAC channel1 : mapped on DMA1 Stream5 channel7 which must be 
  86:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                               already configured
  87:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- DAC channel2 : mapped on DMA1 Stream6 channel7 which must be 
  88:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                               already configured
  89:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  90:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================      
  91:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                              How to use this driver 
  92:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================          
  93:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - DAC APB clock must be enabled to get write access to DAC
  94:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              registers using
  95:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              RCC_APB1PeriphClockCmd(RCC_APB1Periph_DAC, ENABLE)
  96:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Configure DAC_OUTx (DAC_OUT1: PA4, DAC_OUT2: PA5) in analog mode.
  97:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Configure the DAC channel using DAC_Init() function
  98:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Enable the DAC channel using DAC_Cmd() function
  99:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * 
 100:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *  @endverbatim
 101:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *    
 102:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************
 103:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @attention
 104:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 105:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
 106:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 107:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
 108:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * You may not use this file except in compliance with the License.
 109:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * You may obtain a copy of the License at:
 110:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 111:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
 112:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 113:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * Unless required by applicable law or agreed to in writing, software 
 114:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
 115:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 116:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * See the License for the specific language governing permissions and
 117:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * limitations under the License.
 118:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 119:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************
 120:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 121:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 122:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 123:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Includes ------------------------------------------------------------------*/
 124:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #include "stm32f4xx_dac.h"
 125:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #include "stm32f4xx_rcc.h"
 126:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 127:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 128:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 129:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 130:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 131:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC 
 132:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief DAC driver modules
 133:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 134:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 135:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 136:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private typedef -----------------------------------------------------------*/
 137:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private define ------------------------------------------------------------*/
 138:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 139:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* CR register Mask */
 140:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define CR_CLEAR_MASK              ((uint32_t)0x00000FFE)
 141:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 142:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DAC Dual Channels SWTRIG masks */
 143:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DUAL_SWTRIG_SET            ((uint32_t)0x00000003)
 144:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DUAL_SWTRIG_RESET          ((uint32_t)0xFFFFFFFC)
 145:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 146:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DHR registers offsets */
 147:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12R1_OFFSET             ((uint32_t)0x00000008)
 148:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12R2_OFFSET             ((uint32_t)0x00000014)
 149:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12RD_OFFSET             ((uint32_t)0x00000020)
 150:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 151:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DOR register offset */
 152:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DOR_OFFSET                 ((uint32_t)0x0000002C)
 153:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 154:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private macro -------------------------------------------------------------*/
 155:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private variables ---------------------------------------------------------*/
 156:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private function prototypes -----------------------------------------------*/
 157:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private functions ---------------------------------------------------------*/
 158:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 159:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Private_Functions
 160:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 161:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 162:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 163:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group1 DAC channels configuration
 164:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   DAC channels configuration: trigger, output buffer, data format 
 165:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 166:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 167:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 168:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****           DAC channels configuration: trigger, output buffer, data format
 169:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 170:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 171:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 172:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 173:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 174:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 175:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 176:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Deinitializes the DAC peripheral registers to their default reset values.
 177:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  None
 178:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 179:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 180:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DeInit(void)
 181:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 24591              		.loc 1 181 0
 24592              		.cfi_startproc
 24593              		@ args = 0, pretend = 0, frame = 0
 24594              		@ frame_needed = 1, uses_anonymous_args = 0
 24595 0000 80B5     		push	{r7, lr}
 24596              	.LCFI0:
 24597              		.cfi_def_cfa_offset 8
 24598 0002 00AF     		add	r7, sp, #0
 24599              		.cfi_offset 14, -4
 24600              		.cfi_offset 7, -8
 24601              	.LCFI1:
 24602              		.cfi_def_cfa_register 7
 182:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Enable DAC reset state */
 183:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, ENABLE);
 24603              		.loc 1 183 0
 24604 0004 4FF00050 		mov	r0, #536870912
 24605 0008 4FF00101 		mov	r1, #1
 24606 000c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 184:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Release DAC from reset state */
 185:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, DISABLE);
 24607              		.loc 1 185 0
 24608 0010 4FF00050 		mov	r0, #536870912
 24609 0014 4FF00001 		mov	r1, #0
 24610 0018 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 186:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 24611              		.loc 1 186 0
 24612 001c 80BD     		pop	{r7, pc}
 24613              		.cfi_endproc
 24614              	.LFE110:
 24616 001e 00BF     		.align	2
 24617              		.global	DAC_Init
 24618              		.thumb
 24619              		.thumb_func
 24621              	DAC_Init:
 24622              	.LFB111:
 187:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 188:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 189:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Initializes the DAC peripheral according to the specified parameters
 190:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         in the DAC_InitStruct.
 191:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 192:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 193:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 194:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 195:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure that contains
 196:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         the configuration information for the  specified DAC channel.
 197:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 198:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 199:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_Init(uint32_t DAC_Channel, DAC_InitTypeDef* DAC_InitStruct)
 200:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 24623              		.loc 1 200 0
 24624              		.cfi_startproc
 24625              		@ args = 0, pretend = 0, frame = 16
 24626              		@ frame_needed = 1, uses_anonymous_args = 0
 24627              		@ link register save eliminated.
 24628 0020 80B4     		push	{r7}
 24629              	.LCFI2:
 24630              		.cfi_def_cfa_offset 4
 24631 0022 85B0     		sub	sp, sp, #20
 24632              	.LCFI3:
 24633              		.cfi_def_cfa_offset 24
 24634 0024 00AF     		add	r7, sp, #0
 24635              		.cfi_offset 7, -4
 24636              	.LCFI4:
 24637              		.cfi_def_cfa_register 7
 24638 0026 7860     		str	r0, [r7, #4]
 24639 0028 3960     		str	r1, [r7, #0]
 201:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
 24640              		.loc 1 201 0
 24641 002a 4FF00003 		mov	r3, #0
 24642 002e FB60     		str	r3, [r7, #12]
 24643 0030 4FF00003 		mov	r3, #0
 24644 0034 BB60     		str	r3, [r7, #8]
 202:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 203:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the DAC parameters */
 204:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_TRIGGER(DAC_InitStruct->DAC_Trigger));
 205:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_GENERATE_WAVE(DAC_InitStruct->DAC_WaveGeneration));
 206:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_LFSR_UNMASK_TRIANGLE_AMPLITUDE(DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitu
 207:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_OUTPUT_BUFFER_STATE(DAC_InitStruct->DAC_OutputBuffer));
 208:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 209:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /*---------------------------- DAC CR Configuration --------------------------*/
 210:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Get the DAC CR value */
 211:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 = DAC->CR;
 24645              		.loc 1 211 0
 24646 0036 154B     		ldr	r3, .L3
 24647 0038 1B68     		ldr	r3, [r3, #0]
 24648 003a FB60     		str	r3, [r7, #12]
 212:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
 213:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 &= ~(CR_CLEAR_MASK << DAC_Channel);
 24649              		.loc 1 213 0
 24650 003c 7B68     		ldr	r3, [r7, #4]
 24651 003e 40F6FE72 		movw	r2, #4094
 24652 0042 02FA03F3 		lsl	r3, r2, r3
 24653 0046 6FEA0303 		mvn	r3, r3
 24654 004a FA68     		ldr	r2, [r7, #12]
 24655 004c 02EA0303 		and	r3, r2, r3
 24656 0050 FB60     		str	r3, [r7, #12]
 214:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Configure for the selected DAC channel: buffer output, trigger, 
 215:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****      wave generation, mask/amplitude for wave generation */
 216:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set TSELx and TENx bits according to DAC_Trigger value */
 217:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set WAVEx bits according to DAC_WaveGeneration value */
 218:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set MAMPx bits according to DAC_LFSRUnmask_TriangleAmplitude value */ 
 219:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set BOFFx bit according to DAC_OutputBuffer value */   
 220:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
 24657              		.loc 1 220 0
 24658 0052 3B68     		ldr	r3, [r7, #0]
 24659 0054 1A68     		ldr	r2, [r3, #0]
 24660 0056 3B68     		ldr	r3, [r7, #0]
 24661 0058 5B68     		ldr	r3, [r3, #4]
 24662 005a 1A43     		orrs	r2, r2, r3
 221:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude | \
 24663              		.loc 1 221 0
 24664 005c 3B68     		ldr	r3, [r7, #0]
 24665 005e 9B68     		ldr	r3, [r3, #8]
 220:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
 24666              		.loc 1 220 0
 24667 0060 1A43     		orrs	r2, r2, r3
 222:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_OutputBuffer);
 24668              		.loc 1 222 0
 24669 0062 3B68     		ldr	r3, [r7, #0]
 24670 0064 DB68     		ldr	r3, [r3, #12]
 220:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
 24671              		.loc 1 220 0
 24672 0066 42EA0303 		orr	r3, r2, r3
 24673 006a BB60     		str	r3, [r7, #8]
 223:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Calculate CR register value depending on DAC_Channel */
 224:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 |= tmpreg2 << DAC_Channel;
 24674              		.loc 1 224 0
 24675 006c 7B68     		ldr	r3, [r7, #4]
 24676 006e BA68     		ldr	r2, [r7, #8]
 24677 0070 02FA03F3 		lsl	r3, r2, r3
 24678 0074 FA68     		ldr	r2, [r7, #12]
 24679 0076 42EA0303 		orr	r3, r2, r3
 24680 007a FB60     		str	r3, [r7, #12]
 225:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Write to DAC CR */
 226:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->CR = tmpreg1;
 24681              		.loc 1 226 0
 24682 007c 034B     		ldr	r3, .L3
 24683 007e FA68     		ldr	r2, [r7, #12]
 24684 0080 1A60     		str	r2, [r3, #0]
 227:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 24685              		.loc 1 227 0
 24686 0082 07F11407 		add	r7, r7, #20
 24687 0086 BD46     		mov	sp, r7
 24688 0088 80BC     		pop	{r7}
 24689 008a 7047     		bx	lr
 24690              	.L4:
 24691              		.align	2
 24692              	.L3:
 24693 008c 00740040 		.word	1073771520
 24694              		.cfi_endproc
 24695              	.LFE111:
 24697              		.align	2
 24698              		.global	DAC_StructInit
 24699              		.thumb
 24700              		.thumb_func
 24702              	DAC_StructInit:
 24703              	.LFB112:
 228:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 229:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 230:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Fills each DAC_InitStruct member with its default value.
 231:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure which will 
 232:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         be initialized.
 233:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 234:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 235:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_StructInit(DAC_InitTypeDef* DAC_InitStruct)
 236:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 24704              		.loc 1 236 0
 24705              		.cfi_startproc
 24706              		@ args = 0, pretend = 0, frame = 8
 24707              		@ frame_needed = 1, uses_anonymous_args = 0
 24708              		@ link register save eliminated.
 24709 0090 80B4     		push	{r7}
 24710              	.LCFI5:
 24711              		.cfi_def_cfa_offset 4
 24712 0092 83B0     		sub	sp, sp, #12
 24713              	.LCFI6:
 24714              		.cfi_def_cfa_offset 16
 24715 0094 00AF     		add	r7, sp, #0
 24716              		.cfi_offset 7, -4
 24717              	.LCFI7:
 24718              		.cfi_def_cfa_register 7
 24719 0096 7860     		str	r0, [r7, #4]
 237:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /*--------------- Reset DAC init structure parameters values -----------------*/
 238:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_Trigger member */
 239:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_Trigger = DAC_Trigger_None;
 24720              		.loc 1 239 0
 24721 0098 7B68     		ldr	r3, [r7, #4]
 24722 009a 4FF00002 		mov	r2, #0
 24723 009e 1A60     		str	r2, [r3, #0]
 240:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_WaveGeneration member */
 241:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_WaveGeneration = DAC_WaveGeneration_None;
 24724              		.loc 1 241 0
 24725 00a0 7B68     		ldr	r3, [r7, #4]
 24726 00a2 4FF00002 		mov	r2, #0
 24727 00a6 5A60     		str	r2, [r3, #4]
 242:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_LFSRUnmask_TriangleAmplitude member */
 243:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude = DAC_LFSRUnmask_Bit0;
 24728              		.loc 1 243 0
 24729 00a8 7B68     		ldr	r3, [r7, #4]
 24730 00aa 4FF00002 		mov	r2, #0
 24731 00ae 9A60     		str	r2, [r3, #8]
 244:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_OutputBuffer member */
 245:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_OutputBuffer = DAC_OutputBuffer_Enable;
 24732              		.loc 1 245 0
 24733 00b0 7B68     		ldr	r3, [r7, #4]
 24734 00b2 4FF00002 		mov	r2, #0
 24735 00b6 DA60     		str	r2, [r3, #12]
 246:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 24736              		.loc 1 246 0
 24737 00b8 07F10C07 		add	r7, r7, #12
 24738 00bc BD46     		mov	sp, r7
 24739 00be 80BC     		pop	{r7}
 24740 00c0 7047     		bx	lr
 24741              		.cfi_endproc
 24742              	.LFE112:
 24744 00c2 00BF     		.align	2
 24745              		.global	DAC_Cmd
 24746              		.thumb
 24747              		.thumb_func
 24749              	DAC_Cmd:
 24750              	.LFB113:
 247:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 248:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 249:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC channel.
 250:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 251:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 252:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 253:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 254:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the DAC channel. 
 255:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 256:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   When the DAC channel is enabled the trigger source can no more be modified.
 257:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 258:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 259:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_Cmd(uint32_t DAC_Channel, FunctionalState NewState)
 260:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 24751              		.loc 1 260 0
 24752              		.cfi_startproc
 24753              		@ args = 0, pretend = 0, frame = 8
 24754              		@ frame_needed = 1, uses_anonymous_args = 0
 24755              		@ link register save eliminated.
 24756 00c4 80B4     		push	{r7}
 24757              	.LCFI8:
 24758              		.cfi_def_cfa_offset 4
 24759 00c6 83B0     		sub	sp, sp, #12
 24760              	.LCFI9:
 24761              		.cfi_def_cfa_offset 16
 24762 00c8 00AF     		add	r7, sp, #0
 24763              		.cfi_offset 7, -4
 24764              	.LCFI10:
 24765              		.cfi_def_cfa_register 7
 24766 00ca 7860     		str	r0, [r7, #4]
 24767 00cc 0B46     		mov	r3, r1
 24768 00ce FB70     		strb	r3, [r7, #3]
 261:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 262:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 263:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 264:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 265:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 24769              		.loc 1 265 0
 24770 00d0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 24771 00d2 002B     		cmp	r3, #0
 24772 00d4 0BD0     		beq	.L7
 266:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 267:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC channel */
 268:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= (DAC_CR_EN1 << DAC_Channel);
 24773              		.loc 1 268 0
 24774 00d6 0F4B     		ldr	r3, .L9
 24775 00d8 0E4A     		ldr	r2, .L9
 24776 00da 1168     		ldr	r1, [r2, #0]
 24777 00dc 7A68     		ldr	r2, [r7, #4]
 24778 00de 4FF00100 		mov	r0, #1
 24779 00e2 00FA02F2 		lsl	r2, r0, r2
 24780 00e6 41EA0202 		orr	r2, r1, r2
 24781 00ea 1A60     		str	r2, [r3, #0]
 24782 00ec 0CE0     		b	.L6
 24783              	.L7:
 269:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 270:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 271:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 272:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC channel */
 273:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(DAC_CR_EN1 << DAC_Channel));
 24784              		.loc 1 273 0
 24785 00ee 094B     		ldr	r3, .L9
 24786 00f0 084A     		ldr	r2, .L9
 24787 00f2 1168     		ldr	r1, [r2, #0]
 24788 00f4 7A68     		ldr	r2, [r7, #4]
 24789 00f6 4FF00100 		mov	r0, #1
 24790 00fa 00FA02F2 		lsl	r2, r0, r2
 24791 00fe 6FEA0202 		mvn	r2, r2
 24792 0102 01EA0202 		and	r2, r1, r2
 24793 0106 1A60     		str	r2, [r3, #0]
 24794              	.L6:
 274:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 275:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 24795              		.loc 1 275 0
 24796 0108 07F10C07 		add	r7, r7, #12
 24797 010c BD46     		mov	sp, r7
 24798 010e 80BC     		pop	{r7}
 24799 0110 7047     		bx	lr
 24800              	.L10:
 24801 0112 00BF     		.align	2
 24802              	.L9:
 24803 0114 00740040 		.word	1073771520
 24804              		.cfi_endproc
 24805              	.LFE113:
 24807              		.align	2
 24808              		.global	DAC_SoftwareTriggerCmd
 24809              		.thumb
 24810              		.thumb_func
 24812              	DAC_SoftwareTriggerCmd:
 24813              	.LFB114:
 276:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 277:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 278:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the selected DAC channel software trigger.
 279:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 280:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 281:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 282:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 283:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel software trigger.
 284:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 285:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 286:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 287:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SoftwareTriggerCmd(uint32_t DAC_Channel, FunctionalState NewState)
 288:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 24814              		.loc 1 288 0
 24815              		.cfi_startproc
 24816              		@ args = 0, pretend = 0, frame = 8
 24817              		@ frame_needed = 1, uses_anonymous_args = 0
 24818              		@ link register save eliminated.
 24819 0118 80B4     		push	{r7}
 24820              	.LCFI11:
 24821              		.cfi_def_cfa_offset 4
 24822 011a 83B0     		sub	sp, sp, #12
 24823              	.LCFI12:
 24824              		.cfi_def_cfa_offset 16
 24825 011c 00AF     		add	r7, sp, #0
 24826              		.cfi_offset 7, -4
 24827              	.LCFI13:
 24828              		.cfi_def_cfa_register 7
 24829 011e 7860     		str	r0, [r7, #4]
 24830 0120 0B46     		mov	r3, r1
 24831 0122 FB70     		strb	r3, [r7, #3]
 289:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 290:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 291:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 292:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 293:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 24832              		.loc 1 293 0
 24833 0124 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 24834 0126 002B     		cmp	r3, #0
 24835 0128 0DD0     		beq	.L12
 294:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 295:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable software trigger for the selected DAC channel */
 296:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4);
 24836              		.loc 1 296 0
 24837 012a 114B     		ldr	r3, .L14
 24838 012c 104A     		ldr	r2, .L14
 24839 012e 5168     		ldr	r1, [r2, #4]
 24840 0130 7A68     		ldr	r2, [r7, #4]
 24841 0132 4FEA1212 		lsr	r2, r2, #4
 24842 0136 4FF00100 		mov	r0, #1
 24843 013a 00FA02F2 		lsl	r2, r0, r2
 24844 013e 41EA0202 		orr	r2, r1, r2
 24845 0142 5A60     		str	r2, [r3, #4]
 24846 0144 0EE0     		b	.L11
 24847              	.L12:
 297:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 298:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 299:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 300:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable software trigger for the selected DAC channel */
 301:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR &= ~((uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4));
 24848              		.loc 1 301 0
 24849 0146 0A4B     		ldr	r3, .L14
 24850 0148 094A     		ldr	r2, .L14
 24851 014a 5168     		ldr	r1, [r2, #4]
 24852 014c 7A68     		ldr	r2, [r7, #4]
 24853 014e 4FEA1212 		lsr	r2, r2, #4
 24854 0152 4FF00100 		mov	r0, #1
 24855 0156 00FA02F2 		lsl	r2, r0, r2
 24856 015a 6FEA0202 		mvn	r2, r2
 24857 015e 01EA0202 		and	r2, r1, r2
 24858 0162 5A60     		str	r2, [r3, #4]
 24859              	.L11:
 302:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 303:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 24860              		.loc 1 303 0
 24861 0164 07F10C07 		add	r7, r7, #12
 24862 0168 BD46     		mov	sp, r7
 24863 016a 80BC     		pop	{r7}
 24864 016c 7047     		bx	lr
 24865              	.L15:
 24866 016e 00BF     		.align	2
 24867              	.L14:
 24868 0170 00740040 		.word	1073771520
 24869              		.cfi_endproc
 24870              	.LFE114:
 24872              		.align	2
 24873              		.global	DAC_DualSoftwareTriggerCmd
 24874              		.thumb
 24875              		.thumb_func
 24877              	DAC_DualSoftwareTriggerCmd:
 24878              	.LFB115:
 304:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 305:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 306:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables simultaneously the two DAC channels software triggers.
 307:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the DAC channels software triggers.
 308:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 309:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 310:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 311:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DualSoftwareTriggerCmd(FunctionalState NewState)
 312:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 24879              		.loc 1 312 0
 24880              		.cfi_startproc
 24881              		@ args = 0, pretend = 0, frame = 8
 24882              		@ frame_needed = 1, uses_anonymous_args = 0
 24883              		@ link register save eliminated.
 24884 0174 80B4     		push	{r7}
 24885              	.LCFI14:
 24886              		.cfi_def_cfa_offset 4
 24887 0176 83B0     		sub	sp, sp, #12
 24888              	.LCFI15:
 24889              		.cfi_def_cfa_offset 16
 24890 0178 00AF     		add	r7, sp, #0
 24891              		.cfi_offset 7, -4
 24892              	.LCFI16:
 24893              		.cfi_def_cfa_register 7
 24894 017a 0346     		mov	r3, r0
 24895 017c FB71     		strb	r3, [r7, #7]
 313:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 314:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 315:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 316:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 24896              		.loc 1 316 0
 24897 017e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24898 0180 002B     		cmp	r3, #0
 24899 0182 06D0     		beq	.L17
 317:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 318:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable software trigger for both DAC channels */
 319:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR |= DUAL_SWTRIG_SET;
 24900              		.loc 1 319 0
 24901 0184 084B     		ldr	r3, .L19
 24902 0186 084A     		ldr	r2, .L19
 24903 0188 5268     		ldr	r2, [r2, #4]
 24904 018a 42F00302 		orr	r2, r2, #3
 24905 018e 5A60     		str	r2, [r3, #4]
 24906 0190 05E0     		b	.L16
 24907              	.L17:
 320:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 321:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 322:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 323:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable software trigger for both DAC channels */
 324:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR &= DUAL_SWTRIG_RESET;
 24908              		.loc 1 324 0
 24909 0192 054B     		ldr	r3, .L19
 24910 0194 044A     		ldr	r2, .L19
 24911 0196 5268     		ldr	r2, [r2, #4]
 24912 0198 22F00302 		bic	r2, r2, #3
 24913 019c 5A60     		str	r2, [r3, #4]
 24914              	.L16:
 325:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 326:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 24915              		.loc 1 326 0
 24916 019e 07F10C07 		add	r7, r7, #12
 24917 01a2 BD46     		mov	sp, r7
 24918 01a4 80BC     		pop	{r7}
 24919 01a6 7047     		bx	lr
 24920              	.L20:
 24921              		.align	2
 24922              	.L19:
 24923 01a8 00740040 		.word	1073771520
 24924              		.cfi_endproc
 24925              	.LFE115:
 24927              		.align	2
 24928              		.global	DAC_WaveGenerationCmd
 24929              		.thumb
 24930              		.thumb_func
 24932              	DAC_WaveGenerationCmd:
 24933              	.LFB116:
 327:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 328:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 329:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the selected DAC channel wave generation.
 330:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 331:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 332:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 333:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 334:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Wave: specifies the wave type to enable or disable.
 335:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 336:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Wave_Noise: noise wave generation
 337:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Wave_Triangle: triangle wave generation
 338:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel wave generation.
 339:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.  
 340:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 341:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 342:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_WaveGenerationCmd(uint32_t DAC_Channel, uint32_t DAC_Wave, FunctionalState NewState)
 343:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 24934              		.loc 1 343 0
 24935              		.cfi_startproc
 24936              		@ args = 0, pretend = 0, frame = 16
 24937              		@ frame_needed = 1, uses_anonymous_args = 0
 24938              		@ link register save eliminated.
 24939 01ac 80B4     		push	{r7}
 24940              	.LCFI17:
 24941              		.cfi_def_cfa_offset 4
 24942 01ae 85B0     		sub	sp, sp, #20
 24943              	.LCFI18:
 24944              		.cfi_def_cfa_offset 24
 24945 01b0 00AF     		add	r7, sp, #0
 24946              		.cfi_offset 7, -4
 24947              	.LCFI19:
 24948              		.cfi_def_cfa_register 7
 24949 01b2 F860     		str	r0, [r7, #12]
 24950 01b4 B960     		str	r1, [r7, #8]
 24951 01b6 1346     		mov	r3, r2
 24952 01b8 FB71     		strb	r3, [r7, #7]
 344:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 345:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 346:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_WAVE(DAC_Wave)); 
 347:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 348:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 349:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 24953              		.loc 1 349 0
 24954 01ba FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24955 01bc 002B     		cmp	r3, #0
 24956 01be 0AD0     		beq	.L22
 350:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 351:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected wave generation for the selected DAC channel */
 352:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= DAC_Wave << DAC_Channel;
 24957              		.loc 1 352 0
 24958 01c0 0D4B     		ldr	r3, .L24
 24959 01c2 0D4A     		ldr	r2, .L24
 24960 01c4 1168     		ldr	r1, [r2, #0]
 24961 01c6 FA68     		ldr	r2, [r7, #12]
 24962 01c8 B868     		ldr	r0, [r7, #8]
 24963 01ca 00FA02F2 		lsl	r2, r0, r2
 24964 01ce 41EA0202 		orr	r2, r1, r2
 24965 01d2 1A60     		str	r2, [r3, #0]
 24966 01d4 0BE0     		b	.L21
 24967              	.L22:
 353:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 354:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 355:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 356:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected wave generation for the selected DAC channel */
 357:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= ~(DAC_Wave << DAC_Channel);
 24968              		.loc 1 357 0
 24969 01d6 084B     		ldr	r3, .L24
 24970 01d8 074A     		ldr	r2, .L24
 24971 01da 1168     		ldr	r1, [r2, #0]
 24972 01dc FA68     		ldr	r2, [r7, #12]
 24973 01de B868     		ldr	r0, [r7, #8]
 24974 01e0 00FA02F2 		lsl	r2, r0, r2
 24975 01e4 6FEA0202 		mvn	r2, r2
 24976 01e8 01EA0202 		and	r2, r1, r2
 24977 01ec 1A60     		str	r2, [r3, #0]
 24978              	.L21:
 358:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 359:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 24979              		.loc 1 359 0
 24980 01ee 07F11407 		add	r7, r7, #20
 24981 01f2 BD46     		mov	sp, r7
 24982 01f4 80BC     		pop	{r7}
 24983 01f6 7047     		bx	lr
 24984              	.L25:
 24985              		.align	2
 24986              	.L24:
 24987 01f8 00740040 		.word	1073771520
 24988              		.cfi_endproc
 24989              	.LFE116:
 24991              		.align	2
 24992              		.global	DAC_SetChannel1Data
 24993              		.thumb
 24994              		.thumb_func
 24996              	DAC_SetChannel1Data:
 24997              	.LFB117:
 360:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 361:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 362:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for DAC channel1.
 363:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel1.
 364:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 365:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 366:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 367:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 368:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data: Data to be loaded in the selected data holding register.
 369:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 370:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 371:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetChannel1Data(uint32_t DAC_Align, uint16_t Data)
 372:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {  
 24998              		.loc 1 372 0
 24999              		.cfi_startproc
 25000              		@ args = 0, pretend = 0, frame = 16
 25001              		@ frame_needed = 1, uses_anonymous_args = 0
 25002              		@ link register save eliminated.
 25003 01fc 80B4     		push	{r7}
 25004              	.LCFI20:
 25005              		.cfi_def_cfa_offset 4
 25006 01fe 85B0     		sub	sp, sp, #20
 25007              	.LCFI21:
 25008              		.cfi_def_cfa_offset 24
 25009 0200 00AF     		add	r7, sp, #0
 25010              		.cfi_offset 7, -4
 25011              	.LCFI22:
 25012              		.cfi_def_cfa_register 7
 25013 0202 7860     		str	r0, [r7, #4]
 25014 0204 0B46     		mov	r3, r1
 25015 0206 7B80     		strh	r3, [r7, #2]	@ movhi
 373:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 25016              		.loc 1 373 0
 25017 0208 4FF00003 		mov	r3, #0
 25018 020c FB60     		str	r3, [r7, #12]
 374:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 375:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 376:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 377:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data));
 378:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 379:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE; 
 25019              		.loc 1 379 0
 25020 020e 084B     		ldr	r3, .L27
 25021 0210 FB60     		str	r3, [r7, #12]
 380:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12R1_OFFSET + DAC_Align;
 25022              		.loc 1 380 0
 25023 0212 FA68     		ldr	r2, [r7, #12]
 25024 0214 7B68     		ldr	r3, [r7, #4]
 25025 0216 D318     		adds	r3, r2, r3
 25026 0218 03F10803 		add	r3, r3, #8
 25027 021c FB60     		str	r3, [r7, #12]
 381:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 382:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the DAC channel1 selected data holding register */
 383:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *) tmp = Data;
 25028              		.loc 1 383 0
 25029 021e FB68     		ldr	r3, [r7, #12]
 25030 0220 7A88     		ldrh	r2, [r7, #2]
 25031 0222 1A60     		str	r2, [r3, #0]
 384:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 25032              		.loc 1 384 0
 25033 0224 07F11407 		add	r7, r7, #20
 25034 0228 BD46     		mov	sp, r7
 25035 022a 80BC     		pop	{r7}
 25036 022c 7047     		bx	lr
 25037              	.L28:
 25038 022e 00BF     		.align	2
 25039              	.L27:
 25040 0230 00740040 		.word	1073771520
 25041              		.cfi_endproc
 25042              	.LFE117:
 25044              		.align	2
 25045              		.global	DAC_SetChannel2Data
 25046              		.thumb
 25047              		.thumb_func
 25049              	DAC_SetChannel2Data:
 25050              	.LFB118:
 385:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 386:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 387:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for DAC channel2.
 388:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel2.
 389:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 390:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 391:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 392:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 393:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data: Data to be loaded in the selected data holding register.
 394:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 395:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 396:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetChannel2Data(uint32_t DAC_Align, uint16_t Data)
 397:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 25051              		.loc 1 397 0
 25052              		.cfi_startproc
 25053              		@ args = 0, pretend = 0, frame = 16
 25054              		@ frame_needed = 1, uses_anonymous_args = 0
 25055              		@ link register save eliminated.
 25056 0234 80B4     		push	{r7}
 25057              	.LCFI23:
 25058              		.cfi_def_cfa_offset 4
 25059 0236 85B0     		sub	sp, sp, #20
 25060              	.LCFI24:
 25061              		.cfi_def_cfa_offset 24
 25062 0238 00AF     		add	r7, sp, #0
 25063              		.cfi_offset 7, -4
 25064              	.LCFI25:
 25065              		.cfi_def_cfa_register 7
 25066 023a 7860     		str	r0, [r7, #4]
 25067 023c 0B46     		mov	r3, r1
 25068 023e 7B80     		strh	r3, [r7, #2]	@ movhi
 398:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 25069              		.loc 1 398 0
 25070 0240 4FF00003 		mov	r3, #0
 25071 0244 FB60     		str	r3, [r7, #12]
 399:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 400:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 401:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 402:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data));
 403:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 404:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE;
 25072              		.loc 1 404 0
 25073 0246 084B     		ldr	r3, .L30
 25074 0248 FB60     		str	r3, [r7, #12]
 405:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12R2_OFFSET + DAC_Align;
 25075              		.loc 1 405 0
 25076 024a FA68     		ldr	r2, [r7, #12]
 25077 024c 7B68     		ldr	r3, [r7, #4]
 25078 024e D318     		adds	r3, r2, r3
 25079 0250 03F11403 		add	r3, r3, #20
 25080 0254 FB60     		str	r3, [r7, #12]
 406:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 407:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the DAC channel2 selected data holding register */
 408:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *)tmp = Data;
 25081              		.loc 1 408 0
 25082 0256 FB68     		ldr	r3, [r7, #12]
 25083 0258 7A88     		ldrh	r2, [r7, #2]
 25084 025a 1A60     		str	r2, [r3, #0]
 409:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 25085              		.loc 1 409 0
 25086 025c 07F11407 		add	r7, r7, #20
 25087 0260 BD46     		mov	sp, r7
 25088 0262 80BC     		pop	{r7}
 25089 0264 7047     		bx	lr
 25090              	.L31:
 25091 0266 00BF     		.align	2
 25092              	.L30:
 25093 0268 00740040 		.word	1073771520
 25094              		.cfi_endproc
 25095              	.LFE118:
 25097              		.align	2
 25098              		.global	DAC_SetDualChannelData
 25099              		.thumb
 25100              		.thumb_func
 25102              	DAC_SetDualChannelData:
 25103              	.LFB119:
 410:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 411:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 412:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for dual channel DAC.
 413:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for dual channel DAC.
 414:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 415:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 416:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 417:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 418:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data2: Data for DAC Channel2 to be loaded in the selected data holding register.
 419:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data1: Data for DAC Channel1 to be loaded in the selected data  holding register.
 420:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   In dual mode, a unique register access is required to write in both
 421:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC channels at the same time.
 422:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 423:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 424:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetDualChannelData(uint32_t DAC_Align, uint16_t Data2, uint16_t Data1)
 425:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 25104              		.loc 1 425 0
 25105              		.cfi_startproc
 25106              		@ args = 0, pretend = 0, frame = 16
 25107              		@ frame_needed = 1, uses_anonymous_args = 0
 25108              		@ link register save eliminated.
 25109 026c 80B4     		push	{r7}
 25110              	.LCFI26:
 25111              		.cfi_def_cfa_offset 4
 25112 026e 85B0     		sub	sp, sp, #20
 25113              	.LCFI27:
 25114              		.cfi_def_cfa_offset 24
 25115 0270 00AF     		add	r7, sp, #0
 25116              		.cfi_offset 7, -4
 25117              	.LCFI28:
 25118              		.cfi_def_cfa_register 7
 25119 0272 7860     		str	r0, [r7, #4]
 25120 0274 1346     		mov	r3, r2
 25121 0276 0A46     		mov	r2, r1	@ movhi
 25122 0278 7A80     		strh	r2, [r7, #2]	@ movhi
 25123 027a 3B80     		strh	r3, [r7, #0]	@ movhi
 426:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t data = 0, tmp = 0;
 25124              		.loc 1 426 0
 25125 027c 4FF00003 		mov	r3, #0
 25126 0280 FB60     		str	r3, [r7, #12]
 25127 0282 4FF00003 		mov	r3, #0
 25128 0286 BB60     		str	r3, [r7, #8]
 427:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 428:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 429:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 430:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data1));
 431:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data2));
 432:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 433:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Calculate and set dual DAC data holding register value */
 434:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (DAC_Align == DAC_Align_8b_R)
 25129              		.loc 1 434 0
 25130 0288 7B68     		ldr	r3, [r7, #4]
 25131 028a 082B     		cmp	r3, #8
 25132 028c 07D1     		bne	.L33
 435:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 436:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     data = ((uint32_t)Data2 << 8) | Data1; 
 25133              		.loc 1 436 0
 25134 028e 7B88     		ldrh	r3, [r7, #2]
 25135 0290 4FEA0322 		lsl	r2, r3, #8
 25136 0294 3B88     		ldrh	r3, [r7, #0]
 25137 0296 42EA0303 		orr	r3, r2, r3
 25138 029a FB60     		str	r3, [r7, #12]
 25139 029c 06E0     		b	.L34
 25140              	.L33:
 437:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 438:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 439:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 440:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     data = ((uint32_t)Data2 << 16) | Data1;
 25141              		.loc 1 440 0
 25142 029e 7B88     		ldrh	r3, [r7, #2]
 25143 02a0 4FEA0342 		lsl	r2, r3, #16
 25144 02a4 3B88     		ldrh	r3, [r7, #0]
 25145 02a6 42EA0303 		orr	r3, r2, r3
 25146 02aa FB60     		str	r3, [r7, #12]
 25147              	.L34:
 441:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 442:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 443:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE;
 25148              		.loc 1 443 0
 25149 02ac 074B     		ldr	r3, .L35
 25150 02ae BB60     		str	r3, [r7, #8]
 444:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12RD_OFFSET + DAC_Align;
 25151              		.loc 1 444 0
 25152 02b0 7A68     		ldr	r2, [r7, #4]
 25153 02b2 BB68     		ldr	r3, [r7, #8]
 25154 02b4 D318     		adds	r3, r2, r3
 25155 02b6 03F12003 		add	r3, r3, #32
 25156 02ba BB60     		str	r3, [r7, #8]
 445:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 446:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the dual DAC selected data holding register */
 447:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *)tmp = data;
 25157              		.loc 1 447 0
 25158 02bc BB68     		ldr	r3, [r7, #8]
 25159 02be FA68     		ldr	r2, [r7, #12]
 25160 02c0 1A60     		str	r2, [r3, #0]
 448:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 25161              		.loc 1 448 0
 25162 02c2 07F11407 		add	r7, r7, #20
 25163 02c6 BD46     		mov	sp, r7
 25164 02c8 80BC     		pop	{r7}
 25165 02ca 7047     		bx	lr
 25166              	.L36:
 25167              		.align	2
 25168              	.L35:
 25169 02cc 00740040 		.word	1073771520
 25170              		.cfi_endproc
 25171              	.LFE119:
 25173              		.align	2
 25174              		.global	DAC_GetDataOutputValue
 25175              		.thumb
 25176              		.thumb_func
 25178              	DAC_GetDataOutputValue:
 25179              	.LFB120:
 449:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 450:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 451:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Returns the last data output value of the selected DAC channel.
 452:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 453:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 454:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 455:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 456:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The selected DAC channel data output value.
 457:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 458:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** uint16_t DAC_GetDataOutputValue(uint32_t DAC_Channel)
 459:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 25180              		.loc 1 459 0
 25181              		.cfi_startproc
 25182              		@ args = 0, pretend = 0, frame = 16
 25183              		@ frame_needed = 1, uses_anonymous_args = 0
 25184              		@ link register save eliminated.
 25185 02d0 80B4     		push	{r7}
 25186              	.LCFI29:
 25187              		.cfi_def_cfa_offset 4
 25188 02d2 85B0     		sub	sp, sp, #20
 25189              	.LCFI30:
 25190              		.cfi_def_cfa_offset 24
 25191 02d4 00AF     		add	r7, sp, #0
 25192              		.cfi_offset 7, -4
 25193              	.LCFI31:
 25194              		.cfi_def_cfa_register 7
 25195 02d6 7860     		str	r0, [r7, #4]
 460:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 25196              		.loc 1 460 0
 25197 02d8 4FF00003 		mov	r3, #0
 25198 02dc FB60     		str	r3, [r7, #12]
 461:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 462:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 463:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 464:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 465:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t) DAC_BASE ;
 25199              		.loc 1 465 0
 25200 02de 094B     		ldr	r3, .L38
 25201 02e0 FB60     		str	r3, [r7, #12]
 466:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DOR_OFFSET + ((uint32_t)DAC_Channel >> 2);
 25202              		.loc 1 466 0
 25203 02e2 7B68     		ldr	r3, [r7, #4]
 25204 02e4 4FEA9302 		lsr	r2, r3, #2
 25205 02e8 FB68     		ldr	r3, [r7, #12]
 25206 02ea D318     		adds	r3, r2, r3
 25207 02ec 03F12C03 		add	r3, r3, #44
 25208 02f0 FB60     		str	r3, [r7, #12]
 467:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 468:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Returns the DAC channel data output register value */
 469:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return (uint16_t) (*(__IO uint32_t*) tmp);
 25209              		.loc 1 469 0
 25210 02f2 FB68     		ldr	r3, [r7, #12]
 25211 02f4 1B68     		ldr	r3, [r3, #0]
 25212 02f6 9BB2     		uxth	r3, r3
 470:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 25213              		.loc 1 470 0
 25214 02f8 1846     		mov	r0, r3
 25215 02fa 07F11407 		add	r7, r7, #20
 25216 02fe BD46     		mov	sp, r7
 25217 0300 80BC     		pop	{r7}
 25218 0302 7047     		bx	lr
 25219              	.L39:
 25220              		.align	2
 25221              	.L38:
 25222 0304 00740040 		.word	1073771520
 25223              		.cfi_endproc
 25224              	.LFE120:
 25226              		.align	2
 25227              		.global	DAC_DMACmd
 25228              		.thumb
 25229              		.thumb_func
 25231              	DAC_DMACmd:
 25232              	.LFB121:
 471:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 472:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @}
 473:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 474:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 475:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group2 DMA management functions
 476:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   DMA management functions
 477:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 478:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 479:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 480:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****                           DMA management functions
 481:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 482:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 483:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 484:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 485:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 486:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 487:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 488:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC channel DMA request.
 489:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   When enabled DMA1 is generated when an external trigger (EXTI Line9,
 490:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         TIM2, TIM4, TIM5, TIM6, TIM7 or TIM8  but not a software trigger) occurs.
 491:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 492:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 493:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 494:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 495:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel DMA request.
 496:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 497:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DAC channel1 is mapped on DMA1 Stream 5 channel7 which must be
 498:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          already configured.
 499:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DAC channel2 is mapped on DMA1 Stream 6 channel7 which must be
 500:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          already configured.    
 501:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 502:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 503:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DMACmd(uint32_t DAC_Channel, FunctionalState NewState)
 504:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 25233              		.loc 1 504 0
 25234              		.cfi_startproc
 25235              		@ args = 0, pretend = 0, frame = 8
 25236              		@ frame_needed = 1, uses_anonymous_args = 0
 25237              		@ link register save eliminated.
 25238 0308 80B4     		push	{r7}
 25239              	.LCFI32:
 25240              		.cfi_def_cfa_offset 4
 25241 030a 83B0     		sub	sp, sp, #12
 25242              	.LCFI33:
 25243              		.cfi_def_cfa_offset 16
 25244 030c 00AF     		add	r7, sp, #0
 25245              		.cfi_offset 7, -4
 25246              	.LCFI34:
 25247              		.cfi_def_cfa_register 7
 25248 030e 7860     		str	r0, [r7, #4]
 25249 0310 0B46     		mov	r3, r1
 25250 0312 FB70     		strb	r3, [r7, #3]
 505:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 506:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 507:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 508:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 509:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 25251              		.loc 1 509 0
 25252 0314 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 25253 0316 002B     		cmp	r3, #0
 25254 0318 0BD0     		beq	.L41
 510:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 511:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC channel DMA request */
 512:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= (DAC_CR_DMAEN1 << DAC_Channel);
 25255              		.loc 1 512 0
 25256 031a 0F4B     		ldr	r3, .L43
 25257 031c 0E4A     		ldr	r2, .L43
 25258 031e 1168     		ldr	r1, [r2, #0]
 25259 0320 7A68     		ldr	r2, [r7, #4]
 25260 0322 4FF48050 		mov	r0, #4096
 25261 0326 00FA02F2 		lsl	r2, r0, r2
 25262 032a 41EA0202 		orr	r2, r1, r2
 25263 032e 1A60     		str	r2, [r3, #0]
 25264 0330 0CE0     		b	.L40
 25265              	.L41:
 513:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 514:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 515:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 516:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC channel DMA request */
 517:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(DAC_CR_DMAEN1 << DAC_Channel));
 25266              		.loc 1 517 0
 25267 0332 094B     		ldr	r3, .L43
 25268 0334 084A     		ldr	r2, .L43
 25269 0336 1168     		ldr	r1, [r2, #0]
 25270 0338 7A68     		ldr	r2, [r7, #4]
 25271 033a 4FF48050 		mov	r0, #4096
 25272 033e 00FA02F2 		lsl	r2, r0, r2
 25273 0342 6FEA0202 		mvn	r2, r2
 25274 0346 01EA0202 		and	r2, r1, r2
 25275 034a 1A60     		str	r2, [r3, #0]
 25276              	.L40:
 518:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 519:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 25277              		.loc 1 519 0
 25278 034c 07F10C07 		add	r7, r7, #12
 25279 0350 BD46     		mov	sp, r7
 25280 0352 80BC     		pop	{r7}
 25281 0354 7047     		bx	lr
 25282              	.L44:
 25283 0356 00BF     		.align	2
 25284              	.L43:
 25285 0358 00740040 		.word	1073771520
 25286              		.cfi_endproc
 25287              	.LFE121:
 25289              		.align	2
 25290              		.global	DAC_ITConfig
 25291              		.thumb
 25292              		.thumb_func
 25294              	DAC_ITConfig:
 25295              	.LFB122:
 520:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 521:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @}
 522:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 523:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 524:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group3 Interrupts and flags management functions
 525:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   Interrupts and flags management functions
 526:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 527:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 528:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 529:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****                    Interrupts and flags management functions
 530:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 531:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 532:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 533:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 534:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 535:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 536:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 537:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC interrupts.
 538:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 539:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 540:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 541:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 542:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt sources to be enabled or disabled. 
 543:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 544:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask
 545:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 546:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 547:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the specified DAC interrupts.
 548:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 549:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 550:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 551:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ITConfig(uint32_t DAC_Channel, uint32_t DAC_IT, FunctionalState NewState)  
 552:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 25296              		.loc 1 552 0
 25297              		.cfi_startproc
 25298              		@ args = 0, pretend = 0, frame = 16
 25299              		@ frame_needed = 1, uses_anonymous_args = 0
 25300              		@ link register save eliminated.
 25301 035c 80B4     		push	{r7}
 25302              	.LCFI35:
 25303              		.cfi_def_cfa_offset 4
 25304 035e 85B0     		sub	sp, sp, #20
 25305              	.LCFI36:
 25306              		.cfi_def_cfa_offset 24
 25307 0360 00AF     		add	r7, sp, #0
 25308              		.cfi_offset 7, -4
 25309              	.LCFI37:
 25310              		.cfi_def_cfa_register 7
 25311 0362 F860     		str	r0, [r7, #12]
 25312 0364 B960     		str	r1, [r7, #8]
 25313 0366 1346     		mov	r3, r2
 25314 0368 FB71     		strb	r3, [r7, #7]
 553:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 554:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 555:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 556:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 557:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 558:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 25315              		.loc 1 558 0
 25316 036a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 25317 036c 002B     		cmp	r3, #0
 25318 036e 0AD0     		beq	.L46
 559:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 560:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC interrupts */
 561:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |=  (DAC_IT << DAC_Channel);
 25319              		.loc 1 561 0
 25320 0370 0D4B     		ldr	r3, .L48
 25321 0372 0D4A     		ldr	r2, .L48
 25322 0374 1168     		ldr	r1, [r2, #0]
 25323 0376 FA68     		ldr	r2, [r7, #12]
 25324 0378 B868     		ldr	r0, [r7, #8]
 25325 037a 00FA02F2 		lsl	r2, r0, r2
 25326 037e 41EA0202 		orr	r2, r1, r2
 25327 0382 1A60     		str	r2, [r3, #0]
 25328 0384 0BE0     		b	.L45
 25329              	.L46:
 562:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 563:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 564:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 565:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC interrupts */
 566:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(uint32_t)(DAC_IT << DAC_Channel));
 25330              		.loc 1 566 0
 25331 0386 084B     		ldr	r3, .L48
 25332 0388 074A     		ldr	r2, .L48
 25333 038a 1168     		ldr	r1, [r2, #0]
 25334 038c FA68     		ldr	r2, [r7, #12]
 25335 038e B868     		ldr	r0, [r7, #8]
 25336 0390 00FA02F2 		lsl	r2, r0, r2
 25337 0394 6FEA0202 		mvn	r2, r2
 25338 0398 01EA0202 		and	r2, r1, r2
 25339 039c 1A60     		str	r2, [r3, #0]
 25340              	.L45:
 567:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 568:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 25341              		.loc 1 568 0
 25342 039e 07F11407 		add	r7, r7, #20
 25343 03a2 BD46     		mov	sp, r7
 25344 03a4 80BC     		pop	{r7}
 25345 03a6 7047     		bx	lr
 25346              	.L49:
 25347              		.align	2
 25348              	.L48:
 25349 03a8 00740040 		.word	1073771520
 25350              		.cfi_endproc
 25351              	.LFE122:
 25353              		.align	2
 25354              		.global	DAC_GetFlagStatus
 25355              		.thumb
 25356              		.thumb_func
 25358              	DAC_GetFlagStatus:
 25359              	.LFB123:
 569:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 570:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 571:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Checks whether the specified DAC flag is set or not.
 572:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 573:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 574:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 575:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 576:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_FLAG: specifies the flag to check. 
 577:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be only of the following value:
 578:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_FLAG_DMAUDR: DMA underrun flag
 579:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 580:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 581:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The new state of DAC_FLAG (SET or RESET).
 582:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 583:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** FlagStatus DAC_GetFlagStatus(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 584:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 25360              		.loc 1 584 0
 25361              		.cfi_startproc
 25362              		@ args = 0, pretend = 0, frame = 16
 25363              		@ frame_needed = 1, uses_anonymous_args = 0
 25364              		@ link register save eliminated.
 25365 03ac 80B4     		push	{r7}
 25366              	.LCFI38:
 25367              		.cfi_def_cfa_offset 4
 25368 03ae 85B0     		sub	sp, sp, #20
 25369              	.LCFI39:
 25370              		.cfi_def_cfa_offset 24
 25371 03b0 00AF     		add	r7, sp, #0
 25372              		.cfi_offset 7, -4
 25373              	.LCFI40:
 25374              		.cfi_def_cfa_register 7
 25375 03b2 7860     		str	r0, [r7, #4]
 25376 03b4 3960     		str	r1, [r7, #0]
 585:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   FlagStatus bitstatus = RESET;
 25377              		.loc 1 585 0
 25378 03b6 4FF00003 		mov	r3, #0
 25379 03ba FB73     		strb	r3, [r7, #15]
 586:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 587:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 588:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 589:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 590:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the status of the specified DAC flag */
 591:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if ((DAC->SR & (DAC_FLAG << DAC_Channel)) != (uint8_t)RESET)
 25380              		.loc 1 591 0
 25381 03bc 0B4B     		ldr	r3, .L53
 25382 03be 5A6B     		ldr	r2, [r3, #52]
 25383 03c0 7B68     		ldr	r3, [r7, #4]
 25384 03c2 3968     		ldr	r1, [r7, #0]
 25385 03c4 01FA03F3 		lsl	r3, r1, r3
 25386 03c8 02EA0303 		and	r3, r2, r3
 25387 03cc 002B     		cmp	r3, #0
 25388 03ce 03D0     		beq	.L51
 592:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 593:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_FLAG is set */
 594:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = SET;
 25389              		.loc 1 594 0
 25390 03d0 4FF00103 		mov	r3, #1
 25391 03d4 FB73     		strb	r3, [r7, #15]
 25392 03d6 02E0     		b	.L52
 25393              	.L51:
 595:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 596:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 597:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 598:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_FLAG is reset */
 599:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = RESET;
 25394              		.loc 1 599 0
 25395 03d8 4FF00003 		mov	r3, #0
 25396 03dc FB73     		strb	r3, [r7, #15]
 25397              	.L52:
 600:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 601:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Return the DAC_FLAG status */
 602:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return  bitstatus;
 25398              		.loc 1 602 0
 25399 03de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 603:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 25400              		.loc 1 603 0
 25401 03e0 1846     		mov	r0, r3
 25402 03e2 07F11407 		add	r7, r7, #20
 25403 03e6 BD46     		mov	sp, r7
 25404 03e8 80BC     		pop	{r7}
 25405 03ea 7047     		bx	lr
 25406              	.L54:
 25407              		.align	2
 25408              	.L53:
 25409 03ec 00740040 		.word	1073771520
 25410              		.cfi_endproc
 25411              	.LFE123:
 25413              		.align	2
 25414              		.global	DAC_ClearFlag
 25415              		.thumb
 25416              		.thumb_func
 25418              	DAC_ClearFlag:
 25419              	.LFB124:
 604:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 605:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 606:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Clears the DAC channel's pending flags.
 607:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 608:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 609:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 610:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 611:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_FLAG: specifies the flag to clear. 
 612:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be of the following value:
 613:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_FLAG_DMAUDR: DMA underrun flag 
 614:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 615:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).            
 616:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 617:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 618:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ClearFlag(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 619:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 25420              		.loc 1 619 0
 25421              		.cfi_startproc
 25422              		@ args = 0, pretend = 0, frame = 8
 25423              		@ frame_needed = 1, uses_anonymous_args = 0
 25424              		@ link register save eliminated.
 25425 03f0 80B4     		push	{r7}
 25426              	.LCFI41:
 25427              		.cfi_def_cfa_offset 4
 25428 03f2 83B0     		sub	sp, sp, #12
 25429              	.LCFI42:
 25430              		.cfi_def_cfa_offset 16
 25431 03f4 00AF     		add	r7, sp, #0
 25432              		.cfi_offset 7, -4
 25433              	.LCFI43:
 25434              		.cfi_def_cfa_register 7
 25435 03f6 7860     		str	r0, [r7, #4]
 25436 03f8 3960     		str	r1, [r7, #0]
 620:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 621:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 622:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 623:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 624:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear the selected DAC flags */
 625:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->SR = (DAC_FLAG << DAC_Channel);
 25437              		.loc 1 625 0
 25438 03fa 054B     		ldr	r3, .L56
 25439 03fc 7A68     		ldr	r2, [r7, #4]
 25440 03fe 3968     		ldr	r1, [r7, #0]
 25441 0400 01FA02F2 		lsl	r2, r1, r2
 25442 0404 5A63     		str	r2, [r3, #52]
 626:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 25443              		.loc 1 626 0
 25444 0406 07F10C07 		add	r7, r7, #12
 25445 040a BD46     		mov	sp, r7
 25446 040c 80BC     		pop	{r7}
 25447 040e 7047     		bx	lr
 25448              	.L57:
 25449              		.align	2
 25450              	.L56:
 25451 0410 00740040 		.word	1073771520
 25452              		.cfi_endproc
 25453              	.LFE124:
 25455              		.align	2
 25456              		.global	DAC_GetITStatus
 25457              		.thumb
 25458              		.thumb_func
 25460              	DAC_GetITStatus:
 25461              	.LFB125:
 627:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 628:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 629:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Checks whether the specified DAC interrupt has occurred or not.
 630:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 631:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 632:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 633:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 634:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt source to check. 
 635:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 636:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask
 637:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 638:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 639:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The new state of DAC_IT (SET or RESET).
 640:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 641:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** ITStatus DAC_GetITStatus(uint32_t DAC_Channel, uint32_t DAC_IT)
 642:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 25462              		.loc 1 642 0
 25463              		.cfi_startproc
 25464              		@ args = 0, pretend = 0, frame = 16
 25465              		@ frame_needed = 1, uses_anonymous_args = 0
 25466              		@ link register save eliminated.
 25467 0414 80B4     		push	{r7}
 25468              	.LCFI44:
 25469              		.cfi_def_cfa_offset 4
 25470 0416 85B0     		sub	sp, sp, #20
 25471              	.LCFI45:
 25472              		.cfi_def_cfa_offset 24
 25473 0418 00AF     		add	r7, sp, #0
 25474              		.cfi_offset 7, -4
 25475              	.LCFI46:
 25476              		.cfi_def_cfa_register 7
 25477 041a 7860     		str	r0, [r7, #4]
 25478 041c 3960     		str	r1, [r7, #0]
 643:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ITStatus bitstatus = RESET;
 25479              		.loc 1 643 0
 25480 041e 4FF00003 		mov	r3, #0
 25481 0422 FB73     		strb	r3, [r7, #15]
 644:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t enablestatus = 0;
 25482              		.loc 1 644 0
 25483 0424 4FF00003 		mov	r3, #0
 25484 0428 BB60     		str	r3, [r7, #8]
 645:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 646:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 647:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 648:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT));
 649:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 650:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Get the DAC_IT enable bit status */
 651:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   enablestatus = (DAC->CR & (DAC_IT << DAC_Channel)) ;
 25485              		.loc 1 651 0
 25486 042a 124B     		ldr	r3, .L61
 25487 042c 1A68     		ldr	r2, [r3, #0]
 25488 042e 7B68     		ldr	r3, [r7, #4]
 25489 0430 3968     		ldr	r1, [r7, #0]
 25490 0432 01FA03F3 		lsl	r3, r1, r3
 25491 0436 02EA0303 		and	r3, r2, r3
 25492 043a BB60     		str	r3, [r7, #8]
 652:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 653:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the status of the specified DAC interrupt */
 654:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (((DAC->SR & (DAC_IT << DAC_Channel)) != (uint32_t)RESET) && enablestatus)
 25493              		.loc 1 654 0
 25494 043c 0D4B     		ldr	r3, .L61
 25495 043e 5A6B     		ldr	r2, [r3, #52]
 25496 0440 7B68     		ldr	r3, [r7, #4]
 25497 0442 3968     		ldr	r1, [r7, #0]
 25498 0444 01FA03F3 		lsl	r3, r1, r3
 25499 0448 02EA0303 		and	r3, r2, r3
 25500 044c 002B     		cmp	r3, #0
 25501 044e 06D0     		beq	.L59
 25502              		.loc 1 654 0 is_stmt 0 discriminator 1
 25503 0450 BB68     		ldr	r3, [r7, #8]
 25504 0452 002B     		cmp	r3, #0
 25505 0454 03D0     		beq	.L59
 655:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 656:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_IT is set */
 657:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = SET;
 25506              		.loc 1 657 0 is_stmt 1
 25507 0456 4FF00103 		mov	r3, #1
 25508 045a FB73     		strb	r3, [r7, #15]
 25509 045c 02E0     		b	.L60
 25510              	.L59:
 658:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 659:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 660:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 661:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_IT is reset */
 662:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = RESET;
 25511              		.loc 1 662 0
 25512 045e 4FF00003 		mov	r3, #0
 25513 0462 FB73     		strb	r3, [r7, #15]
 25514              	.L60:
 663:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 664:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Return the DAC_IT status */
 665:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return  bitstatus;
 25515              		.loc 1 665 0
 25516 0464 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 666:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 25517              		.loc 1 666 0
 25518 0466 1846     		mov	r0, r3
 25519 0468 07F11407 		add	r7, r7, #20
 25520 046c BD46     		mov	sp, r7
 25521 046e 80BC     		pop	{r7}
 25522 0470 7047     		bx	lr
 25523              	.L62:
 25524 0472 00BF     		.align	2
 25525              	.L61:
 25526 0474 00740040 		.word	1073771520
 25527              		.cfi_endproc
 25528              	.LFE125:
 25530              		.align	2
 25531              		.global	DAC_ClearITPendingBit
 25532              		.thumb
 25533              		.thumb_func
 25535              	DAC_ClearITPendingBit:
 25536              	.LFB126:
 667:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 668:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 669:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Clears the DAC channel's interrupt pending bits.
 670:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 671:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 672:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 673:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 674:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt pending bit to clear.
 675:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 676:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask                         
 677:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 678:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).            
 679:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 680:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 681:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ClearITPendingBit(uint32_t DAC_Channel, uint32_t DAC_IT)
 682:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 25537              		.loc 1 682 0
 25538              		.cfi_startproc
 25539              		@ args = 0, pretend = 0, frame = 8
 25540              		@ frame_needed = 1, uses_anonymous_args = 0
 25541              		@ link register save eliminated.
 25542 0478 80B4     		push	{r7}
 25543              	.LCFI47:
 25544              		.cfi_def_cfa_offset 4
 25545 047a 83B0     		sub	sp, sp, #12
 25546              	.LCFI48:
 25547              		.cfi_def_cfa_offset 16
 25548 047c 00AF     		add	r7, sp, #0
 25549              		.cfi_offset 7, -4
 25550              	.LCFI49:
 25551              		.cfi_def_cfa_register 7
 25552 047e 7860     		str	r0, [r7, #4]
 25553 0480 3960     		str	r1, [r7, #0]
 683:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 684:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 685:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 686:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 687:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear the selected DAC interrupt pending bits */
 688:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->SR = (DAC_IT << DAC_Channel);
 25554              		.loc 1 688 0
 25555 0482 054B     		ldr	r3, .L64
 25556 0484 7A68     		ldr	r2, [r7, #4]
 25557 0486 3968     		ldr	r1, [r7, #0]
 25558 0488 01FA02F2 		lsl	r2, r1, r2
 25559 048c 5A63     		str	r2, [r3, #52]
 689:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 25560              		.loc 1 689 0
 25561 048e 07F10C07 		add	r7, r7, #12
 25562 0492 BD46     		mov	sp, r7
 25563 0494 80BC     		pop	{r7}
 25564 0496 7047     		bx	lr
 25565              	.L65:
 25566              		.align	2
 25567              	.L64:
 25568 0498 00740040 		.word	1073771520
 25569              		.cfi_endproc
 25570              	.LFE126:
 25572              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_dac.c
     /tmp/cczcdrrQ.s:24584  .text:00000000 $t
     /tmp/cczcdrrQ.s:24589  .text:00000000 DAC_DeInit
     /tmp/cczcdrrQ.s:24621  .text:00000020 DAC_Init
     /tmp/cczcdrrQ.s:24693  .text:0000008c $d
     /tmp/cczcdrrQ.s:24697  .text:00000090 $t
     /tmp/cczcdrrQ.s:24702  .text:00000090 DAC_StructInit
     /tmp/cczcdrrQ.s:24749  .text:000000c4 DAC_Cmd
     /tmp/cczcdrrQ.s:24803  .text:00000114 $d
     /tmp/cczcdrrQ.s:24807  .text:00000118 $t
     /tmp/cczcdrrQ.s:24812  .text:00000118 DAC_SoftwareTriggerCmd
     /tmp/cczcdrrQ.s:24868  .text:00000170 $d
     /tmp/cczcdrrQ.s:24872  .text:00000174 $t
     /tmp/cczcdrrQ.s:24877  .text:00000174 DAC_DualSoftwareTriggerCmd
     /tmp/cczcdrrQ.s:24923  .text:000001a8 $d
     /tmp/cczcdrrQ.s:24927  .text:000001ac $t
     /tmp/cczcdrrQ.s:24932  .text:000001ac DAC_WaveGenerationCmd
     /tmp/cczcdrrQ.s:24987  .text:000001f8 $d
     /tmp/cczcdrrQ.s:24991  .text:000001fc $t
     /tmp/cczcdrrQ.s:24996  .text:000001fc DAC_SetChannel1Data
     /tmp/cczcdrrQ.s:25040  .text:00000230 $d
     /tmp/cczcdrrQ.s:25044  .text:00000234 $t
     /tmp/cczcdrrQ.s:25049  .text:00000234 DAC_SetChannel2Data
     /tmp/cczcdrrQ.s:25093  .text:00000268 $d
     /tmp/cczcdrrQ.s:25097  .text:0000026c $t
     /tmp/cczcdrrQ.s:25102  .text:0000026c DAC_SetDualChannelData
     /tmp/cczcdrrQ.s:25169  .text:000002cc $d
     /tmp/cczcdrrQ.s:25173  .text:000002d0 $t
     /tmp/cczcdrrQ.s:25178  .text:000002d0 DAC_GetDataOutputValue
     /tmp/cczcdrrQ.s:25222  .text:00000304 $d
     /tmp/cczcdrrQ.s:25226  .text:00000308 $t
     /tmp/cczcdrrQ.s:25231  .text:00000308 DAC_DMACmd
     /tmp/cczcdrrQ.s:25285  .text:00000358 $d
     /tmp/cczcdrrQ.s:25289  .text:0000035c $t
     /tmp/cczcdrrQ.s:25294  .text:0000035c DAC_ITConfig
     /tmp/cczcdrrQ.s:25349  .text:000003a8 $d
     /tmp/cczcdrrQ.s:25353  .text:000003ac $t
     /tmp/cczcdrrQ.s:25358  .text:000003ac DAC_GetFlagStatus
     /tmp/cczcdrrQ.s:25409  .text:000003ec $d
     /tmp/cczcdrrQ.s:25413  .text:000003f0 $t
     /tmp/cczcdrrQ.s:25418  .text:000003f0 DAC_ClearFlag
     /tmp/cczcdrrQ.s:25451  .text:00000410 $d
     /tmp/cczcdrrQ.s:25455  .text:00000414 $t
     /tmp/cczcdrrQ.s:25460  .text:00000414 DAC_GetITStatus
     /tmp/cczcdrrQ.s:25526  .text:00000474 $d
     /tmp/cczcdrrQ.s:25530  .text:00000478 $t
     /tmp/cczcdrrQ.s:25535  .text:00000478 DAC_ClearITPendingBit
     /tmp/cczcdrrQ.s:25568  .text:00000498 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
