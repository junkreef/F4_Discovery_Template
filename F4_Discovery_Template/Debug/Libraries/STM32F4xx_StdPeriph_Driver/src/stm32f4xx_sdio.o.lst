   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f4xx_sdio.c"
  23              	.Ltext0:
  24              		.file 1 "../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c"
 24660              		.align	2
 24661              		.global	SDIO_DeInit
 24662              		.thumb
 24663              		.thumb_func
 24665              	SDIO_DeInit:
 24666              	.LFB110:
   1:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
   2:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
   3:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @file    stm32f4xx_sdio.c
   4:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @author  MCD Application Team
   5:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @version V1.0.2
   6:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @date    05-March-2012
   7:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          functionalities of the Secure digital input/output interface (SDIO) 
   9:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          peripheral:
  10:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Initialization and Configuration
  11:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Command path state machine (CPSM) management
  12:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Data path state machine (DPSM) management
  13:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - SDIO IO Cards mode management
  14:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - CE-ATA mode management
  15:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - DMA transfers management
  16:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Interrupts and flags management
  17:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  18:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *  @verbatim
  19:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  20:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  21:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          ===================================================================
  22:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                 How to use this driver
  23:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          ===================================================================
  24:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          1. The SDIO clock (SDIOCLK = 48 MHz) is coming from a specific output
  25:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             of PLL (PLL48CLK). Before to start working with SDIO peripheral
  26:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             make sure that the PLL is well configured.
  27:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          The SDIO peripheral uses two clock signals:
  28:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              - SDIO adapter clock (SDIOCLK = 48 MHz)
  29:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              - APB2 bus clock (PCLK2)
  30:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          PCLK2 and SDIO_CK clock frequencies must respect the following condition:
  31:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   Frequenc(PCLK2) >= (3 / 8 x Frequency(SDIO_CK))
  32:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  33:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          2. Enable peripheral clock using RCC_APB2PeriphClockCmd(RCC_APB2Periph_SDIO, ENABLE).
  34:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  35:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          3.  According to the SDIO mode, enable the GPIO clocks using 
  36:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              RCC_AHB1PeriphClockCmd() function. 
  37:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              The I/O can be one of the following configurations:
  38:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 1-bit data length: SDIO_CMD, SDIO_CK and D0.
  39:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 4-bit data length: SDIO_CMD, SDIO_CK and D[3:0].
  40:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 8-bit data length: SDIO_CMD, SDIO_CK and D[7:0].      
  41:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  42:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          4. Peripheral's alternate function: 
  43:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Connect the pin to the desired peripherals' Alternate 
  44:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   Function (AF) using GPIO_PinAFConfig() function
  45:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Configure the desired pin in alternate function by:
  46:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  47:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Select the type, pull-up/pull-down and output speed via 
  48:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
  49:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Call GPIO_Init() function
  50:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  51:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          5. Program the Clock Edge, Clock Bypass, Clock Power Save, Bus Wide, 
  52:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             hardware, flow control and the Clock Divider using the SDIO_Init()
  53:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             function.
  54:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  55:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          6. Enable the Power ON State using the SDIO_SetPowerState(SDIO_PowerState_ON) 
  56:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             function.
  57:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              
  58:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          7. Enable the clock using the SDIO_ClockCmd() function.
  59:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  60:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          8. Enable the NVIC and the corresponding interrupt using the function 
  61:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             SDIO_ITConfig() if you need to use interrupt mode. 
  62:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  63:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          9. When using the DMA mode 
  64:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Configure the DMA using DMA_Init() function
  65:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Active the needed channel Request using SDIO_DMACmd() function
  66:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  67:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          10. Enable the DMA using the DMA_Cmd() function, when using DMA mode. 
  68:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  69:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          11. To control the CPSM (Command Path State Machine) and send 
  70:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              commands to the card use the SDIO_SendCommand(), 
  71:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_GetCommandResponse() and SDIO_GetResponse() functions.     
  72:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              First, user has to fill the command structure (pointer to
  73:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_CmdInitTypeDef) according to the selected command to be sent.
  74:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
  75:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Argument
  76:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Index
  77:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Response type
  78:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Wait
  79:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - CPSM Status (Enable or Disable)
  80:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  81:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              To check if the command is well received, read the SDIO_CMDRESP
  82:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              register using the SDIO_GetCommandResponse().
  83:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              The SDIO responses registers (SDIO_RESP1 to SDIO_RESP2), use the
  84:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_GetResponse() function.
  85:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  86:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          12. To control the DPSM (Data Path State Machine) and send/receive 
  87:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              data to/from the card use the SDIO_DataConfig(), SDIO_GetDataCounter(), 
  88:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_ReadData(), SDIO_WriteData() and SDIO_GetFIFOCount() functions.
  89:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  90:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              Read Operations
  91:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              ---------------
  92:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              a) First, user has to fill the data structure (pointer to
  93:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 SDIO_DataInitTypeDef) according to the selected data type to
  94:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 be received.
  95:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
  96:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data TimeOut
  97:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Length
  98:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Block size
  99:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer direction: should be from card (To SDIO)
 100:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer mode
 101:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - DPSM Status (Enable or Disable)
 102:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   
 103:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              b) Configure the SDIO resources to receive the data from the card
 104:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 according to selected transfer mode (Refer to Step 8, 9 and 10).
 105:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 106:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              c) Send the selected Read command (refer to step 11).
 107:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                  
 108:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              d) Use the SDIO flags/interrupts to check the transfer status.
 109:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 110:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              Write Operations
 111:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              ---------------
 112:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              a) First, user has to fill the data structure (pointer to
 113:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 SDIO_DataInitTypeDef) according to the selected data type to
 114:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 be received.
 115:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
 116:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data TimeOut
 117:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Length
 118:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Block size
 119:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer direction:  should be to card (To CARD)
 120:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer mode
 121:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - DPSM Status (Enable or Disable)
 122:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 123:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              b) Configure the SDIO resources to send the data to the card
 124:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 according to selected transfer mode (Refer to Step 8, 9 and 10).
 125:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   
 126:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              c) Send the selected Write command (refer to step 11).
 127:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                  
 128:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              d) Use the SDIO flags/interrupts to check the transfer status.
 129:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 130:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 131:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *  @endverbatim
 132:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 133:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 134:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
 135:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @attention
 136:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 137:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
 138:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 139:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
 140:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * You may not use this file except in compliance with the License.
 141:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * You may obtain a copy of the License at:
 142:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 143:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
 144:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 145:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * Unless required by applicable law or agreed to in writing, software 
 146:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
 147:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 148:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * See the License for the specific language governing permissions and
 149:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * limitations under the License.
 150:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 151:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
 152:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 153:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 154:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Includes ------------------------------------------------------------------*/
 155:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #include "stm32f4xx_sdio.h"
 156:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #include "stm32f4xx_rcc.h"
 157:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 158:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 159:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 160:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 161:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 162:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO 
 163:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief SDIO driver modules
 164:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 165:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */ 
 166:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 167:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private typedef -----------------------------------------------------------*/
 168:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private define ------------------------------------------------------------*/
 169:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 170:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* ------------ SDIO registers bit address in the alias region ----------- */
 171:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIO_OFFSET                (SDIO_BASE - PERIPH_BASE)
 172:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 173:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CLKCR Register ---*/
 174:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of CLKEN bit */
 175:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_OFFSET              (SDIO_OFFSET + 0x04)
 176:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKEN_BitNumber           0x08
 177:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_CLKEN_BB            (PERIPH_BB_BASE + (CLKCR_OFFSET * 32) + (CLKEN_BitNumber * 4))
 178:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 179:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CMD Register ---*/
 180:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of SDIOSUSPEND bit */
 181:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_OFFSET                (SDIO_OFFSET + 0x0C)
 182:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIOSUSPEND_BitNumber     0x0B
 183:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_SDIOSUSPEND_BB        (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (SDIOSUSPEND_BitNumber * 4)
 184:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 185:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of ENCMDCOMPL bit */
 186:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define ENCMDCOMPL_BitNumber      0x0C
 187:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_ENCMDCOMPL_BB         (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ENCMDCOMPL_BitNumber * 4))
 188:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 189:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of NIEN bit */
 190:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define NIEN_BitNumber            0x0D
 191:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_NIEN_BB               (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (NIEN_BitNumber * 4))
 192:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 193:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of ATACMD bit */
 194:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define ATACMD_BitNumber          0x0E
 195:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_ATACMD_BB             (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ATACMD_BitNumber * 4))
 196:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 197:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- DCTRL Register ---*/
 198:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of DMAEN bit */
 199:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_OFFSET              (SDIO_OFFSET + 0x2C)
 200:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DMAEN_BitNumber           0x03
 201:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_DMAEN_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (DMAEN_BitNumber * 4))
 202:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 203:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWSTART bit */
 204:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWSTART_BitNumber         0x08
 205:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWSTART_BB          (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTART_BitNumber * 4))
 206:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 207:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWSTOP bit */
 208:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWSTOP_BitNumber          0x09
 209:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWSTOP_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTOP_BitNumber * 4))
 210:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 211:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWMOD bit */
 212:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWMOD_BitNumber           0x0A
 213:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWMOD_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWMOD_BitNumber * 4))
 214:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 215:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of SDIOEN bit */
 216:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIOEN_BitNumber          0x0B
 217:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_SDIOEN_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (SDIOEN_BitNumber * 4))
 218:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 219:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* ---------------------- SDIO registers bit mask ------------------------ */
 220:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CLKCR Register ---*/
 221:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* CLKCR register clear mask */
 222:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_CLEAR_MASK         ((uint32_t)0xFFFF8100) 
 223:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 224:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- PWRCTRL Register ---*/
 225:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO PWRCTRL Mask */
 226:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define PWR_PWRCTRL_MASK         ((uint32_t)0xFFFFFFFC)
 227:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 228:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- DCTRL Register ---*/
 229:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO DCTRL Clear Mask */
 230:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_CLEAR_MASK         ((uint32_t)0xFFFFFF08)
 231:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 232:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CMD Register ---*/
 233:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* CMD Register clear mask */
 234:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_CLEAR_MASK           ((uint32_t)0xFFFFF800)
 235:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 236:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO RESP Registers Address */
 237:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIO_RESP_ADDR           ((uint32_t)(SDIO_BASE + 0x14))
 238:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 239:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private macro -------------------------------------------------------------*/
 240:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private variables ---------------------------------------------------------*/
 241:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private function prototypes -----------------------------------------------*/
 242:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private functions ---------------------------------------------------------*/
 243:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 244:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Private_Functions
 245:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 246:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 247:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 248:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group1 Initialization and Configuration functions
 249:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Initialization and Configuration functions 
 250:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 251:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 252:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 253:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****                  Initialization and Configuration functions
 254:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 255:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 256:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 257:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 258:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 259:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 260:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 261:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Deinitializes the SDIO peripheral registers to their default reset values.
 262:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 263:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 264:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 265:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DeInit(void)
 266:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 24667              		.loc 1 266 0
 24668              		.cfi_startproc
 24669              		@ args = 0, pretend = 0, frame = 0
 24670              		@ frame_needed = 1, uses_anonymous_args = 0
 24671 0000 80B5     		push	{r7, lr}
 24672              	.LCFI0:
 24673              		.cfi_def_cfa_offset 8
 24674 0002 00AF     		add	r7, sp, #0
 24675              		.cfi_offset 14, -4
 24676              		.cfi_offset 7, -8
 24677              	.LCFI1:
 24678              		.cfi_def_cfa_register 7
 267:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, ENABLE);
 24679              		.loc 1 267 0
 24680 0004 4FF40060 		mov	r0, #2048
 24681 0008 4FF00101 		mov	r1, #1
 24682 000c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 268:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, DISABLE);
 24683              		.loc 1 268 0
 24684 0010 4FF40060 		mov	r0, #2048
 24685 0014 4FF00001 		mov	r1, #0
 24686 0018 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 269:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 24687              		.loc 1 269 0
 24688 001c 80BD     		pop	{r7, pc}
 24689              		.cfi_endproc
 24690              	.LFE110:
 24692 001e 00BF     		.align	2
 24693              		.global	SDIO_Init
 24694              		.thumb
 24695              		.thumb_func
 24697              	SDIO_Init:
 24698              	.LFB111:
 270:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 271:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 272:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO peripheral according to the specified 
 273:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_InitStruct.
 274:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_InitStruct : pointer to a SDIO_InitTypeDef structure 
 275:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         that contains the configuration information for the SDIO peripheral.
 276:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 277:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 278:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_Init(SDIO_InitTypeDef* SDIO_InitStruct)
 279:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 24699              		.loc 1 279 0
 24700              		.cfi_startproc
 24701              		@ args = 0, pretend = 0, frame = 16
 24702              		@ frame_needed = 1, uses_anonymous_args = 0
 24703              		@ link register save eliminated.
 24704 0020 80B4     		push	{r7}
 24705              	.LCFI2:
 24706              		.cfi_def_cfa_offset 4
 24707 0022 85B0     		sub	sp, sp, #20
 24708              	.LCFI3:
 24709              		.cfi_def_cfa_offset 24
 24710 0024 00AF     		add	r7, sp, #0
 24711              		.cfi_offset 7, -4
 24712              	.LCFI4:
 24713              		.cfi_def_cfa_register 7
 24714 0026 7860     		str	r0, [r7, #4]
 280:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 24715              		.loc 1 280 0
 24716 0028 4FF00003 		mov	r3, #0
 24717 002c FB60     		str	r3, [r7, #12]
 281:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     
 282:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 283:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_EDGE(SDIO_InitStruct->SDIO_ClockEdge));
 284:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_BYPASS(SDIO_InitStruct->SDIO_ClockBypass));
 285:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_POWER_SAVE(SDIO_InitStruct->SDIO_ClockPowerSave));
 286:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_BUS_WIDE(SDIO_InitStruct->SDIO_BusWide));
 287:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_HARDWARE_FLOW_CONTROL(SDIO_InitStruct->SDIO_HardwareFlowControl)); 
 288:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 289:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO CLKCR Configuration ------------------------*/  
 290:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO CLKCR value */
 291:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->CLKCR;
 24718              		.loc 1 291 0
 24719 002e 144B     		ldr	r3, .L3
 24720 0030 5B68     		ldr	r3, [r3, #4]
 24721 0032 FB60     		str	r3, [r7, #12]
 292:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 293:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear CLKDIV, PWRSAV, BYPASS, WIDBUS, NEGEDGE, HWFC_EN bits */
 294:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= CLKCR_CLEAR_MASK;
 24722              		.loc 1 294 0
 24723 0034 FB68     		ldr	r3, [r7, #12]
 24724 0036 23F4FC43 		bic	r3, r3, #32256
 24725 003a 23F0FF03 		bic	r3, r3, #255
 24726 003e FB60     		str	r3, [r7, #12]
 295:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 296:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CLKDIV bits according to SDIO_ClockDiv value */
 297:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set PWRSAV bit according to SDIO_ClockPowerSave value */
 298:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set BYPASS bit according to SDIO_ClockBypass value */
 299:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WIDBUS bits according to SDIO_BusWide value */
 300:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set NEGEDGE bits according to SDIO_ClockEdge value */
 301:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set HWFC_EN bits according to SDIO_HardwareFlowControl value */
 302:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
 24727              		.loc 1 302 0
 24728 0040 7B68     		ldr	r3, [r7, #4]
 24729 0042 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 24730 0044 1A46     		mov	r2, r3
 24731 0046 7B68     		ldr	r3, [r7, #4]
 24732 0048 9B68     		ldr	r3, [r3, #8]
 24733 004a 1A43     		orrs	r2, r2, r3
 303:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
 24734              		.loc 1 303 0
 24735 004c 7B68     		ldr	r3, [r7, #4]
 24736 004e 5B68     		ldr	r3, [r3, #4]
 302:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
 24737              		.loc 1 302 0
 24738 0050 1A43     		orrs	r2, r2, r3
 24739              		.loc 1 303 0
 24740 0052 7B68     		ldr	r3, [r7, #4]
 24741 0054 DB68     		ldr	r3, [r3, #12]
 24742 0056 1A43     		orrs	r2, r2, r3
 304:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockEdge | SDIO_InitStruct->SDIO_HardwareFlowControl); 
 24743              		.loc 1 304 0
 24744 0058 7B68     		ldr	r3, [r7, #4]
 24745 005a 1B68     		ldr	r3, [r3, #0]
 303:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
 24746              		.loc 1 303 0
 24747 005c 1A43     		orrs	r2, r2, r3
 24748              		.loc 1 304 0
 24749 005e 7B68     		ldr	r3, [r7, #4]
 24750 0060 1B69     		ldr	r3, [r3, #16]
 24751 0062 42EA0303 		orr	r3, r2, r3
 302:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
 24752              		.loc 1 302 0
 24753 0066 FA68     		ldr	r2, [r7, #12]
 24754 0068 42EA0303 		orr	r3, r2, r3
 24755 006c FB60     		str	r3, [r7, #12]
 305:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 306:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO CLKCR */
 307:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->CLKCR = tmpreg;
 24756              		.loc 1 307 0
 24757 006e 044B     		ldr	r3, .L3
 24758 0070 FA68     		ldr	r2, [r7, #12]
 24759 0072 5A60     		str	r2, [r3, #4]
 308:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 24760              		.loc 1 308 0
 24761 0074 07F11407 		add	r7, r7, #20
 24762 0078 BD46     		mov	sp, r7
 24763 007a 80BC     		pop	{r7}
 24764 007c 7047     		bx	lr
 24765              	.L4:
 24766 007e 00BF     		.align	2
 24767              	.L3:
 24768 0080 002C0140 		.word	1073818624
 24769              		.cfi_endproc
 24770              	.LFE111:
 24772              		.align	2
 24773              		.global	SDIO_StructInit
 24774              		.thumb
 24775              		.thumb_func
 24777              	SDIO_StructInit:
 24778              	.LFB112:
 309:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 310:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 311:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_InitStruct member with its default value.
 312:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_InitStruct: pointer to an SDIO_InitTypeDef structure which 
 313:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         will be initialized.
 314:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 315:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 316:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StructInit(SDIO_InitTypeDef* SDIO_InitStruct)
 317:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 24779              		.loc 1 317 0
 24780              		.cfi_startproc
 24781              		@ args = 0, pretend = 0, frame = 8
 24782              		@ frame_needed = 1, uses_anonymous_args = 0
 24783              		@ link register save eliminated.
 24784 0084 80B4     		push	{r7}
 24785              	.LCFI5:
 24786              		.cfi_def_cfa_offset 4
 24787 0086 83B0     		sub	sp, sp, #12
 24788              	.LCFI6:
 24789              		.cfi_def_cfa_offset 16
 24790 0088 00AF     		add	r7, sp, #0
 24791              		.cfi_offset 7, -4
 24792              	.LCFI7:
 24793              		.cfi_def_cfa_register 7
 24794 008a 7860     		str	r0, [r7, #4]
 318:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_InitStruct members default value */
 319:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockDiv = 0x00;
 24795              		.loc 1 319 0
 24796 008c 7B68     		ldr	r3, [r7, #4]
 24797 008e 4FF00002 		mov	r2, #0
 24798 0092 1A75     		strb	r2, [r3, #20]
 320:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockEdge = SDIO_ClockEdge_Rising;
 24799              		.loc 1 320 0
 24800 0094 7B68     		ldr	r3, [r7, #4]
 24801 0096 4FF00002 		mov	r2, #0
 24802 009a 1A60     		str	r2, [r3, #0]
 321:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockBypass = SDIO_ClockBypass_Disable;
 24803              		.loc 1 321 0
 24804 009c 7B68     		ldr	r3, [r7, #4]
 24805 009e 4FF00002 		mov	r2, #0
 24806 00a2 5A60     		str	r2, [r3, #4]
 322:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
 24807              		.loc 1 322 0
 24808 00a4 7B68     		ldr	r3, [r7, #4]
 24809 00a6 4FF00002 		mov	r2, #0
 24810 00aa 9A60     		str	r2, [r3, #8]
 323:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_BusWide = SDIO_BusWide_1b;
 24811              		.loc 1 323 0
 24812 00ac 7B68     		ldr	r3, [r7, #4]
 24813 00ae 4FF00002 		mov	r2, #0
 24814 00b2 DA60     		str	r2, [r3, #12]
 324:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_HardwareFlowControl = SDIO_HardwareFlowControl_Disable;
 24815              		.loc 1 324 0
 24816 00b4 7B68     		ldr	r3, [r7, #4]
 24817 00b6 4FF00002 		mov	r2, #0
 24818 00ba 1A61     		str	r2, [r3, #16]
 325:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 24819              		.loc 1 325 0
 24820 00bc 07F10C07 		add	r7, r7, #12
 24821 00c0 BD46     		mov	sp, r7
 24822 00c2 80BC     		pop	{r7}
 24823 00c4 7047     		bx	lr
 24824              		.cfi_endproc
 24825              	.LFE112:
 24827 00c6 00BF     		.align	2
 24828              		.global	SDIO_ClockCmd
 24829              		.thumb
 24830              		.thumb_func
 24832              	SDIO_ClockCmd:
 24833              	.LFB113:
 326:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 327:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 328:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO Clock.
 329:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the SDIO Clock. 
 330:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 331:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 332:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 333:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClockCmd(FunctionalState NewState)
 334:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 24834              		.loc 1 334 0
 24835              		.cfi_startproc
 24836              		@ args = 0, pretend = 0, frame = 8
 24837              		@ frame_needed = 1, uses_anonymous_args = 0
 24838              		@ link register save eliminated.
 24839 00c8 80B4     		push	{r7}
 24840              	.LCFI8:
 24841              		.cfi_def_cfa_offset 4
 24842 00ca 83B0     		sub	sp, sp, #12
 24843              	.LCFI9:
 24844              		.cfi_def_cfa_offset 16
 24845 00cc 00AF     		add	r7, sp, #0
 24846              		.cfi_offset 7, -4
 24847              	.LCFI10:
 24848              		.cfi_def_cfa_register 7
 24849 00ce 0346     		mov	r3, r0
 24850 00d0 FB71     		strb	r3, [r7, #7]
 335:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 336:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 337:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 338:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CLKCR_CLKEN_BB = (uint32_t)NewState;
 24851              		.loc 1 338 0
 24852 00d2 044B     		ldr	r3, .L7
 24853 00d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24854 00d6 1A60     		str	r2, [r3, #0]
 339:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 24855              		.loc 1 339 0
 24856 00d8 07F10C07 		add	r7, r7, #12
 24857 00dc BD46     		mov	sp, r7
 24858 00de 80BC     		pop	{r7}
 24859 00e0 7047     		bx	lr
 24860              	.L8:
 24861 00e2 00BF     		.align	2
 24862              	.L7:
 24863 00e4 A0802542 		.word	1109754016
 24864              		.cfi_endproc
 24865              	.LFE113:
 24867              		.align	2
 24868              		.global	SDIO_SetPowerState
 24869              		.thumb
 24870              		.thumb_func
 24872              	SDIO_SetPowerState:
 24873              	.LFB114:
 340:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 341:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 342:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sets the power status of the controller.
 343:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_PowerState: new state of the Power state. 
 344:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 345:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_PowerState_OFF: SDIO Power OFF
 346:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_PowerState_ON: SDIO Power ON
 347:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 348:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 349:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetPowerState(uint32_t SDIO_PowerState)
 350:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 24874              		.loc 1 350 0
 24875              		.cfi_startproc
 24876              		@ args = 0, pretend = 0, frame = 8
 24877              		@ frame_needed = 1, uses_anonymous_args = 0
 24878              		@ link register save eliminated.
 24879 00e8 80B4     		push	{r7}
 24880              	.LCFI11:
 24881              		.cfi_def_cfa_offset 4
 24882 00ea 83B0     		sub	sp, sp, #12
 24883              	.LCFI12:
 24884              		.cfi_def_cfa_offset 16
 24885 00ec 00AF     		add	r7, sp, #0
 24886              		.cfi_offset 7, -4
 24887              	.LCFI13:
 24888              		.cfi_def_cfa_register 7
 24889 00ee 7860     		str	r0, [r7, #4]
 351:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 352:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_POWER_STATE(SDIO_PowerState));
 353:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 354:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->POWER = SDIO_PowerState;
 24890              		.loc 1 354 0
 24891 00f0 034B     		ldr	r3, .L10
 24892 00f2 7A68     		ldr	r2, [r7, #4]
 24893 00f4 1A60     		str	r2, [r3, #0]
 355:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 24894              		.loc 1 355 0
 24895 00f6 07F10C07 		add	r7, r7, #12
 24896 00fa BD46     		mov	sp, r7
 24897 00fc 80BC     		pop	{r7}
 24898 00fe 7047     		bx	lr
 24899              	.L11:
 24900              		.align	2
 24901              	.L10:
 24902 0100 002C0140 		.word	1073818624
 24903              		.cfi_endproc
 24904              	.LFE114:
 24906              		.align	2
 24907              		.global	SDIO_GetPowerState
 24908              		.thumb
 24909              		.thumb_func
 24911              	SDIO_GetPowerState:
 24912              	.LFB115:
 356:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 357:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 358:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Gets the power status of the controller.
 359:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 360:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Power status of the controller. The returned value can be one of the 
 361:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         following values:
 362:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x00: Power OFF
 363:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x02: Power UP
 364:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x03: Power ON 
 365:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 366:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetPowerState(void)
 367:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 24913              		.loc 1 367 0
 24914              		.cfi_startproc
 24915              		@ args = 0, pretend = 0, frame = 0
 24916              		@ frame_needed = 1, uses_anonymous_args = 0
 24917              		@ link register save eliminated.
 24918 0104 80B4     		push	{r7}
 24919              	.LCFI14:
 24920              		.cfi_def_cfa_offset 4
 24921 0106 00AF     		add	r7, sp, #0
 24922              		.cfi_offset 7, -4
 24923              	.LCFI15:
 24924              		.cfi_def_cfa_register 7
 368:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (SDIO->POWER & (~PWR_PWRCTRL_MASK));
 24925              		.loc 1 368 0
 24926 0108 034B     		ldr	r3, .L13
 24927 010a 1B68     		ldr	r3, [r3, #0]
 24928 010c 03F00303 		and	r3, r3, #3
 369:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 24929              		.loc 1 369 0
 24930 0110 1846     		mov	r0, r3
 24931 0112 BD46     		mov	sp, r7
 24932 0114 80BC     		pop	{r7}
 24933 0116 7047     		bx	lr
 24934              	.L14:
 24935              		.align	2
 24936              	.L13:
 24937 0118 002C0140 		.word	1073818624
 24938              		.cfi_endproc
 24939              	.LFE115:
 24941              		.align	2
 24942              		.global	SDIO_SendCommand
 24943              		.thumb
 24944              		.thumb_func
 24946              	SDIO_SendCommand:
 24947              	.LFB116:
 370:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 371:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 372:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 373:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 374:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 375:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group2 Command path state machine (CPSM) management functions
 376:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Command path state machine (CPSM) management functions 
 377:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 378:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 379:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 380:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               Command path state machine (CPSM) management functions
 381:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 382:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 383:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the Command path 
 384:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   state machine (CPSM).
 385:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 386:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 387:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 388:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 389:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 390:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 391:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO Command according to the specified 
 392:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_CmdInitStruct and send the command.
 393:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_CmdInitStruct : pointer to a SDIO_CmdInitTypeDef 
 394:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         structure that contains the configuration information for the SDIO 
 395:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         command.
 396:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 397:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 398:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendCommand(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct)
 399:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 24948              		.loc 1 399 0
 24949              		.cfi_startproc
 24950              		@ args = 0, pretend = 0, frame = 16
 24951              		@ frame_needed = 1, uses_anonymous_args = 0
 24952              		@ link register save eliminated.
 24953 011c 80B4     		push	{r7}
 24954              	.LCFI16:
 24955              		.cfi_def_cfa_offset 4
 24956 011e 85B0     		sub	sp, sp, #20
 24957              	.LCFI17:
 24958              		.cfi_def_cfa_offset 24
 24959 0120 00AF     		add	r7, sp, #0
 24960              		.cfi_offset 7, -4
 24961              	.LCFI18:
 24962              		.cfi_def_cfa_register 7
 24963 0122 7860     		str	r0, [r7, #4]
 400:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 24964              		.loc 1 400 0
 24965 0124 4FF00003 		mov	r3, #0
 24966 0128 FB60     		str	r3, [r7, #12]
 401:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 402:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 403:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CMD_INDEX(SDIO_CmdInitStruct->SDIO_CmdIndex));
 404:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_RESPONSE(SDIO_CmdInitStruct->SDIO_Response));
 405:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_WAIT(SDIO_CmdInitStruct->SDIO_Wait));
 406:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CPSM(SDIO_CmdInitStruct->SDIO_CPSM));
 407:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 408:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO ARG Configuration ------------------------*/
 409:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO Argument value */
 410:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ARG = SDIO_CmdInitStruct->SDIO_Argument;
 24967              		.loc 1 410 0
 24968 012a 124B     		ldr	r3, .L16
 24969 012c 7A68     		ldr	r2, [r7, #4]
 24970 012e 1268     		ldr	r2, [r2, #0]
 24971 0130 9A60     		str	r2, [r3, #8]
 411:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 412:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO CMD Configuration ------------------------*/  
 413:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO CMD value */
 414:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->CMD;
 24972              		.loc 1 414 0
 24973 0132 104B     		ldr	r3, .L16
 24974 0134 DB68     		ldr	r3, [r3, #12]
 24975 0136 FB60     		str	r3, [r7, #12]
 415:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear CMDINDEX, WAITRESP, WAITINT, WAITPEND, CPSMEN bits */
 416:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= CMD_CLEAR_MASK;
 24976              		.loc 1 416 0
 24977 0138 FB68     		ldr	r3, [r7, #12]
 24978 013a 23F4FE63 		bic	r3, r3, #2032
 24979 013e 23F00F03 		bic	r3, r3, #15
 24980 0142 FB60     		str	r3, [r7, #12]
 417:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CMDINDEX bits according to SDIO_CmdIndex value */
 418:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WAITRESP bits according to SDIO_Response value */
 419:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WAITINT and WAITPEND bits according to SDIO_Wait value */
 420:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CPSMEN bits according to SDIO_CPSM value */
 421:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
 24981              		.loc 1 421 0
 24982 0144 7B68     		ldr	r3, [r7, #4]
 24983 0146 5A68     		ldr	r2, [r3, #4]
 24984 0148 7B68     		ldr	r3, [r7, #4]
 24985 014a 9B68     		ldr	r3, [r3, #8]
 24986 014c 1A43     		orrs	r2, r2, r3
 422:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****            | SDIO_CmdInitStruct->SDIO_Wait | SDIO_CmdInitStruct->SDIO_CPSM;
 24987              		.loc 1 422 0
 24988 014e 7B68     		ldr	r3, [r7, #4]
 24989 0150 DB68     		ldr	r3, [r3, #12]
 24990 0152 1A43     		orrs	r2, r2, r3
 24991 0154 7B68     		ldr	r3, [r7, #4]
 24992 0156 1B69     		ldr	r3, [r3, #16]
 24993 0158 42EA0303 		orr	r3, r2, r3
 421:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
 24994              		.loc 1 421 0
 24995 015c FA68     		ldr	r2, [r7, #12]
 24996 015e 42EA0303 		orr	r3, r2, r3
 24997 0162 FB60     		str	r3, [r7, #12]
 423:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 424:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO CMD */
 425:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->CMD = tmpreg;
 24998              		.loc 1 425 0
 24999 0164 034B     		ldr	r3, .L16
 25000 0166 FA68     		ldr	r2, [r7, #12]
 25001 0168 DA60     		str	r2, [r3, #12]
 426:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 25002              		.loc 1 426 0
 25003 016a 07F11407 		add	r7, r7, #20
 25004 016e BD46     		mov	sp, r7
 25005 0170 80BC     		pop	{r7}
 25006 0172 7047     		bx	lr
 25007              	.L17:
 25008              		.align	2
 25009              	.L16:
 25010 0174 002C0140 		.word	1073818624
 25011              		.cfi_endproc
 25012              	.LFE116:
 25014              		.align	2
 25015              		.global	SDIO_CmdStructInit
 25016              		.thumb
 25017              		.thumb_func
 25019              	SDIO_CmdStructInit:
 25020              	.LFB117:
 427:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 428:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 429:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_CmdInitStruct member with its default value.
 430:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_CmdInitStruct: pointer to an SDIO_CmdInitTypeDef 
 431:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         structure which will be initialized.
 432:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 433:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 434:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CmdStructInit(SDIO_CmdInitTypeDef* SDIO_CmdInitStruct)
 435:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 25021              		.loc 1 435 0
 25022              		.cfi_startproc
 25023              		@ args = 0, pretend = 0, frame = 8
 25024              		@ frame_needed = 1, uses_anonymous_args = 0
 25025              		@ link register save eliminated.
 25026 0178 80B4     		push	{r7}
 25027              	.LCFI19:
 25028              		.cfi_def_cfa_offset 4
 25029 017a 83B0     		sub	sp, sp, #12
 25030              	.LCFI20:
 25031              		.cfi_def_cfa_offset 16
 25032 017c 00AF     		add	r7, sp, #0
 25033              		.cfi_offset 7, -4
 25034              	.LCFI21:
 25035              		.cfi_def_cfa_register 7
 25036 017e 7860     		str	r0, [r7, #4]
 436:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_CmdInitStruct members default value */
 437:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Argument = 0x00;
 25037              		.loc 1 437 0
 25038 0180 7B68     		ldr	r3, [r7, #4]
 25039 0182 4FF00002 		mov	r2, #0
 25040 0186 1A60     		str	r2, [r3, #0]
 438:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CmdIndex = 0x00;
 25041              		.loc 1 438 0
 25042 0188 7B68     		ldr	r3, [r7, #4]
 25043 018a 4FF00002 		mov	r2, #0
 25044 018e 5A60     		str	r2, [r3, #4]
 439:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Response = SDIO_Response_No;
 25045              		.loc 1 439 0
 25046 0190 7B68     		ldr	r3, [r7, #4]
 25047 0192 4FF00002 		mov	r2, #0
 25048 0196 9A60     		str	r2, [r3, #8]
 440:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Wait = SDIO_Wait_No;
 25049              		.loc 1 440 0
 25050 0198 7B68     		ldr	r3, [r7, #4]
 25051 019a 4FF00002 		mov	r2, #0
 25052 019e DA60     		str	r2, [r3, #12]
 441:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CPSM = SDIO_CPSM_Disable;
 25053              		.loc 1 441 0
 25054 01a0 7B68     		ldr	r3, [r7, #4]
 25055 01a2 4FF00002 		mov	r2, #0
 25056 01a6 1A61     		str	r2, [r3, #16]
 442:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 25057              		.loc 1 442 0
 25058 01a8 07F10C07 		add	r7, r7, #12
 25059 01ac BD46     		mov	sp, r7
 25060 01ae 80BC     		pop	{r7}
 25061 01b0 7047     		bx	lr
 25062              		.cfi_endproc
 25063              	.LFE117:
 25065 01b2 00BF     		.align	2
 25066              		.global	SDIO_GetCommandResponse
 25067              		.thumb
 25068              		.thumb_func
 25070              	SDIO_GetCommandResponse:
 25071              	.LFB118:
 443:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 444:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 445:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns command index of last command for which response received.
 446:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 447:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Returns the command index of the last command response received.
 448:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 449:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint8_t SDIO_GetCommandResponse(void)
 450:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 25072              		.loc 1 450 0
 25073              		.cfi_startproc
 25074              		@ args = 0, pretend = 0, frame = 0
 25075              		@ frame_needed = 1, uses_anonymous_args = 0
 25076              		@ link register save eliminated.
 25077 01b4 80B4     		push	{r7}
 25078              	.LCFI22:
 25079              		.cfi_def_cfa_offset 4
 25080 01b6 00AF     		add	r7, sp, #0
 25081              		.cfi_offset 7, -4
 25082              	.LCFI23:
 25083              		.cfi_def_cfa_register 7
 451:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (uint8_t)(SDIO->RESPCMD);
 25084              		.loc 1 451 0
 25085 01b8 034B     		ldr	r3, .L20
 25086 01ba 1B69     		ldr	r3, [r3, #16]
 25087 01bc DBB2     		uxtb	r3, r3
 452:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 25088              		.loc 1 452 0
 25089 01be 1846     		mov	r0, r3
 25090 01c0 BD46     		mov	sp, r7
 25091 01c2 80BC     		pop	{r7}
 25092 01c4 7047     		bx	lr
 25093              	.L21:
 25094 01c6 00BF     		.align	2
 25095              	.L20:
 25096 01c8 002C0140 		.word	1073818624
 25097              		.cfi_endproc
 25098              	.LFE118:
 25100              		.align	2
 25101              		.global	SDIO_GetResponse
 25102              		.thumb
 25103              		.thumb_func
 25105              	SDIO_GetResponse:
 25106              	.LFB119:
 453:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 454:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 455:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns response received from the card for the last command.
 456:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_RESP: Specifies the SDIO response register. 
 457:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 458:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP1: Response Register 1
 459:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP2: Response Register 2
 460:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP3: Response Register 3
 461:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP4: Response Register 4
 462:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The Corresponding response register value.
 463:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 464:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetResponse(uint32_t SDIO_RESP)
 465:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 25107              		.loc 1 465 0
 25108              		.cfi_startproc
 25109              		@ args = 0, pretend = 0, frame = 16
 25110              		@ frame_needed = 1, uses_anonymous_args = 0
 25111              		@ link register save eliminated.
 25112 01cc 80B4     		push	{r7}
 25113              	.LCFI24:
 25114              		.cfi_def_cfa_offset 4
 25115 01ce 85B0     		sub	sp, sp, #20
 25116              	.LCFI25:
 25117              		.cfi_def_cfa_offset 24
 25118 01d0 00AF     		add	r7, sp, #0
 25119              		.cfi_offset 7, -4
 25120              	.LCFI26:
 25121              		.cfi_def_cfa_register 7
 25122 01d2 7860     		str	r0, [r7, #4]
 466:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   __IO uint32_t tmp = 0;
 25123              		.loc 1 466 0
 25124 01d4 4FF00003 		mov	r3, #0
 25125 01d8 FB60     		str	r3, [r7, #12]
 467:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 468:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 469:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_RESP(SDIO_RESP));
 470:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 471:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmp = SDIO_RESP_ADDR + SDIO_RESP;
 25126              		.loc 1 471 0
 25127 01da 7A68     		ldr	r2, [r7, #4]
 25128 01dc 054B     		ldr	r3, .L23
 25129 01de D318     		adds	r3, r2, r3
 25130 01e0 FB60     		str	r3, [r7, #12]
 472:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 473:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (*(__IO uint32_t *) tmp); 
 25131              		.loc 1 473 0
 25132 01e2 FB68     		ldr	r3, [r7, #12]
 25133 01e4 1B68     		ldr	r3, [r3, #0]
 474:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 25134              		.loc 1 474 0
 25135 01e6 1846     		mov	r0, r3
 25136 01e8 07F11407 		add	r7, r7, #20
 25137 01ec BD46     		mov	sp, r7
 25138 01ee 80BC     		pop	{r7}
 25139 01f0 7047     		bx	lr
 25140              	.L24:
 25141 01f2 00BF     		.align	2
 25142              	.L23:
 25143 01f4 142C0140 		.word	1073818644
 25144              		.cfi_endproc
 25145              	.LFE119:
 25147              		.align	2
 25148              		.global	SDIO_DataConfig
 25149              		.thumb
 25150              		.thumb_func
 25152              	SDIO_DataConfig:
 25153              	.LFB120:
 475:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 476:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 477:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 478:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 479:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 480:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group3 Data path state machine (DPSM) management functions
 481:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Data path state machine (DPSM) management functions
 482:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 483:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 484:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 485:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               Data path state machine (DPSM) management functions
 486:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 487:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 488:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the Data path 
 489:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   state machine (DPSM).
 490:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 491:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 492:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 493:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 494:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 495:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 496:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO data path according to the specified 
 497:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_DataInitStruct.
 498:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_DataInitStruct : pointer to a SDIO_DataInitTypeDef structure 
 499:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         that contains the configuration information for the SDIO command.
 500:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 501:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 502:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DataConfig(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 503:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 25154              		.loc 1 503 0
 25155              		.cfi_startproc
 25156              		@ args = 0, pretend = 0, frame = 16
 25157              		@ frame_needed = 1, uses_anonymous_args = 0
 25158              		@ link register save eliminated.
 25159 01f8 80B4     		push	{r7}
 25160              	.LCFI27:
 25161              		.cfi_def_cfa_offset 4
 25162 01fa 85B0     		sub	sp, sp, #20
 25163              	.LCFI28:
 25164              		.cfi_def_cfa_offset 24
 25165 01fc 00AF     		add	r7, sp, #0
 25166              		.cfi_offset 7, -4
 25167              	.LCFI29:
 25168              		.cfi_def_cfa_register 7
 25169 01fe 7860     		str	r0, [r7, #4]
 504:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 25170              		.loc 1 504 0
 25171 0200 4FF00003 		mov	r3, #0
 25172 0204 FB60     		str	r3, [r7, #12]
 505:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 506:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 507:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_DATA_LENGTH(SDIO_DataInitStruct->SDIO_DataLength));
 508:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_BLOCK_SIZE(SDIO_DataInitStruct->SDIO_DataBlockSize));
 509:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_DIR(SDIO_DataInitStruct->SDIO_TransferDir));
 510:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_MODE(SDIO_DataInitStruct->SDIO_TransferMode));
 511:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_DPSM(SDIO_DataInitStruct->SDIO_DPSM));
 512:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 513:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DTIMER Configuration ---------------------*/
 514:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO Data TimeOut value */
 515:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DTIMER = SDIO_DataInitStruct->SDIO_DataTimeOut;
 25173              		.loc 1 515 0
 25174 0206 134B     		ldr	r3, .L26
 25175 0208 7A68     		ldr	r2, [r7, #4]
 25176 020a 1268     		ldr	r2, [r2, #0]
 25177 020c 5A62     		str	r2, [r3, #36]
 516:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 517:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DLEN Configuration -----------------------*/
 518:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO DataLength value */
 519:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DLEN = SDIO_DataInitStruct->SDIO_DataLength;
 25178              		.loc 1 519 0
 25179 020e 114B     		ldr	r3, .L26
 25180 0210 7A68     		ldr	r2, [r7, #4]
 25181 0212 5268     		ldr	r2, [r2, #4]
 25182 0214 9A62     		str	r2, [r3, #40]
 520:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 521:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DCTRL Configuration ----------------------*/  
 522:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO DCTRL value */
 523:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->DCTRL;
 25183              		.loc 1 523 0
 25184 0216 0F4B     		ldr	r3, .L26
 25185 0218 DB6A     		ldr	r3, [r3, #44]
 25186 021a FB60     		str	r3, [r7, #12]
 524:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear DEN, DTMODE, DTDIR and DBCKSIZE bits */
 525:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= DCTRL_CLEAR_MASK;
 25187              		.loc 1 525 0
 25188 021c FB68     		ldr	r3, [r7, #12]
 25189 021e 23F0F703 		bic	r3, r3, #247
 25190 0222 FB60     		str	r3, [r7, #12]
 526:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DEN bit according to SDIO_DPSM value */
 527:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DTMODE bit according to SDIO_TransferMode value */
 528:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DTDIR bit according to SDIO_TransferDir value */
 529:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DBCKSIZE bits according to SDIO_DataBlockSize value */
 530:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferD
 25191              		.loc 1 530 0
 25192 0224 7B68     		ldr	r3, [r7, #4]
 25193 0226 9A68     		ldr	r2, [r3, #8]
 25194 0228 7B68     		ldr	r3, [r7, #4]
 25195 022a DB68     		ldr	r3, [r3, #12]
 25196 022c 1A43     		orrs	r2, r2, r3
 531:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****            | SDIO_DataInitStruct->SDIO_TransferMode | SDIO_DataInitStruct->SDIO_DPSM;
 25197              		.loc 1 531 0
 25198 022e 7B68     		ldr	r3, [r7, #4]
 25199 0230 1B69     		ldr	r3, [r3, #16]
 25200 0232 1A43     		orrs	r2, r2, r3
 25201 0234 7B68     		ldr	r3, [r7, #4]
 25202 0236 5B69     		ldr	r3, [r3, #20]
 25203 0238 42EA0303 		orr	r3, r2, r3
 530:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferD
 25204              		.loc 1 530 0
 25205 023c FA68     		ldr	r2, [r7, #12]
 25206 023e 42EA0303 		orr	r3, r2, r3
 25207 0242 FB60     		str	r3, [r7, #12]
 532:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 533:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO DCTRL */
 534:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DCTRL = tmpreg;
 25208              		.loc 1 534 0
 25209 0244 034B     		ldr	r3, .L26
 25210 0246 FA68     		ldr	r2, [r7, #12]
 25211 0248 DA62     		str	r2, [r3, #44]
 535:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 25212              		.loc 1 535 0
 25213 024a 07F11407 		add	r7, r7, #20
 25214 024e BD46     		mov	sp, r7
 25215 0250 80BC     		pop	{r7}
 25216 0252 7047     		bx	lr
 25217              	.L27:
 25218              		.align	2
 25219              	.L26:
 25220 0254 002C0140 		.word	1073818624
 25221              		.cfi_endproc
 25222              	.LFE120:
 25224              		.align	2
 25225              		.global	SDIO_DataStructInit
 25226              		.thumb
 25227              		.thumb_func
 25229              	SDIO_DataStructInit:
 25230              	.LFB121:
 536:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 537:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 538:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_DataInitStruct member with its default value.
 539:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_DataInitStruct: pointer to an SDIO_DataInitTypeDef structure 
 540:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         which will be initialized.
 541:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 542:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 543:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DataStructInit(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 544:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 25231              		.loc 1 544 0
 25232              		.cfi_startproc
 25233              		@ args = 0, pretend = 0, frame = 8
 25234              		@ frame_needed = 1, uses_anonymous_args = 0
 25235              		@ link register save eliminated.
 25236 0258 80B4     		push	{r7}
 25237              	.LCFI30:
 25238              		.cfi_def_cfa_offset 4
 25239 025a 83B0     		sub	sp, sp, #12
 25240              	.LCFI31:
 25241              		.cfi_def_cfa_offset 16
 25242 025c 00AF     		add	r7, sp, #0
 25243              		.cfi_offset 7, -4
 25244              	.LCFI32:
 25245              		.cfi_def_cfa_register 7
 25246 025e 7860     		str	r0, [r7, #4]
 545:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_DataInitStruct members default value */
 546:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataTimeOut = 0xFFFFFFFF;
 25247              		.loc 1 546 0
 25248 0260 7B68     		ldr	r3, [r7, #4]
 25249 0262 4FF0FF32 		mov	r2, #-1
 25250 0266 1A60     		str	r2, [r3, #0]
 547:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataLength = 0x00;
 25251              		.loc 1 547 0
 25252 0268 7B68     		ldr	r3, [r7, #4]
 25253 026a 4FF00002 		mov	r2, #0
 25254 026e 5A60     		str	r2, [r3, #4]
 548:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
 25255              		.loc 1 548 0
 25256 0270 7B68     		ldr	r3, [r7, #4]
 25257 0272 4FF00002 		mov	r2, #0
 25258 0276 9A60     		str	r2, [r3, #8]
 549:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferDir = SDIO_TransferDir_ToCard;
 25259              		.loc 1 549 0
 25260 0278 7B68     		ldr	r3, [r7, #4]
 25261 027a 4FF00002 		mov	r2, #0
 25262 027e DA60     		str	r2, [r3, #12]
 550:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferMode = SDIO_TransferMode_Block;  
 25263              		.loc 1 550 0
 25264 0280 7B68     		ldr	r3, [r7, #4]
 25265 0282 4FF00002 		mov	r2, #0
 25266 0286 1A61     		str	r2, [r3, #16]
 551:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DPSM = SDIO_DPSM_Disable;
 25267              		.loc 1 551 0
 25268 0288 7B68     		ldr	r3, [r7, #4]
 25269 028a 4FF00002 		mov	r2, #0
 25270 028e 5A61     		str	r2, [r3, #20]
 552:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 25271              		.loc 1 552 0
 25272 0290 07F10C07 		add	r7, r7, #12
 25273 0294 BD46     		mov	sp, r7
 25274 0296 80BC     		pop	{r7}
 25275 0298 7047     		bx	lr
 25276              		.cfi_endproc
 25277              	.LFE121:
 25279 029a 00BF     		.align	2
 25280              		.global	SDIO_GetDataCounter
 25281              		.thumb
 25282              		.thumb_func
 25284              	SDIO_GetDataCounter:
 25285              	.LFB122:
 553:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 554:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 555:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns number of remaining data bytes to be transferred.
 556:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 557:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Number of remaining data bytes to be transferred
 558:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 559:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetDataCounter(void)
 560:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 25286              		.loc 1 560 0
 25287              		.cfi_startproc
 25288              		@ args = 0, pretend = 0, frame = 0
 25289              		@ frame_needed = 1, uses_anonymous_args = 0
 25290              		@ link register save eliminated.
 25291 029c 80B4     		push	{r7}
 25292              	.LCFI33:
 25293              		.cfi_def_cfa_offset 4
 25294 029e 00AF     		add	r7, sp, #0
 25295              		.cfi_offset 7, -4
 25296              	.LCFI34:
 25297              		.cfi_def_cfa_register 7
 561:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->DCOUNT;
 25298              		.loc 1 561 0
 25299 02a0 024B     		ldr	r3, .L30
 25300 02a2 1B6B     		ldr	r3, [r3, #48]
 562:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 25301              		.loc 1 562 0
 25302 02a4 1846     		mov	r0, r3
 25303 02a6 BD46     		mov	sp, r7
 25304 02a8 80BC     		pop	{r7}
 25305 02aa 7047     		bx	lr
 25306              	.L31:
 25307              		.align	2
 25308              	.L30:
 25309 02ac 002C0140 		.word	1073818624
 25310              		.cfi_endproc
 25311              	.LFE122:
 25313              		.align	2
 25314              		.global	SDIO_ReadData
 25315              		.thumb
 25316              		.thumb_func
 25318              	SDIO_ReadData:
 25319              	.LFB123:
 563:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 564:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 565:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Read one data word from Rx FIFO.
 566:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 567:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Data received
 568:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 569:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_ReadData(void)
 570:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 25320              		.loc 1 570 0
 25321              		.cfi_startproc
 25322              		@ args = 0, pretend = 0, frame = 0
 25323              		@ frame_needed = 1, uses_anonymous_args = 0
 25324              		@ link register save eliminated.
 25325 02b0 80B4     		push	{r7}
 25326              	.LCFI35:
 25327              		.cfi_def_cfa_offset 4
 25328 02b2 00AF     		add	r7, sp, #0
 25329              		.cfi_offset 7, -4
 25330              	.LCFI36:
 25331              		.cfi_def_cfa_register 7
 571:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->FIFO;
 25332              		.loc 1 571 0
 25333 02b4 034B     		ldr	r3, .L33
 25334 02b6 D3F88030 		ldr	r3, [r3, #128]
 572:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 25335              		.loc 1 572 0
 25336 02ba 1846     		mov	r0, r3
 25337 02bc BD46     		mov	sp, r7
 25338 02be 80BC     		pop	{r7}
 25339 02c0 7047     		bx	lr
 25340              	.L34:
 25341 02c2 00BF     		.align	2
 25342              	.L33:
 25343 02c4 002C0140 		.word	1073818624
 25344              		.cfi_endproc
 25345              	.LFE123:
 25347              		.align	2
 25348              		.global	SDIO_WriteData
 25349              		.thumb
 25350              		.thumb_func
 25352              	SDIO_WriteData:
 25353              	.LFB124:
 573:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 574:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 575:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Write one data word to Tx FIFO.
 576:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  Data: 32-bit data word to write.
 577:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 578:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 579:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_WriteData(uint32_t Data)
 580:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 25354              		.loc 1 580 0
 25355              		.cfi_startproc
 25356              		@ args = 0, pretend = 0, frame = 8
 25357              		@ frame_needed = 1, uses_anonymous_args = 0
 25358              		@ link register save eliminated.
 25359 02c8 80B4     		push	{r7}
 25360              	.LCFI37:
 25361              		.cfi_def_cfa_offset 4
 25362 02ca 83B0     		sub	sp, sp, #12
 25363              	.LCFI38:
 25364              		.cfi_def_cfa_offset 16
 25365 02cc 00AF     		add	r7, sp, #0
 25366              		.cfi_offset 7, -4
 25367              	.LCFI39:
 25368              		.cfi_def_cfa_register 7
 25369 02ce 7860     		str	r0, [r7, #4]
 581:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->FIFO = Data;
 25370              		.loc 1 581 0
 25371 02d0 044B     		ldr	r3, .L36
 25372 02d2 7A68     		ldr	r2, [r7, #4]
 25373 02d4 C3F88020 		str	r2, [r3, #128]
 582:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 25374              		.loc 1 582 0
 25375 02d8 07F10C07 		add	r7, r7, #12
 25376 02dc BD46     		mov	sp, r7
 25377 02de 80BC     		pop	{r7}
 25378 02e0 7047     		bx	lr
 25379              	.L37:
 25380 02e2 00BF     		.align	2
 25381              	.L36:
 25382 02e4 002C0140 		.word	1073818624
 25383              		.cfi_endproc
 25384              	.LFE124:
 25386              		.align	2
 25387              		.global	SDIO_GetFIFOCount
 25388              		.thumb
 25389              		.thumb_func
 25391              	SDIO_GetFIFOCount:
 25392              	.LFB125:
 583:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 584:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 585:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns the number of words left to be written to or read from FIFO.	
 586:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 587:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Remaining number of words.
 588:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 589:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetFIFOCount(void)
 590:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 25393              		.loc 1 590 0
 25394              		.cfi_startproc
 25395              		@ args = 0, pretend = 0, frame = 0
 25396              		@ frame_needed = 1, uses_anonymous_args = 0
 25397              		@ link register save eliminated.
 25398 02e8 80B4     		push	{r7}
 25399              	.LCFI40:
 25400              		.cfi_def_cfa_offset 4
 25401 02ea 00AF     		add	r7, sp, #0
 25402              		.cfi_offset 7, -4
 25403              	.LCFI41:
 25404              		.cfi_def_cfa_register 7
 591:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->FIFOCNT;
 25405              		.loc 1 591 0
 25406 02ec 024B     		ldr	r3, .L39
 25407 02ee 9B6C     		ldr	r3, [r3, #72]
 592:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 25408              		.loc 1 592 0
 25409 02f0 1846     		mov	r0, r3
 25410 02f2 BD46     		mov	sp, r7
 25411 02f4 80BC     		pop	{r7}
 25412 02f6 7047     		bx	lr
 25413              	.L40:
 25414              		.align	2
 25415              	.L39:
 25416 02f8 002C0140 		.word	1073818624
 25417              		.cfi_endproc
 25418              	.LFE125:
 25420              		.align	2
 25421              		.global	SDIO_StartSDIOReadWait
 25422              		.thumb
 25423              		.thumb_func
 25425              	SDIO_StartSDIOReadWait:
 25426              	.LFB126:
 593:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 594:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 595:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 596:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 597:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 598:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group4 SDIO IO Cards mode management functions
 599:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   SDIO IO Cards mode management functions
 600:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 601:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 602:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 603:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               SDIO IO Cards mode management functions
 604:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 605:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 606:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the SDIO IO Cards.
 607:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 608:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 609:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 610:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 611:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 612:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 613:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Starts the SD I/O Read Wait operation.	
 614:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the Start SDIO Read Wait operation. 
 615:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 616:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 617:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 618:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StartSDIOReadWait(FunctionalState NewState)
 619:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 25427              		.loc 1 619 0
 25428              		.cfi_startproc
 25429              		@ args = 0, pretend = 0, frame = 8
 25430              		@ frame_needed = 1, uses_anonymous_args = 0
 25431              		@ link register save eliminated.
 25432 02fc 80B4     		push	{r7}
 25433              	.LCFI42:
 25434              		.cfi_def_cfa_offset 4
 25435 02fe 83B0     		sub	sp, sp, #12
 25436              	.LCFI43:
 25437              		.cfi_def_cfa_offset 16
 25438 0300 00AF     		add	r7, sp, #0
 25439              		.cfi_offset 7, -4
 25440              	.LCFI44:
 25441              		.cfi_def_cfa_register 7
 25442 0302 0346     		mov	r3, r0
 25443 0304 FB71     		strb	r3, [r7, #7]
 620:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 621:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 622:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 623:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTART_BB = (uint32_t) NewState;
 25444              		.loc 1 623 0
 25445 0306 044B     		ldr	r3, .L42
 25446 0308 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 25447 030a 1A60     		str	r2, [r3, #0]
 624:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 25448              		.loc 1 624 0
 25449 030c 07F10C07 		add	r7, r7, #12
 25450 0310 BD46     		mov	sp, r7
 25451 0312 80BC     		pop	{r7}
 25452 0314 7047     		bx	lr
 25453              	.L43:
 25454 0316 00BF     		.align	2
 25455              	.L42:
 25456 0318 A0852542 		.word	1109755296
 25457              		.cfi_endproc
 25458              	.LFE126:
 25460              		.align	2
 25461              		.global	SDIO_StopSDIOReadWait
 25462              		.thumb
 25463              		.thumb_func
 25465              	SDIO_StopSDIOReadWait:
 25466              	.LFB127:
 625:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 626:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 627:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Stops the SD I/O Read Wait operation.	
 628:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the Stop SDIO Read Wait operation. 
 629:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 630:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 631:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 632:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StopSDIOReadWait(FunctionalState NewState)
 633:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 25467              		.loc 1 633 0
 25468              		.cfi_startproc
 25469              		@ args = 0, pretend = 0, frame = 8
 25470              		@ frame_needed = 1, uses_anonymous_args = 0
 25471              		@ link register save eliminated.
 25472 031c 80B4     		push	{r7}
 25473              	.LCFI45:
 25474              		.cfi_def_cfa_offset 4
 25475 031e 83B0     		sub	sp, sp, #12
 25476              	.LCFI46:
 25477              		.cfi_def_cfa_offset 16
 25478 0320 00AF     		add	r7, sp, #0
 25479              		.cfi_offset 7, -4
 25480              	.LCFI47:
 25481              		.cfi_def_cfa_register 7
 25482 0322 0346     		mov	r3, r0
 25483 0324 FB71     		strb	r3, [r7, #7]
 634:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 635:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 636:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 637:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTOP_BB = (uint32_t) NewState;
 25484              		.loc 1 637 0
 25485 0326 044B     		ldr	r3, .L45
 25486 0328 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 25487 032a 1A60     		str	r2, [r3, #0]
 638:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 25488              		.loc 1 638 0
 25489 032c 07F10C07 		add	r7, r7, #12
 25490 0330 BD46     		mov	sp, r7
 25491 0332 80BC     		pop	{r7}
 25492 0334 7047     		bx	lr
 25493              	.L46:
 25494 0336 00BF     		.align	2
 25495              	.L45:
 25496 0338 A4852542 		.word	1109755300
 25497              		.cfi_endproc
 25498              	.LFE127:
 25500              		.align	2
 25501              		.global	SDIO_SetSDIOReadWaitMode
 25502              		.thumb
 25503              		.thumb_func
 25505              	SDIO_SetSDIOReadWaitMode:
 25506              	.LFB128:
 639:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 640:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 641:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sets one of the two options of inserting read wait interval.
 642:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_ReadWaitMode: SD I/O Read Wait operation mode.
 643:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be:
 644:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_CLK: Read Wait control by stopping SDIOCLK
 645:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_DATA2: Read Wait control using SDIO_DATA2
 646:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 647:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 648:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetSDIOReadWaitMode(uint32_t SDIO_ReadWaitMode)
 649:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 25507              		.loc 1 649 0
 25508              		.cfi_startproc
 25509              		@ args = 0, pretend = 0, frame = 8
 25510              		@ frame_needed = 1, uses_anonymous_args = 0
 25511              		@ link register save eliminated.
 25512 033c 80B4     		push	{r7}
 25513              	.LCFI48:
 25514              		.cfi_def_cfa_offset 4
 25515 033e 83B0     		sub	sp, sp, #12
 25516              	.LCFI49:
 25517              		.cfi_def_cfa_offset 16
 25518 0340 00AF     		add	r7, sp, #0
 25519              		.cfi_offset 7, -4
 25520              	.LCFI50:
 25521              		.cfi_def_cfa_register 7
 25522 0342 7860     		str	r0, [r7, #4]
 650:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 651:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_READWAIT_MODE(SDIO_ReadWaitMode));
 652:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 653:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWMOD_BB = SDIO_ReadWaitMode;
 25523              		.loc 1 653 0
 25524 0344 034B     		ldr	r3, .L48
 25525 0346 7A68     		ldr	r2, [r7, #4]
 25526 0348 1A60     		str	r2, [r3, #0]
 654:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 25527              		.loc 1 654 0
 25528 034a 07F10C07 		add	r7, r7, #12
 25529 034e BD46     		mov	sp, r7
 25530 0350 80BC     		pop	{r7}
 25531 0352 7047     		bx	lr
 25532              	.L49:
 25533              		.align	2
 25534              	.L48:
 25535 0354 A8852542 		.word	1109755304
 25536              		.cfi_endproc
 25537              	.LFE128:
 25539              		.align	2
 25540              		.global	SDIO_SetSDIOOperation
 25541              		.thumb
 25542              		.thumb_func
 25544              	SDIO_SetSDIOOperation:
 25545              	.LFB129:
 655:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 656:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 657:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode Operation.
 658:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of SDIO specific operation. 
 659:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 660:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 661:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 662:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetSDIOOperation(FunctionalState NewState)
 663:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 25546              		.loc 1 663 0
 25547              		.cfi_startproc
 25548              		@ args = 0, pretend = 0, frame = 8
 25549              		@ frame_needed = 1, uses_anonymous_args = 0
 25550              		@ link register save eliminated.
 25551 0358 80B4     		push	{r7}
 25552              	.LCFI51:
 25553              		.cfi_def_cfa_offset 4
 25554 035a 83B0     		sub	sp, sp, #12
 25555              	.LCFI52:
 25556              		.cfi_def_cfa_offset 16
 25557 035c 00AF     		add	r7, sp, #0
 25558              		.cfi_offset 7, -4
 25559              	.LCFI53:
 25560              		.cfi_def_cfa_register 7
 25561 035e 0346     		mov	r3, r0
 25562 0360 FB71     		strb	r3, [r7, #7]
 664:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 665:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 666:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 667:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_SDIOEN_BB = (uint32_t)NewState;
 25563              		.loc 1 667 0
 25564 0362 044B     		ldr	r3, .L51
 25565 0364 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 25566 0366 1A60     		str	r2, [r3, #0]
 668:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 25567              		.loc 1 668 0
 25568 0368 07F10C07 		add	r7, r7, #12
 25569 036c BD46     		mov	sp, r7
 25570 036e 80BC     		pop	{r7}
 25571 0370 7047     		bx	lr
 25572              	.L52:
 25573 0372 00BF     		.align	2
 25574              	.L51:
 25575 0374 AC852542 		.word	1109755308
 25576              		.cfi_endproc
 25577              	.LFE129:
 25579              		.align	2
 25580              		.global	SDIO_SendSDIOSuspendCmd
 25581              		.thumb
 25582              		.thumb_func
 25584              	SDIO_SendSDIOSuspendCmd:
 25585              	.LFB130:
 669:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 670:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 671:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode suspend command sending.
 672:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the SD I/O Mode suspend command.
 673:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 674:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 675:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 676:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendSDIOSuspendCmd(FunctionalState NewState)
 677:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 25586              		.loc 1 677 0
 25587              		.cfi_startproc
 25588              		@ args = 0, pretend = 0, frame = 8
 25589              		@ frame_needed = 1, uses_anonymous_args = 0
 25590              		@ link register save eliminated.
 25591 0378 80B4     		push	{r7}
 25592              	.LCFI54:
 25593              		.cfi_def_cfa_offset 4
 25594 037a 83B0     		sub	sp, sp, #12
 25595              	.LCFI55:
 25596              		.cfi_def_cfa_offset 16
 25597 037c 00AF     		add	r7, sp, #0
 25598              		.cfi_offset 7, -4
 25599              	.LCFI56:
 25600              		.cfi_def_cfa_register 7
 25601 037e 0346     		mov	r3, r0
 25602 0380 FB71     		strb	r3, [r7, #7]
 678:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 679:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 680:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 681:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_SDIOSUSPEND_BB = (uint32_t)NewState;
 25603              		.loc 1 681 0
 25604 0382 044B     		ldr	r3, .L54
 25605 0384 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 25606 0386 1A60     		str	r2, [r3, #0]
 682:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 25607              		.loc 1 682 0
 25608 0388 07F10C07 		add	r7, r7, #12
 25609 038c BD46     		mov	sp, r7
 25610 038e 80BC     		pop	{r7}
 25611 0390 7047     		bx	lr
 25612              	.L55:
 25613 0392 00BF     		.align	2
 25614              	.L54:
 25615 0394 AC812542 		.word	1109754284
 25616              		.cfi_endproc
 25617              	.LFE130:
 25619              		.align	2
 25620              		.global	SDIO_CommandCompletionCmd
 25621              		.thumb
 25622              		.thumb_func
 25624              	SDIO_CommandCompletionCmd:
 25625              	.LFB131:
 683:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 684:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 685:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 686:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 687:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 688:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group5 CE-ATA mode management functions
 689:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   CE-ATA mode management functions
 690:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 691:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 692:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 693:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               CE-ATA mode management functions
 694:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 695:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 696:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the CE-ATA card.
 697:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 698:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 699:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 700:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 701:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 702:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 703:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the command completion signal.
 704:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of command completion signal. 
 705:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 706:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 707:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 708:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CommandCompletionCmd(FunctionalState NewState)
 709:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 25626              		.loc 1 709 0
 25627              		.cfi_startproc
 25628              		@ args = 0, pretend = 0, frame = 8
 25629              		@ frame_needed = 1, uses_anonymous_args = 0
 25630              		@ link register save eliminated.
 25631 0398 80B4     		push	{r7}
 25632              	.LCFI57:
 25633              		.cfi_def_cfa_offset 4
 25634 039a 83B0     		sub	sp, sp, #12
 25635              	.LCFI58:
 25636              		.cfi_def_cfa_offset 16
 25637 039c 00AF     		add	r7, sp, #0
 25638              		.cfi_offset 7, -4
 25639              	.LCFI59:
 25640              		.cfi_def_cfa_register 7
 25641 039e 0346     		mov	r3, r0
 25642 03a0 FB71     		strb	r3, [r7, #7]
 710:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 711:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 712:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 713:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_ENCMDCOMPL_BB = (uint32_t)NewState;
 25643              		.loc 1 713 0
 25644 03a2 044B     		ldr	r3, .L57
 25645 03a4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 25646 03a6 1A60     		str	r2, [r3, #0]
 714:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 25647              		.loc 1 714 0
 25648 03a8 07F10C07 		add	r7, r7, #12
 25649 03ac BD46     		mov	sp, r7
 25650 03ae 80BC     		pop	{r7}
 25651 03b0 7047     		bx	lr
 25652              	.L58:
 25653 03b2 00BF     		.align	2
 25654              	.L57:
 25655 03b4 B0812542 		.word	1109754288
 25656              		.cfi_endproc
 25657              	.LFE131:
 25659              		.align	2
 25660              		.global	SDIO_CEATAITCmd
 25661              		.thumb
 25662              		.thumb_func
 25664              	SDIO_CEATAITCmd:
 25665              	.LFB132:
 715:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 716:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 717:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the CE-ATA interrupt.
 718:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of CE-ATA interrupt. 
 719:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 720:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 721:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 722:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CEATAITCmd(FunctionalState NewState)
 723:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 25666              		.loc 1 723 0
 25667              		.cfi_startproc
 25668              		@ args = 0, pretend = 0, frame = 8
 25669              		@ frame_needed = 1, uses_anonymous_args = 0
 25670              		@ link register save eliminated.
 25671 03b8 80B4     		push	{r7}
 25672              	.LCFI60:
 25673              		.cfi_def_cfa_offset 4
 25674 03ba 83B0     		sub	sp, sp, #12
 25675              	.LCFI61:
 25676              		.cfi_def_cfa_offset 16
 25677 03bc 00AF     		add	r7, sp, #0
 25678              		.cfi_offset 7, -4
 25679              	.LCFI62:
 25680              		.cfi_def_cfa_register 7
 25681 03be 0346     		mov	r3, r0
 25682 03c0 FB71     		strb	r3, [r7, #7]
 724:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 725:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 726:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 727:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_NIEN_BB = (uint32_t)((~((uint32_t)NewState)) & ((uint32_t)0x1));
 25683              		.loc 1 727 0
 25684 03c2 074B     		ldr	r3, .L60
 25685 03c4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 25686 03c6 02F00102 		and	r2, r2, #1
 25687 03ca 002A     		cmp	r2, #0
 25688 03cc 14BF     		ite	ne
 25689 03ce 0022     		movne	r2, #0
 25690 03d0 0122     		moveq	r2, #1
 25691 03d2 1A60     		str	r2, [r3, #0]
 728:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 25692              		.loc 1 728 0
 25693 03d4 07F10C07 		add	r7, r7, #12
 25694 03d8 BD46     		mov	sp, r7
 25695 03da 80BC     		pop	{r7}
 25696 03dc 7047     		bx	lr
 25697              	.L61:
 25698 03de 00BF     		.align	2
 25699              	.L60:
 25700 03e0 B4812542 		.word	1109754292
 25701              		.cfi_endproc
 25702              	.LFE132:
 25704              		.align	2
 25705              		.global	SDIO_SendCEATACmd
 25706              		.thumb
 25707              		.thumb_func
 25709              	SDIO_SendCEATACmd:
 25710              	.LFB133:
 729:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 730:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 731:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sends CE-ATA command (CMD61).
 732:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of CE-ATA command. 
 733:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 734:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 735:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 736:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendCEATACmd(FunctionalState NewState)
 737:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 25711              		.loc 1 737 0
 25712              		.cfi_startproc
 25713              		@ args = 0, pretend = 0, frame = 8
 25714              		@ frame_needed = 1, uses_anonymous_args = 0
 25715              		@ link register save eliminated.
 25716 03e4 80B4     		push	{r7}
 25717              	.LCFI63:
 25718              		.cfi_def_cfa_offset 4
 25719 03e6 83B0     		sub	sp, sp, #12
 25720              	.LCFI64:
 25721              		.cfi_def_cfa_offset 16
 25722 03e8 00AF     		add	r7, sp, #0
 25723              		.cfi_offset 7, -4
 25724              	.LCFI65:
 25725              		.cfi_def_cfa_register 7
 25726 03ea 0346     		mov	r3, r0
 25727 03ec FB71     		strb	r3, [r7, #7]
 738:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 739:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 740:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 741:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_ATACMD_BB = (uint32_t)NewState;
 25728              		.loc 1 741 0
 25729 03ee 044B     		ldr	r3, .L63
 25730 03f0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 25731 03f2 1A60     		str	r2, [r3, #0]
 742:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 25732              		.loc 1 742 0
 25733 03f4 07F10C07 		add	r7, r7, #12
 25734 03f8 BD46     		mov	sp, r7
 25735 03fa 80BC     		pop	{r7}
 25736 03fc 7047     		bx	lr
 25737              	.L64:
 25738 03fe 00BF     		.align	2
 25739              	.L63:
 25740 0400 B8812542 		.word	1109754296
 25741              		.cfi_endproc
 25742              	.LFE133:
 25744              		.align	2
 25745              		.global	SDIO_DMACmd
 25746              		.thumb
 25747              		.thumb_func
 25749              	SDIO_DMACmd:
 25750              	.LFB134:
 743:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 744:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 745:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 746:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 747:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 748:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group6 DMA transfers management functions
 749:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   DMA transfers management functions
 750:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 751:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 752:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 753:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               DMA transfers management functions
 754:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 755:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 756:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program SDIO DMA transfer.
 757:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 758:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 759:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 760:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 761:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 762:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 763:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO DMA request.
 764:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the selected SDIO DMA request.
 765:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 766:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 767:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 768:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DMACmd(FunctionalState NewState)
 769:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 25751              		.loc 1 769 0
 25752              		.cfi_startproc
 25753              		@ args = 0, pretend = 0, frame = 8
 25754              		@ frame_needed = 1, uses_anonymous_args = 0
 25755              		@ link register save eliminated.
 25756 0404 80B4     		push	{r7}
 25757              	.LCFI66:
 25758              		.cfi_def_cfa_offset 4
 25759 0406 83B0     		sub	sp, sp, #12
 25760              	.LCFI67:
 25761              		.cfi_def_cfa_offset 16
 25762 0408 00AF     		add	r7, sp, #0
 25763              		.cfi_offset 7, -4
 25764              	.LCFI68:
 25765              		.cfi_def_cfa_register 7
 25766 040a 0346     		mov	r3, r0
 25767 040c FB71     		strb	r3, [r7, #7]
 770:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 771:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 772:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 773:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_DMAEN_BB = (uint32_t)NewState;
 25768              		.loc 1 773 0
 25769 040e 044B     		ldr	r3, .L66
 25770 0410 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 25771 0412 1A60     		str	r2, [r3, #0]
 774:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 25772              		.loc 1 774 0
 25773 0414 07F10C07 		add	r7, r7, #12
 25774 0418 BD46     		mov	sp, r7
 25775 041a 80BC     		pop	{r7}
 25776 041c 7047     		bx	lr
 25777              	.L67:
 25778 041e 00BF     		.align	2
 25779              	.L66:
 25780 0420 8C852542 		.word	1109755276
 25781              		.cfi_endproc
 25782              	.LFE134:
 25784              		.align	2
 25785              		.global	SDIO_ITConfig
 25786              		.thumb
 25787              		.thumb_func
 25789              	SDIO_ITConfig:
 25790              	.LFB135:
 775:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 776:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 777:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 778:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 779:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 780:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group7 Interrupts and flags management functions
 781:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Interrupts and flags management functions  
 782:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 783:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 784:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 785:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****                        Interrupts and flags management functions
 786:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 787:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 788:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 789:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 790:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 791:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 792:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 793:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 794:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO interrupts.
 795:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt sources to be enabled or disabled.
 796:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 797:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 798:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 799:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 800:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 801:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 802:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 803:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 804:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 805:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 806:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 807:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 808:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 809:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 810:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 811:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 812:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 813:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 814:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 815:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 816:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 817:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 818:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 819:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 820:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 821:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 822:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the specified SDIO interrupts.
 823:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 824:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None 
 825:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 826:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ITConfig(uint32_t SDIO_IT, FunctionalState NewState)
 827:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 25791              		.loc 1 827 0
 25792              		.cfi_startproc
 25793              		@ args = 0, pretend = 0, frame = 8
 25794              		@ frame_needed = 1, uses_anonymous_args = 0
 25795              		@ link register save eliminated.
 25796 0424 80B4     		push	{r7}
 25797              	.LCFI69:
 25798              		.cfi_def_cfa_offset 4
 25799 0426 83B0     		sub	sp, sp, #12
 25800              	.LCFI70:
 25801              		.cfi_def_cfa_offset 16
 25802 0428 00AF     		add	r7, sp, #0
 25803              		.cfi_offset 7, -4
 25804              	.LCFI71:
 25805              		.cfi_def_cfa_register 7
 25806 042a 7860     		str	r0, [r7, #4]
 25807 042c 0B46     		mov	r3, r1
 25808 042e FB70     		strb	r3, [r7, #3]
 828:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 829:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_IT(SDIO_IT));
 830:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 831:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 832:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if (NewState != DISABLE)
 25809              		.loc 1 832 0
 25810 0430 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 25811 0432 002B     		cmp	r3, #0
 25812 0434 07D0     		beq	.L69
 833:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 834:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     /* Enable the SDIO interrupts */
 835:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     SDIO->MASK |= SDIO_IT;
 25813              		.loc 1 835 0
 25814 0436 0B4B     		ldr	r3, .L71
 25815 0438 0A4A     		ldr	r2, .L71
 25816 043a D16B     		ldr	r1, [r2, #60]
 25817 043c 7A68     		ldr	r2, [r7, #4]
 25818 043e 41EA0202 		orr	r2, r1, r2
 25819 0442 DA63     		str	r2, [r3, #60]
 25820 0444 08E0     		b	.L68
 25821              	.L69:
 836:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 837:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 838:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 839:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     /* Disable the SDIO interrupts */
 840:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     SDIO->MASK &= ~SDIO_IT;
 25822              		.loc 1 840 0
 25823 0446 074B     		ldr	r3, .L71
 25824 0448 064A     		ldr	r2, .L71
 25825 044a D16B     		ldr	r1, [r2, #60]
 25826 044c 7A68     		ldr	r2, [r7, #4]
 25827 044e 6FEA0202 		mvn	r2, r2
 25828 0452 01EA0202 		and	r2, r1, r2
 25829 0456 DA63     		str	r2, [r3, #60]
 25830              	.L68:
 841:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   } 
 842:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 25831              		.loc 1 842 0
 25832 0458 07F10C07 		add	r7, r7, #12
 25833 045c BD46     		mov	sp, r7
 25834 045e 80BC     		pop	{r7}
 25835 0460 7047     		bx	lr
 25836              	.L72:
 25837 0462 00BF     		.align	2
 25838              	.L71:
 25839 0464 002C0140 		.word	1073818624
 25840              		.cfi_endproc
 25841              	.LFE135:
 25843              		.align	2
 25844              		.global	SDIO_GetFlagStatus
 25845              		.thumb
 25846              		.thumb_func
 25848              	SDIO_GetFlagStatus:
 25849              	.LFB136:
 843:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 844:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 845:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Checks whether the specified SDIO flag is set or not.
 846:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to check. 
 847:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 848:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 849:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 850:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 851:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 852:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 853:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 854:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 855:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 856:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 857:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 858:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 859:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDACT:   Command transfer in progress
 860:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXACT:    Data transmit in progress
 861:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXACT:    Data receive in progress
 862:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOHE: Transmit FIFO Half Empty
 863:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOHF: Receive FIFO Half Full
 864:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOF:  Transmit FIFO full
 865:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOF:  Receive FIFO full
 866:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOE:  Transmit FIFO empty
 867:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOE:  Receive FIFO empty
 868:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXDAVL:   Data available in transmit FIFO
 869:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXDAVL:   Data available in receive FIFO
 870:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 871:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 872:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The new state of SDIO_FLAG (SET or RESET).
 873:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 874:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** FlagStatus SDIO_GetFlagStatus(uint32_t SDIO_FLAG)
 875:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 25850              		.loc 1 875 0
 25851              		.cfi_startproc
 25852              		@ args = 0, pretend = 0, frame = 16
 25853              		@ frame_needed = 1, uses_anonymous_args = 0
 25854              		@ link register save eliminated.
 25855 0468 80B4     		push	{r7}
 25856              	.LCFI72:
 25857              		.cfi_def_cfa_offset 4
 25858 046a 85B0     		sub	sp, sp, #20
 25859              	.LCFI73:
 25860              		.cfi_def_cfa_offset 24
 25861 046c 00AF     		add	r7, sp, #0
 25862              		.cfi_offset 7, -4
 25863              	.LCFI74:
 25864              		.cfi_def_cfa_register 7
 25865 046e 7860     		str	r0, [r7, #4]
 876:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   FlagStatus bitstatus = RESET;
 25866              		.loc 1 876 0
 25867 0470 4FF00003 		mov	r3, #0
 25868 0474 FB73     		strb	r3, [r7, #15]
 877:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 878:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 879:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_FLAG(SDIO_FLAG));
 880:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 881:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if ((SDIO->STA & SDIO_FLAG) != (uint32_t)RESET)
 25869              		.loc 1 881 0
 25870 0476 0A4B     		ldr	r3, .L76
 25871 0478 5A6B     		ldr	r2, [r3, #52]
 25872 047a 7B68     		ldr	r3, [r7, #4]
 25873 047c 02EA0303 		and	r3, r2, r3
 25874 0480 002B     		cmp	r3, #0
 25875 0482 03D0     		beq	.L74
 882:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 883:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = SET;
 25876              		.loc 1 883 0
 25877 0484 4FF00103 		mov	r3, #1
 25878 0488 FB73     		strb	r3, [r7, #15]
 25879 048a 02E0     		b	.L75
 25880              	.L74:
 884:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 885:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 886:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 887:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = RESET;
 25881              		.loc 1 887 0
 25882 048c 4FF00003 		mov	r3, #0
 25883 0490 FB73     		strb	r3, [r7, #15]
 25884              	.L75:
 888:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 889:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return bitstatus;
 25885              		.loc 1 889 0
 25886 0492 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 890:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 25887              		.loc 1 890 0
 25888 0494 1846     		mov	r0, r3
 25889 0496 07F11407 		add	r7, r7, #20
 25890 049a BD46     		mov	sp, r7
 25891 049c 80BC     		pop	{r7}
 25892 049e 7047     		bx	lr
 25893              	.L77:
 25894              		.align	2
 25895              	.L76:
 25896 04a0 002C0140 		.word	1073818624
 25897              		.cfi_endproc
 25898              	.LFE136:
 25900              		.align	2
 25901              		.global	SDIO_ClearFlag
 25902              		.thumb
 25903              		.thumb_func
 25905              	SDIO_ClearFlag:
 25906              	.LFB137:
 891:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 892:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 893:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Clears the SDIO's pending flags.
 894:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to clear.  
 895:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 896:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 897:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 898:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 899:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 900:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 901:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 902:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 903:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 904:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 905:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 906:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 907:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 908:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 909:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 910:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 911:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClearFlag(uint32_t SDIO_FLAG)
 912:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 25907              		.loc 1 912 0
 25908              		.cfi_startproc
 25909              		@ args = 0, pretend = 0, frame = 8
 25910              		@ frame_needed = 1, uses_anonymous_args = 0
 25911              		@ link register save eliminated.
 25912 04a4 80B4     		push	{r7}
 25913              	.LCFI75:
 25914              		.cfi_def_cfa_offset 4
 25915 04a6 83B0     		sub	sp, sp, #12
 25916              	.LCFI76:
 25917              		.cfi_def_cfa_offset 16
 25918 04a8 00AF     		add	r7, sp, #0
 25919              		.cfi_offset 7, -4
 25920              	.LCFI77:
 25921              		.cfi_def_cfa_register 7
 25922 04aa 7860     		str	r0, [r7, #4]
 913:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 914:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_FLAG(SDIO_FLAG));
 915:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 916:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ICR = SDIO_FLAG;
 25923              		.loc 1 916 0
 25924 04ac 034B     		ldr	r3, .L79
 25925 04ae 7A68     		ldr	r2, [r7, #4]
 25926 04b0 9A63     		str	r2, [r3, #56]
 917:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 25927              		.loc 1 917 0
 25928 04b2 07F10C07 		add	r7, r7, #12
 25929 04b6 BD46     		mov	sp, r7
 25930 04b8 80BC     		pop	{r7}
 25931 04ba 7047     		bx	lr
 25932              	.L80:
 25933              		.align	2
 25934              	.L79:
 25935 04bc 002C0140 		.word	1073818624
 25936              		.cfi_endproc
 25937              	.LFE137:
 25939              		.align	2
 25940              		.global	SDIO_GetITStatus
 25941              		.thumb
 25942              		.thumb_func
 25944              	SDIO_GetITStatus:
 25945              	.LFB138:
 918:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 919:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 920:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Checks whether the specified SDIO interrupt has occurred or not.
 921:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt source to check. 
 922:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 923:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 924:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 925:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 926:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 927:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 928:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 929:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 930:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 931:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 932:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 933:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 934:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 935:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 936:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 937:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 938:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 939:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 940:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 941:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 942:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 943:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 944:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 945:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 946:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 947:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 948:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The new state of SDIO_IT (SET or RESET).
 949:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 950:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** ITStatus SDIO_GetITStatus(uint32_t SDIO_IT)
 951:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 25946              		.loc 1 951 0
 25947              		.cfi_startproc
 25948              		@ args = 0, pretend = 0, frame = 16
 25949              		@ frame_needed = 1, uses_anonymous_args = 0
 25950              		@ link register save eliminated.
 25951 04c0 80B4     		push	{r7}
 25952              	.LCFI78:
 25953              		.cfi_def_cfa_offset 4
 25954 04c2 85B0     		sub	sp, sp, #20
 25955              	.LCFI79:
 25956              		.cfi_def_cfa_offset 24
 25957 04c4 00AF     		add	r7, sp, #0
 25958              		.cfi_offset 7, -4
 25959              	.LCFI80:
 25960              		.cfi_def_cfa_register 7
 25961 04c6 7860     		str	r0, [r7, #4]
 952:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ITStatus bitstatus = RESET;
 25962              		.loc 1 952 0
 25963 04c8 4FF00003 		mov	r3, #0
 25964 04cc FB73     		strb	r3, [r7, #15]
 953:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 954:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 955:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_GET_IT(SDIO_IT));
 956:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if ((SDIO->STA & SDIO_IT) != (uint32_t)RESET)  
 25965              		.loc 1 956 0
 25966 04ce 0A4B     		ldr	r3, .L84
 25967 04d0 5A6B     		ldr	r2, [r3, #52]
 25968 04d2 7B68     		ldr	r3, [r7, #4]
 25969 04d4 02EA0303 		and	r3, r2, r3
 25970 04d8 002B     		cmp	r3, #0
 25971 04da 03D0     		beq	.L82
 957:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 958:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = SET;
 25972              		.loc 1 958 0
 25973 04dc 4FF00103 		mov	r3, #1
 25974 04e0 FB73     		strb	r3, [r7, #15]
 25975 04e2 02E0     		b	.L83
 25976              	.L82:
 959:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 960:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 961:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 962:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = RESET;
 25977              		.loc 1 962 0
 25978 04e4 4FF00003 		mov	r3, #0
 25979 04e8 FB73     		strb	r3, [r7, #15]
 25980              	.L83:
 963:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 964:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return bitstatus;
 25981              		.loc 1 964 0
 25982 04ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 965:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 25983              		.loc 1 965 0
 25984 04ec 1846     		mov	r0, r3
 25985 04ee 07F11407 		add	r7, r7, #20
 25986 04f2 BD46     		mov	sp, r7
 25987 04f4 80BC     		pop	{r7}
 25988 04f6 7047     		bx	lr
 25989              	.L85:
 25990              		.align	2
 25991              	.L84:
 25992 04f8 002C0140 		.word	1073818624
 25993              		.cfi_endproc
 25994              	.LFE138:
 25996              		.align	2
 25997              		.global	SDIO_ClearITPendingBit
 25998              		.thumb
 25999              		.thumb_func
 26001              	SDIO_ClearITPendingBit:
 26002              	.LFB139:
 966:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 967:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 968:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Clears the SDIO's interrupt pending bits.
 969:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the interrupt pending bit to clear. 
 970:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 971:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 972:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 973:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 974:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 975:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 976:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 977:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 978:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 979:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIO_DCOUNT, is zero) interrupt
 980:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 981:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 982:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 983:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61
 984:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 985:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 986:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClearITPendingBit(uint32_t SDIO_IT)
 987:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 26003              		.loc 1 987 0
 26004              		.cfi_startproc
 26005              		@ args = 0, pretend = 0, frame = 8
 26006              		@ frame_needed = 1, uses_anonymous_args = 0
 26007              		@ link register save eliminated.
 26008 04fc 80B4     		push	{r7}
 26009              	.LCFI81:
 26010              		.cfi_def_cfa_offset 4
 26011 04fe 83B0     		sub	sp, sp, #12
 26012              	.LCFI82:
 26013              		.cfi_def_cfa_offset 16
 26014 0500 00AF     		add	r7, sp, #0
 26015              		.cfi_offset 7, -4
 26016              	.LCFI83:
 26017              		.cfi_def_cfa_register 7
 26018 0502 7860     		str	r0, [r7, #4]
 988:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 989:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_IT(SDIO_IT));
 990:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 991:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ICR = SDIO_IT;
 26019              		.loc 1 991 0
 26020 0504 034B     		ldr	r3, .L87
 26021 0506 7A68     		ldr	r2, [r7, #4]
 26022 0508 9A63     		str	r2, [r3, #56]
 992:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 26023              		.loc 1 992 0
 26024 050a 07F10C07 		add	r7, r7, #12
 26025 050e BD46     		mov	sp, r7
 26026 0510 80BC     		pop	{r7}
 26027 0512 7047     		bx	lr
 26028              	.L88:
 26029              		.align	2
 26030              	.L87:
 26031 0514 002C0140 		.word	1073818624
 26032              		.cfi_endproc
 26033              	.LFE139:
 26035              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_sdio.c
     /tmp/ccKRZMan.s:24660  .text:00000000 $t
     /tmp/ccKRZMan.s:24665  .text:00000000 SDIO_DeInit
     /tmp/ccKRZMan.s:24697  .text:00000020 SDIO_Init
     /tmp/ccKRZMan.s:24768  .text:00000080 $d
     /tmp/ccKRZMan.s:24772  .text:00000084 $t
     /tmp/ccKRZMan.s:24777  .text:00000084 SDIO_StructInit
     /tmp/ccKRZMan.s:24832  .text:000000c8 SDIO_ClockCmd
     /tmp/ccKRZMan.s:24863  .text:000000e4 $d
     /tmp/ccKRZMan.s:24867  .text:000000e8 $t
     /tmp/ccKRZMan.s:24872  .text:000000e8 SDIO_SetPowerState
     /tmp/ccKRZMan.s:24902  .text:00000100 $d
     /tmp/ccKRZMan.s:24906  .text:00000104 $t
     /tmp/ccKRZMan.s:24911  .text:00000104 SDIO_GetPowerState
     /tmp/ccKRZMan.s:24937  .text:00000118 $d
     /tmp/ccKRZMan.s:24941  .text:0000011c $t
     /tmp/ccKRZMan.s:24946  .text:0000011c SDIO_SendCommand
     /tmp/ccKRZMan.s:25010  .text:00000174 $d
     /tmp/ccKRZMan.s:25014  .text:00000178 $t
     /tmp/ccKRZMan.s:25019  .text:00000178 SDIO_CmdStructInit
     /tmp/ccKRZMan.s:25070  .text:000001b4 SDIO_GetCommandResponse
     /tmp/ccKRZMan.s:25096  .text:000001c8 $d
     /tmp/ccKRZMan.s:25100  .text:000001cc $t
     /tmp/ccKRZMan.s:25105  .text:000001cc SDIO_GetResponse
     /tmp/ccKRZMan.s:25143  .text:000001f4 $d
     /tmp/ccKRZMan.s:25147  .text:000001f8 $t
     /tmp/ccKRZMan.s:25152  .text:000001f8 SDIO_DataConfig
     /tmp/ccKRZMan.s:25220  .text:00000254 $d
     /tmp/ccKRZMan.s:25224  .text:00000258 $t
     /tmp/ccKRZMan.s:25229  .text:00000258 SDIO_DataStructInit
     /tmp/ccKRZMan.s:25284  .text:0000029c SDIO_GetDataCounter
     /tmp/ccKRZMan.s:25309  .text:000002ac $d
     /tmp/ccKRZMan.s:25313  .text:000002b0 $t
     /tmp/ccKRZMan.s:25318  .text:000002b0 SDIO_ReadData
     /tmp/ccKRZMan.s:25343  .text:000002c4 $d
     /tmp/ccKRZMan.s:25347  .text:000002c8 $t
     /tmp/ccKRZMan.s:25352  .text:000002c8 SDIO_WriteData
     /tmp/ccKRZMan.s:25382  .text:000002e4 $d
     /tmp/ccKRZMan.s:25386  .text:000002e8 $t
     /tmp/ccKRZMan.s:25391  .text:000002e8 SDIO_GetFIFOCount
     /tmp/ccKRZMan.s:25416  .text:000002f8 $d
     /tmp/ccKRZMan.s:25420  .text:000002fc $t
     /tmp/ccKRZMan.s:25425  .text:000002fc SDIO_StartSDIOReadWait
     /tmp/ccKRZMan.s:25456  .text:00000318 $d
     /tmp/ccKRZMan.s:25460  .text:0000031c $t
     /tmp/ccKRZMan.s:25465  .text:0000031c SDIO_StopSDIOReadWait
     /tmp/ccKRZMan.s:25496  .text:00000338 $d
     /tmp/ccKRZMan.s:25500  .text:0000033c $t
     /tmp/ccKRZMan.s:25505  .text:0000033c SDIO_SetSDIOReadWaitMode
     /tmp/ccKRZMan.s:25535  .text:00000354 $d
     /tmp/ccKRZMan.s:25539  .text:00000358 $t
     /tmp/ccKRZMan.s:25544  .text:00000358 SDIO_SetSDIOOperation
     /tmp/ccKRZMan.s:25575  .text:00000374 $d
     /tmp/ccKRZMan.s:25579  .text:00000378 $t
     /tmp/ccKRZMan.s:25584  .text:00000378 SDIO_SendSDIOSuspendCmd
     /tmp/ccKRZMan.s:25615  .text:00000394 $d
     /tmp/ccKRZMan.s:25619  .text:00000398 $t
     /tmp/ccKRZMan.s:25624  .text:00000398 SDIO_CommandCompletionCmd
     /tmp/ccKRZMan.s:25655  .text:000003b4 $d
     /tmp/ccKRZMan.s:25659  .text:000003b8 $t
     /tmp/ccKRZMan.s:25664  .text:000003b8 SDIO_CEATAITCmd
     /tmp/ccKRZMan.s:25700  .text:000003e0 $d
     /tmp/ccKRZMan.s:25704  .text:000003e4 $t
     /tmp/ccKRZMan.s:25709  .text:000003e4 SDIO_SendCEATACmd
     /tmp/ccKRZMan.s:25740  .text:00000400 $d
     /tmp/ccKRZMan.s:25744  .text:00000404 $t
     /tmp/ccKRZMan.s:25749  .text:00000404 SDIO_DMACmd
     /tmp/ccKRZMan.s:25780  .text:00000420 $d
     /tmp/ccKRZMan.s:25784  .text:00000424 $t
     /tmp/ccKRZMan.s:25789  .text:00000424 SDIO_ITConfig
     /tmp/ccKRZMan.s:25839  .text:00000464 $d
     /tmp/ccKRZMan.s:25843  .text:00000468 $t
     /tmp/ccKRZMan.s:25848  .text:00000468 SDIO_GetFlagStatus
     /tmp/ccKRZMan.s:25896  .text:000004a0 $d
     /tmp/ccKRZMan.s:25900  .text:000004a4 $t
     /tmp/ccKRZMan.s:25905  .text:000004a4 SDIO_ClearFlag
     /tmp/ccKRZMan.s:25935  .text:000004bc $d
     /tmp/ccKRZMan.s:25939  .text:000004c0 $t
     /tmp/ccKRZMan.s:25944  .text:000004c0 SDIO_GetITStatus
     /tmp/ccKRZMan.s:25992  .text:000004f8 $d
     /tmp/ccKRZMan.s:25996  .text:000004fc $t
     /tmp/ccKRZMan.s:26001  .text:000004fc SDIO_ClearITPendingBit
     /tmp/ccKRZMan.s:26031  .text:00000514 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
