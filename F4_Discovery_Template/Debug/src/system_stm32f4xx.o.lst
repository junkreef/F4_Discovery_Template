   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"system_stm32f4xx.c"
  23              	.Ltext0:
  24              		.file 1 "../src/system_stm32f4xx.c"
 24575              		.align	2
 24578              	SystemCoreClock:
 24579 0000 007A030A 		.word	168000000
 24580              		.global	AHBPrescTable
 24581              		.align	2
 24584              	AHBPrescTable:
 24585 0004 00       		.byte	0
 24586 0005 00       		.byte	0
 24587 0006 00       		.byte	0
 24588 0007 00       		.byte	0
 24589 0008 00       		.byte	0
 24590 0009 00       		.byte	0
 24591 000a 00       		.byte	0
 24592 000b 00       		.byte	0
 24593 000c 01       		.byte	1
 24594 000d 02       		.byte	2
 24595 000e 03       		.byte	3
 24596 000f 04       		.byte	4
 24597 0010 06       		.byte	6
 24598 0011 07       		.byte	7
 24599 0012 08       		.byte	8
 24600 0013 09       		.byte	9
 24601              		.text
 24602              		.align	2
 24603              		.global	SystemInit
 24604              		.thumb
 24605              		.thumb_func
 24607              	SystemInit:
 24608              	.LFB110:
   1:../src/system_stm32f4xx.c **** /**
   2:../src/system_stm32f4xx.c ****   ******************************************************************************
   3:../src/system_stm32f4xx.c ****   * @file    system_stm32f4xx.c
   4:../src/system_stm32f4xx.c ****   * @author  MCD Application Team
   5:../src/system_stm32f4xx.c ****   * @version V1.0.0
   6:../src/system_stm32f4xx.c ****   * @date    19-September-2011
   7:../src/system_stm32f4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   8:../src/system_stm32f4xx.c ****   *          This file contains the system clock configuration for STM32F4xx devices,
   9:../src/system_stm32f4xx.c ****   *          and is generated by the clock configuration tool
  10:../src/system_stm32f4xx.c ****   *          stm32f4xx_Clock_Configuration_V1.0.0.xls
  11:../src/system_stm32f4xx.c ****   *             
  12:../src/system_stm32f4xx.c ****   * 1.  This file provides two functions and one global variable to be called from 
  13:../src/system_stm32f4xx.c ****   *     user application:
  14:../src/system_stm32f4xx.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  15:../src/system_stm32f4xx.c ****   *                      and Divider factors, AHB/APBx prescalers and Flash settings),
  16:../src/system_stm32f4xx.c ****   *                      depending on the configuration made in the clock xls tool. 
  17:../src/system_stm32f4xx.c ****   *                      This function is called at startup just after reset and 
  18:../src/system_stm32f4xx.c ****   *                      before branch to main program. This call is made inside
  19:../src/system_stm32f4xx.c ****   *                      the "startup_stm32f4xx.s" file.
  20:../src/system_stm32f4xx.c ****   *
  21:../src/system_stm32f4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  22:../src/system_stm32f4xx.c ****   *                                  by the user application to setup the SysTick 
  23:../src/system_stm32f4xx.c ****   *                                  timer or configure other parameters.
  24:../src/system_stm32f4xx.c ****   *                                     
  25:../src/system_stm32f4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  26:../src/system_stm32f4xx.c ****   *                                 be called whenever the core clock is changed
  27:../src/system_stm32f4xx.c ****   *                                 during program execution.
  28:../src/system_stm32f4xx.c ****   *
  29:../src/system_stm32f4xx.c ****   * 2. After each device reset the HSI (16 MHz) is used as system clock source.
  30:../src/system_stm32f4xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f4xx.s" file, to
  31:../src/system_stm32f4xx.c ****   *    configure the system clock before to branch to main program.
  32:../src/system_stm32f4xx.c ****   *
  33:../src/system_stm32f4xx.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  34:../src/system_stm32f4xx.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  35:../src/system_stm32f4xx.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  36:../src/system_stm32f4xx.c ****   *
  37:../src/system_stm32f4xx.c ****   * 4. The default value of HSE crystal is set to 8 MHz, refer to "HSE_VALUE" define
  38:../src/system_stm32f4xx.c ****   *    in "stm32f4xx.h" file. When HSE is used as system clock source, directly or
  39:../src/system_stm32f4xx.c ****   *    through PLL, and you are using different crystal you have to adapt the HSE
  40:../src/system_stm32f4xx.c ****   *    value to your own configuration.
  41:../src/system_stm32f4xx.c ****   *
  42:../src/system_stm32f4xx.c ****   * 5. This file configures the system clock as follows:
  43:../src/system_stm32f4xx.c ****   *=============================================================================
  44:../src/system_stm32f4xx.c ****   *=============================================================================
  45:../src/system_stm32f4xx.c ****   *        Supported STM32F4xx device revision    | Rev A
  46:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  47:../src/system_stm32f4xx.c ****   *        System Clock source                    | PLL (HSE)
  48:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  49:../src/system_stm32f4xx.c ****   *        SYSCLK(Hz)                             | 168000000
  50:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  51:../src/system_stm32f4xx.c ****   *        HCLK(Hz)                               | 168000000
  52:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  53:../src/system_stm32f4xx.c ****   *        AHB Prescaler                          | 1
  54:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  55:../src/system_stm32f4xx.c ****   *        APB1 Prescaler                         | 4
  56:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  57:../src/system_stm32f4xx.c ****   *        APB2 Prescaler                         | 2
  58:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  59:../src/system_stm32f4xx.c ****   *        HSE Frequency(Hz)                      | 8000000
  60:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  61:../src/system_stm32f4xx.c ****   *        PLL_M                                  | 8
  62:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  63:../src/system_stm32f4xx.c ****   *        PLL_N                                  | 336
  64:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  65:../src/system_stm32f4xx.c ****   *        PLL_P                                  | 2
  66:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  67:../src/system_stm32f4xx.c ****   *        PLL_Q                                  | 7
  68:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  69:../src/system_stm32f4xx.c ****   *        PLLI2S_N                               | NA
  70:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  71:../src/system_stm32f4xx.c ****   *        PLLI2S_R                               | NA
  72:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  73:../src/system_stm32f4xx.c ****   *        I2S input clock                        | NA
  74:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  75:../src/system_stm32f4xx.c ****   *        VDD(V)                                 | 3.3
  76:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  77:../src/system_stm32f4xx.c ****   *        High Performance mode                  | Enabled
  78:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  79:../src/system_stm32f4xx.c ****   *        Flash Latency(WS)                      | 5
  80:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  81:../src/system_stm32f4xx.c ****   *        Prefetch Buffer                        | OFF
  82:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  83:../src/system_stm32f4xx.c ****   *        Instruction cache                      | ON
  84:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  85:../src/system_stm32f4xx.c ****   *        Data cache                             | ON
  86:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  87:../src/system_stm32f4xx.c ****   *        Require 48MHz for USB OTG FS,          | Enabled
  88:../src/system_stm32f4xx.c ****   *        SDIO and RNG clock                     |
  89:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  90:../src/system_stm32f4xx.c ****   *=============================================================================
  91:../src/system_stm32f4xx.c ****   ****************************************************************************** 
  92:../src/system_stm32f4xx.c ****   * @attention
  93:../src/system_stm32f4xx.c ****   *
  94:../src/system_stm32f4xx.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  95:../src/system_stm32f4xx.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  96:../src/system_stm32f4xx.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  97:../src/system_stm32f4xx.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  98:../src/system_stm32f4xx.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  99:../src/system_stm32f4xx.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 100:../src/system_stm32f4xx.c ****   *
 101:../src/system_stm32f4xx.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 102:../src/system_stm32f4xx.c ****   ******************************************************************************
 103:../src/system_stm32f4xx.c ****   */
 104:../src/system_stm32f4xx.c **** 
 105:../src/system_stm32f4xx.c **** /** @addtogroup CMSIS
 106:../src/system_stm32f4xx.c ****   * @{
 107:../src/system_stm32f4xx.c ****   */
 108:../src/system_stm32f4xx.c **** 
 109:../src/system_stm32f4xx.c **** /** @addtogroup stm32f4xx_system
 110:../src/system_stm32f4xx.c ****   * @{
 111:../src/system_stm32f4xx.c ****   */  
 112:../src/system_stm32f4xx.c ****   
 113:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Includes
 114:../src/system_stm32f4xx.c ****   * @{
 115:../src/system_stm32f4xx.c ****   */
 116:../src/system_stm32f4xx.c **** 
 117:../src/system_stm32f4xx.c **** #include "stm32f4xx.h"
 118:../src/system_stm32f4xx.c **** 
 119:../src/system_stm32f4xx.c **** /**
 120:../src/system_stm32f4xx.c ****   * @}
 121:../src/system_stm32f4xx.c ****   */
 122:../src/system_stm32f4xx.c **** 
 123:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_TypesDefinitions
 124:../src/system_stm32f4xx.c ****   * @{
 125:../src/system_stm32f4xx.c ****   */
 126:../src/system_stm32f4xx.c **** 
 127:../src/system_stm32f4xx.c **** /**
 128:../src/system_stm32f4xx.c ****   * @}
 129:../src/system_stm32f4xx.c ****   */
 130:../src/system_stm32f4xx.c **** 
 131:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Defines
 132:../src/system_stm32f4xx.c ****   * @{
 133:../src/system_stm32f4xx.c ****   */
 134:../src/system_stm32f4xx.c **** 
 135:../src/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to use external SRAM mounted
 136:../src/system_stm32f4xx.c ****      on STM324xG_EVAL board as data memory  */
 137:../src/system_stm32f4xx.c **** /* #define DATA_IN_ExtSRAM */
 138:../src/system_stm32f4xx.c **** 
 139:../src/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 140:../src/system_stm32f4xx.c ****      Internal SRAM. */
 141:../src/system_stm32f4xx.c **** /* #define VECT_TAB_SRAM */
 142:../src/system_stm32f4xx.c **** #define VECT_TAB_OFFSET  0x00 /*!< Vector Table base offset field. 
 143:../src/system_stm32f4xx.c ****                                    This value must be a multiple of 0x200. */
 144:../src/system_stm32f4xx.c **** 
 145:../src/system_stm32f4xx.c **** 
 146:../src/system_stm32f4xx.c **** /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N */
 147:../src/system_stm32f4xx.c **** #define PLL_M      8
 148:../src/system_stm32f4xx.c **** #define PLL_N      336
 149:../src/system_stm32f4xx.c **** 
 150:../src/system_stm32f4xx.c **** /* SYSCLK = PLL_VCO / PLL_P */
 151:../src/system_stm32f4xx.c **** #define PLL_P      2
 152:../src/system_stm32f4xx.c **** 
 153:../src/system_stm32f4xx.c **** /* USB OTG FS, SDIO and RNG Clock =  PLL_VCO / PLLQ */
 154:../src/system_stm32f4xx.c **** #define PLL_Q      7
 155:../src/system_stm32f4xx.c **** 
 156:../src/system_stm32f4xx.c **** /**
 157:../src/system_stm32f4xx.c ****   * @}
 158:../src/system_stm32f4xx.c ****   */
 159:../src/system_stm32f4xx.c **** 
 160:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Macros
 161:../src/system_stm32f4xx.c ****   * @{
 162:../src/system_stm32f4xx.c ****   */
 163:../src/system_stm32f4xx.c **** 
 164:../src/system_stm32f4xx.c **** /**
 165:../src/system_stm32f4xx.c ****   * @}
 166:../src/system_stm32f4xx.c ****   */
 167:../src/system_stm32f4xx.c **** 
 168:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Variables
 169:../src/system_stm32f4xx.c ****   * @{
 170:../src/system_stm32f4xx.c ****   */
 171:../src/system_stm32f4xx.c **** 
 172:../src/system_stm32f4xx.c ****   uint32_t SystemCoreClock = 168000000;
 173:../src/system_stm32f4xx.c **** 
 174:../src/system_stm32f4xx.c ****   __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 175:../src/system_stm32f4xx.c **** 
 176:../src/system_stm32f4xx.c **** /**
 177:../src/system_stm32f4xx.c ****   * @}
 178:../src/system_stm32f4xx.c ****   */
 179:../src/system_stm32f4xx.c **** 
 180:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_FunctionPrototypes
 181:../src/system_stm32f4xx.c ****   * @{
 182:../src/system_stm32f4xx.c ****   */
 183:../src/system_stm32f4xx.c **** 
 184:../src/system_stm32f4xx.c **** static void SetSysClock(void);
 185:../src/system_stm32f4xx.c **** #ifdef DATA_IN_ExtSRAM
 186:../src/system_stm32f4xx.c ****   static void SystemInit_ExtMemCtl(void); 
 187:../src/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM */
 188:../src/system_stm32f4xx.c **** 
 189:../src/system_stm32f4xx.c **** /**
 190:../src/system_stm32f4xx.c ****   * @}
 191:../src/system_stm32f4xx.c ****   */
 192:../src/system_stm32f4xx.c **** 
 193:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Functions
 194:../src/system_stm32f4xx.c ****   * @{
 195:../src/system_stm32f4xx.c ****   */
 196:../src/system_stm32f4xx.c **** 
 197:../src/system_stm32f4xx.c **** /**
 198:../src/system_stm32f4xx.c ****   * @brief  Setup the microcontroller system
 199:../src/system_stm32f4xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 200:../src/system_stm32f4xx.c ****   *         SystemFrequency variable.
 201:../src/system_stm32f4xx.c ****   * @param  None
 202:../src/system_stm32f4xx.c ****   * @retval None
 203:../src/system_stm32f4xx.c ****   */
 204:../src/system_stm32f4xx.c **** void SystemInit(void)
 205:../src/system_stm32f4xx.c **** {
 24609              		.loc 1 205 0
 24610              		.cfi_startproc
 24611              		@ args = 0, pretend = 0, frame = 0
 24612              		@ frame_needed = 1, uses_anonymous_args = 0
 24613 0000 80B5     		push	{r7, lr}
 24614              	.LCFI0:
 24615              		.cfi_def_cfa_offset 8
 24616 0002 00AF     		add	r7, sp, #0
 24617              		.cfi_offset 14, -4
 24618              		.cfi_offset 7, -8
 24619              	.LCFI1:
 24620              		.cfi_def_cfa_register 7
 206:../src/system_stm32f4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 207:../src/system_stm32f4xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 208:../src/system_stm32f4xx.c **** 	SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 209:../src/system_stm32f4xx.c ****   #endif
 210:../src/system_stm32f4xx.c **** 
 211:../src/system_stm32f4xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 212:../src/system_stm32f4xx.c ****   /* Set HSION bit */
 213:../src/system_stm32f4xx.c ****   RCC->CR |= (uint32_t)0x00000001;
 24621              		.loc 1 213 0
 24622 0004 124B     		ldr	r3, .L2
 24623 0006 124A     		ldr	r2, .L2
 24624 0008 1268     		ldr	r2, [r2, #0]
 24625 000a 42F00102 		orr	r2, r2, #1
 24626 000e 1A60     		str	r2, [r3, #0]
 214:../src/system_stm32f4xx.c **** 
 215:../src/system_stm32f4xx.c ****   /* Reset CFGR register */
 216:../src/system_stm32f4xx.c ****   RCC->CFGR = 0x00000000;
 24627              		.loc 1 216 0
 24628 0010 0F4B     		ldr	r3, .L2
 24629 0012 4FF00002 		mov	r2, #0
 24630 0016 9A60     		str	r2, [r3, #8]
 217:../src/system_stm32f4xx.c **** 
 218:../src/system_stm32f4xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 219:../src/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
 24631              		.loc 1 219 0
 24632 0018 0D4A     		ldr	r2, .L2
 24633 001a 0D4B     		ldr	r3, .L2
 24634 001c 1B68     		ldr	r3, [r3, #0]
 24635 001e 23F08473 		bic	r3, r3, #17301504
 24636 0022 23F48033 		bic	r3, r3, #65536
 24637 0026 1360     		str	r3, [r2, #0]
 220:../src/system_stm32f4xx.c **** 
 221:../src/system_stm32f4xx.c ****   /* Reset PLLCFGR register */
 222:../src/system_stm32f4xx.c ****   RCC->PLLCFGR = 0x24003010;
 24638              		.loc 1 222 0
 24639 0028 094B     		ldr	r3, .L2
 24640 002a 0A4A     		ldr	r2, .L2+4
 24641 002c 5A60     		str	r2, [r3, #4]
 223:../src/system_stm32f4xx.c **** 
 224:../src/system_stm32f4xx.c ****   /* Reset HSEBYP bit */
 225:../src/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
 24642              		.loc 1 225 0
 24643 002e 084B     		ldr	r3, .L2
 24644 0030 074A     		ldr	r2, .L2
 24645 0032 1268     		ldr	r2, [r2, #0]
 24646 0034 22F48022 		bic	r2, r2, #262144
 24647 0038 1A60     		str	r2, [r3, #0]
 226:../src/system_stm32f4xx.c **** 
 227:../src/system_stm32f4xx.c ****   /* Disable all interrupts */
 228:../src/system_stm32f4xx.c ****   RCC->CIR = 0x00000000;
 24648              		.loc 1 228 0
 24649 003a 054B     		ldr	r3, .L2
 24650 003c 4FF00002 		mov	r2, #0
 24651 0040 DA60     		str	r2, [r3, #12]
 229:../src/system_stm32f4xx.c **** 
 230:../src/system_stm32f4xx.c **** #ifdef DATA_IN_ExtSRAM
 231:../src/system_stm32f4xx.c ****   SystemInit_ExtMemCtl(); 
 232:../src/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM */
 233:../src/system_stm32f4xx.c ****          
 234:../src/system_stm32f4xx.c ****   /* Configure the System clock source, PLL Multiplier and Divider factors, 
 235:../src/system_stm32f4xx.c ****      AHB/APBx prescalers and Flash settings ----------------------------------*/
 236:../src/system_stm32f4xx.c ****   SetSysClock();
 24652              		.loc 1 236 0
 24653 0042 00F095F8 		bl	SetSysClock
 237:../src/system_stm32f4xx.c **** 
 238:../src/system_stm32f4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 239:../src/system_stm32f4xx.c **** #ifdef VECT_TAB_SRAM
 240:../src/system_stm32f4xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 241:../src/system_stm32f4xx.c **** #else
 242:../src/system_stm32f4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 24654              		.loc 1 242 0
 24655 0046 044B     		ldr	r3, .L2+8
 24656 0048 4FF00062 		mov	r2, #134217728
 24657 004c 9A60     		str	r2, [r3, #8]
 243:../src/system_stm32f4xx.c **** #endif
 244:../src/system_stm32f4xx.c **** }
 24658              		.loc 1 244 0
 24659 004e 80BD     		pop	{r7, pc}
 24660              	.L3:
 24661              		.align	2
 24662              	.L2:
 24663 0050 00380240 		.word	1073887232
 24664 0054 10300024 		.word	603992080
 24665 0058 00ED00E0 		.word	-536810240
 24666              		.cfi_endproc
 24667              	.LFE110:
 24669              		.align	2
 24670              		.global	SystemCoreClockUpdate
 24671              		.thumb
 24672              		.thumb_func
 24674              	SystemCoreClockUpdate:
 24675              	.LFB111:
 245:../src/system_stm32f4xx.c **** 
 246:../src/system_stm32f4xx.c **** /**
 247:../src/system_stm32f4xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 248:../src/system_stm32f4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 249:../src/system_stm32f4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 250:../src/system_stm32f4xx.c ****   *         other parameters.
 251:../src/system_stm32f4xx.c ****   *           
 252:../src/system_stm32f4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 253:../src/system_stm32f4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 254:../src/system_stm32f4xx.c ****   *         based on this variable will be incorrect.         
 255:../src/system_stm32f4xx.c ****   *     
 256:../src/system_stm32f4xx.c ****   * @note   - The system frequency computed by this function is not the real 
 257:../src/system_stm32f4xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 258:../src/system_stm32f4xx.c ****   *           constant and the selected clock source:
 259:../src/system_stm32f4xx.c ****   *             
 260:../src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 261:../src/system_stm32f4xx.c ****   *                                              
 262:../src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 263:../src/system_stm32f4xx.c ****   *                          
 264:../src/system_stm32f4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 265:../src/system_stm32f4xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 266:../src/system_stm32f4xx.c ****   *         
 267:../src/system_stm32f4xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f4xx.h file (default value
 268:../src/system_stm32f4xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 269:../src/system_stm32f4xx.c ****   *             in voltage and temperature.   
 270:../src/system_stm32f4xx.c ****   *    
 271:../src/system_stm32f4xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f4xx.h file (default value
 272:../src/system_stm32f4xx.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 273:../src/system_stm32f4xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 274:../src/system_stm32f4xx.c ****   *              have wrong result.
 275:../src/system_stm32f4xx.c ****   *                
 276:../src/system_stm32f4xx.c ****   *         - The result of this function could be not correct when using fractional
 277:../src/system_stm32f4xx.c ****   *           value for HSE crystal.
 278:../src/system_stm32f4xx.c ****   *     
 279:../src/system_stm32f4xx.c ****   * @param  None
 280:../src/system_stm32f4xx.c ****   * @retval None
 281:../src/system_stm32f4xx.c ****   */
 282:../src/system_stm32f4xx.c **** void SystemCoreClockUpdate(void)
 283:../src/system_stm32f4xx.c **** {
 24676              		.loc 1 283 0
 24677              		.cfi_startproc
 24678              		@ args = 0, pretend = 0, frame = 24
 24679              		@ frame_needed = 1, uses_anonymous_args = 0
 24680              		@ link register save eliminated.
 24681 005c 80B4     		push	{r7}
 24682              	.LCFI2:
 24683              		.cfi_def_cfa_offset 4
 24684 005e 87B0     		sub	sp, sp, #28
 24685              	.LCFI3:
 24686              		.cfi_def_cfa_offset 32
 24687 0060 00AF     		add	r7, sp, #0
 24688              		.cfi_offset 7, -4
 24689              	.LCFI4:
 24690              		.cfi_def_cfa_register 7
 284:../src/system_stm32f4xx.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 24691              		.loc 1 284 0
 24692 0062 4FF00003 		mov	r3, #0
 24693 0066 3B61     		str	r3, [r7, #16]
 24694 0068 4FF00003 		mov	r3, #0
 24695 006c 7B61     		str	r3, [r7, #20]
 24696 006e 4FF00203 		mov	r3, #2
 24697 0072 FB60     		str	r3, [r7, #12]
 24698 0074 4FF00003 		mov	r3, #0
 24699 0078 BB60     		str	r3, [r7, #8]
 24700 007a 4FF00203 		mov	r3, #2
 24701 007e 7B60     		str	r3, [r7, #4]
 285:../src/system_stm32f4xx.c ****   
 286:../src/system_stm32f4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 287:../src/system_stm32f4xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 24702              		.loc 1 287 0
 24703 0080 364B     		ldr	r3, .L13
 24704 0082 9B68     		ldr	r3, [r3, #8]
 24705 0084 03F00C03 		and	r3, r3, #12
 24706 0088 3B61     		str	r3, [r7, #16]
 288:../src/system_stm32f4xx.c **** 
 289:../src/system_stm32f4xx.c ****   switch (tmp)
 24707              		.loc 1 289 0
 24708 008a 3B69     		ldr	r3, [r7, #16]
 24709 008c 042B     		cmp	r3, #4
 24710 008e 07D0     		beq	.L7
 24711 0090 082B     		cmp	r3, #8
 24712 0092 09D0     		beq	.L8
 24713 0094 002B     		cmp	r3, #0
 24714 0096 47D1     		bne	.L12
 24715              	.L6:
 290:../src/system_stm32f4xx.c ****   {
 291:../src/system_stm32f4xx.c ****     case 0x00:  /* HSI used as system clock source */
 292:../src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 24716              		.loc 1 292 0
 24717 0098 314B     		ldr	r3, .L13+4
 24718 009a 324A     		ldr	r2, .L13+8
 24719 009c 1A60     		str	r2, [r3, #0]
 293:../src/system_stm32f4xx.c ****       break;
 24720              		.loc 1 293 0
 24721 009e 47E0     		b	.L9
 24722              	.L7:
 294:../src/system_stm32f4xx.c ****     case 0x04:  /* HSE used as system clock source */
 295:../src/system_stm32f4xx.c ****       SystemCoreClock = HSE_VALUE;
 24723              		.loc 1 295 0
 24724 00a0 2F4B     		ldr	r3, .L13+4
 24725 00a2 314A     		ldr	r2, .L13+12
 24726 00a4 1A60     		str	r2, [r3, #0]
 296:../src/system_stm32f4xx.c ****       break;
 24727              		.loc 1 296 0
 24728 00a6 43E0     		b	.L9
 24729              	.L8:
 297:../src/system_stm32f4xx.c ****     case 0x08:  /* PLL used as system clock source */
 298:../src/system_stm32f4xx.c **** 
 299:../src/system_stm32f4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
 300:../src/system_stm32f4xx.c ****          SYSCLK = PLL_VCO / PLL_P
 301:../src/system_stm32f4xx.c ****          */    
 302:../src/system_stm32f4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 24730              		.loc 1 302 0
 24731 00a8 2C4B     		ldr	r3, .L13
 24732 00aa 5B68     		ldr	r3, [r3, #4]
 24733 00ac 03F48003 		and	r3, r3, #4194304
 24734 00b0 4FEA9353 		lsr	r3, r3, #22
 24735 00b4 BB60     		str	r3, [r7, #8]
 303:../src/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 24736              		.loc 1 303 0
 24737 00b6 294B     		ldr	r3, .L13
 24738 00b8 5B68     		ldr	r3, [r3, #4]
 24739 00ba 03F03F03 		and	r3, r3, #63
 24740 00be 7B60     		str	r3, [r7, #4]
 304:../src/system_stm32f4xx.c ****       
 305:../src/system_stm32f4xx.c ****       if (pllsource != 0)
 24741              		.loc 1 305 0
 24742 00c0 BB68     		ldr	r3, [r7, #8]
 24743 00c2 002B     		cmp	r3, #0
 24744 00c4 0FD0     		beq	.L10
 306:../src/system_stm32f4xx.c ****       {
 307:../src/system_stm32f4xx.c ****         /* HSE used as PLL clock source */
 308:../src/system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 24745              		.loc 1 308 0
 24746 00c6 284A     		ldr	r2, .L13+12
 24747 00c8 7B68     		ldr	r3, [r7, #4]
 24748 00ca B2FBF3F2 		udiv	r2, r2, r3
 24749 00ce 234B     		ldr	r3, .L13
 24750 00d0 5968     		ldr	r1, [r3, #4]
 24751 00d2 47F6C073 		movw	r3, #32704
 24752 00d6 01EA0303 		and	r3, r1, r3
 24753 00da 4FEA9313 		lsr	r3, r3, #6
 24754 00de 03FB02F3 		mul	r3, r3, r2
 24755 00e2 7B61     		str	r3, [r7, #20]
 24756 00e4 0EE0     		b	.L11
 24757              	.L10:
 309:../src/system_stm32f4xx.c ****       }
 310:../src/system_stm32f4xx.c ****       else
 311:../src/system_stm32f4xx.c ****       {
 312:../src/system_stm32f4xx.c ****         /* HSI used as PLL clock source */
 313:../src/system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 24758              		.loc 1 313 0
 24759 00e6 1F4A     		ldr	r2, .L13+8
 24760 00e8 7B68     		ldr	r3, [r7, #4]
 24761 00ea B2FBF3F2 		udiv	r2, r2, r3
 24762 00ee 1B4B     		ldr	r3, .L13
 24763 00f0 5968     		ldr	r1, [r3, #4]
 24764 00f2 47F6C073 		movw	r3, #32704
 24765 00f6 01EA0303 		and	r3, r1, r3
 24766 00fa 4FEA9313 		lsr	r3, r3, #6
 24767 00fe 03FB02F3 		mul	r3, r3, r2
 24768 0102 7B61     		str	r3, [r7, #20]
 24769              	.L11:
 314:../src/system_stm32f4xx.c ****       }
 315:../src/system_stm32f4xx.c **** 
 316:../src/system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 24770              		.loc 1 316 0
 24771 0104 154B     		ldr	r3, .L13
 24772 0106 5B68     		ldr	r3, [r3, #4]
 24773 0108 03F44033 		and	r3, r3, #196608
 24774 010c 4FEA1343 		lsr	r3, r3, #16
 24775 0110 03F10103 		add	r3, r3, #1
 24776 0114 4FEA4303 		lsl	r3, r3, #1
 24777 0118 FB60     		str	r3, [r7, #12]
 317:../src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 24778              		.loc 1 317 0
 24779 011a 7A69     		ldr	r2, [r7, #20]
 24780 011c FB68     		ldr	r3, [r7, #12]
 24781 011e B2FBF3F2 		udiv	r2, r2, r3
 24782 0122 0F4B     		ldr	r3, .L13+4
 24783 0124 1A60     		str	r2, [r3, #0]
 318:../src/system_stm32f4xx.c ****       break;
 24784              		.loc 1 318 0
 24785 0126 03E0     		b	.L9
 24786              	.L12:
 319:../src/system_stm32f4xx.c ****     default:
 320:../src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 24787              		.loc 1 320 0
 24788 0128 0D4B     		ldr	r3, .L13+4
 24789 012a 0E4A     		ldr	r2, .L13+8
 24790 012c 1A60     		str	r2, [r3, #0]
 321:../src/system_stm32f4xx.c ****       break;
 24791              		.loc 1 321 0
 24792 012e 00BF     		nop
 24793              	.L9:
 322:../src/system_stm32f4xx.c ****   }
 323:../src/system_stm32f4xx.c ****   /* Compute HCLK frequency --------------------------------------------------*/
 324:../src/system_stm32f4xx.c ****   /* Get HCLK prescaler */
 325:../src/system_stm32f4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 24794              		.loc 1 325 0
 24795 0130 0A4B     		ldr	r3, .L13
 24796 0132 9B68     		ldr	r3, [r3, #8]
 24797 0134 03F0F003 		and	r3, r3, #240
 24798 0138 4FEA1313 		lsr	r3, r3, #4
 24799 013c 0B4A     		ldr	r2, .L13+16
 24800 013e D35C     		ldrb	r3, [r2, r3]
 24801 0140 DBB2     		uxtb	r3, r3
 24802 0142 3B61     		str	r3, [r7, #16]
 326:../src/system_stm32f4xx.c ****   /* HCLK frequency */
 327:../src/system_stm32f4xx.c ****   SystemCoreClock >>= tmp;
 24803              		.loc 1 327 0
 24804 0144 064B     		ldr	r3, .L13+4
 24805 0146 1A68     		ldr	r2, [r3, #0]
 24806 0148 3B69     		ldr	r3, [r7, #16]
 24807 014a 22FA03F2 		lsr	r2, r2, r3
 24808 014e 044B     		ldr	r3, .L13+4
 24809 0150 1A60     		str	r2, [r3, #0]
 328:../src/system_stm32f4xx.c **** }
 24810              		.loc 1 328 0
 24811 0152 07F11C07 		add	r7, r7, #28
 24812 0156 BD46     		mov	sp, r7
 24813 0158 80BC     		pop	{r7}
 24814 015a 7047     		bx	lr
 24815              	.L14:
 24816              		.align	2
 24817              	.L13:
 24818 015c 00380240 		.word	1073887232
 24819 0160 00000000 		.word	SystemCoreClock
 24820 0164 0024F400 		.word	16000000
 24821 0168 00127A00 		.word	8000000
 24822 016c 00000000 		.word	AHBPrescTable
 24823              		.cfi_endproc
 24824              	.LFE111:
 24826              		.align	2
 24827              		.thumb
 24828              		.thumb_func
 24830              	SetSysClock:
 24831              	.LFB112:
 329:../src/system_stm32f4xx.c **** 
 330:../src/system_stm32f4xx.c **** /**
 331:../src/system_stm32f4xx.c ****   * @brief  Configures the System clock source, PLL Multiplier and Divider factors, 
 332:../src/system_stm32f4xx.c ****   *         AHB/APBx prescalers and Flash settings
 333:../src/system_stm32f4xx.c ****   * @Note   This function should be called only once the RCC clock configuration  
 334:../src/system_stm32f4xx.c ****   *         is reset to the default reset state (done in SystemInit() function).   
 335:../src/system_stm32f4xx.c ****   * @param  None
 336:../src/system_stm32f4xx.c ****   * @retval None
 337:../src/system_stm32f4xx.c ****   */
 338:../src/system_stm32f4xx.c **** static void SetSysClock(void)
 339:../src/system_stm32f4xx.c **** {
 24832              		.loc 1 339 0
 24833              		.cfi_startproc
 24834              		@ args = 0, pretend = 0, frame = 8
 24835              		@ frame_needed = 1, uses_anonymous_args = 0
 24836              		@ link register save eliminated.
 24837 0170 80B4     		push	{r7}
 24838              	.LCFI5:
 24839              		.cfi_def_cfa_offset 4
 24840 0172 83B0     		sub	sp, sp, #12
 24841              	.LCFI6:
 24842              		.cfi_def_cfa_offset 16
 24843 0174 00AF     		add	r7, sp, #0
 24844              		.cfi_offset 7, -4
 24845              	.LCFI7:
 24846              		.cfi_def_cfa_register 7
 340:../src/system_stm32f4xx.c **** /******************************************************************************/
 341:../src/system_stm32f4xx.c **** /*            PLL (clocked by HSE) used as System clock source                */
 342:../src/system_stm32f4xx.c **** /******************************************************************************/
 343:../src/system_stm32f4xx.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 24847              		.loc 1 343 0
 24848 0176 4FF00003 		mov	r3, #0
 24849 017a 7B60     		str	r3, [r7, #4]
 24850 017c 4FF00003 		mov	r3, #0
 24851 0180 3B60     		str	r3, [r7, #0]
 344:../src/system_stm32f4xx.c ****   
 345:../src/system_stm32f4xx.c ****   /* Enable HSE */
 346:../src/system_stm32f4xx.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 24852              		.loc 1 346 0
 24853 0182 374B     		ldr	r3, .L23
 24854 0184 364A     		ldr	r2, .L23
 24855 0186 1268     		ldr	r2, [r2, #0]
 24856 0188 42F48032 		orr	r2, r2, #65536
 24857 018c 1A60     		str	r2, [r3, #0]
 24858              	.L17:
 347:../src/system_stm32f4xx.c ****  
 348:../src/system_stm32f4xx.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 349:../src/system_stm32f4xx.c ****   do
 350:../src/system_stm32f4xx.c ****   {
 351:../src/system_stm32f4xx.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 24859              		.loc 1 351 0 discriminator 1
 24860 018e 344B     		ldr	r3, .L23
 24861 0190 1B68     		ldr	r3, [r3, #0]
 24862 0192 03F40033 		and	r3, r3, #131072
 24863 0196 3B60     		str	r3, [r7, #0]
 352:../src/system_stm32f4xx.c ****     StartUpCounter++;
 24864              		.loc 1 352 0 discriminator 1
 24865 0198 7B68     		ldr	r3, [r7, #4]
 24866 019a 03F10103 		add	r3, r3, #1
 24867 019e 7B60     		str	r3, [r7, #4]
 353:../src/system_stm32f4xx.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 24868              		.loc 1 353 0 discriminator 1
 24869 01a0 3B68     		ldr	r3, [r7, #0]
 24870 01a2 002B     		cmp	r3, #0
 24871 01a4 03D1     		bne	.L16
 24872 01a6 7B68     		ldr	r3, [r7, #4]
 24873 01a8 B3F5A06F 		cmp	r3, #1280
 24874 01ac EFD1     		bne	.L17
 24875              	.L16:
 354:../src/system_stm32f4xx.c **** 
 355:../src/system_stm32f4xx.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 24876              		.loc 1 355 0
 24877 01ae 2C4B     		ldr	r3, .L23
 24878 01b0 1B68     		ldr	r3, [r3, #0]
 24879 01b2 03F40033 		and	r3, r3, #131072
 24880 01b6 002B     		cmp	r3, #0
 24881 01b8 03D0     		beq	.L18
 356:../src/system_stm32f4xx.c ****   {
 357:../src/system_stm32f4xx.c ****     HSEStatus = (uint32_t)0x01;
 24882              		.loc 1 357 0
 24883 01ba 4FF00103 		mov	r3, #1
 24884 01be 3B60     		str	r3, [r7, #0]
 24885 01c0 02E0     		b	.L19
 24886              	.L18:
 358:../src/system_stm32f4xx.c ****   }
 359:../src/system_stm32f4xx.c ****   else
 360:../src/system_stm32f4xx.c ****   {
 361:../src/system_stm32f4xx.c ****     HSEStatus = (uint32_t)0x00;
 24887              		.loc 1 361 0
 24888 01c2 4FF00003 		mov	r3, #0
 24889 01c6 3B60     		str	r3, [r7, #0]
 24890              	.L19:
 362:../src/system_stm32f4xx.c ****   }
 363:../src/system_stm32f4xx.c **** 
 364:../src/system_stm32f4xx.c ****   if (HSEStatus == (uint32_t)0x01)
 24891              		.loc 1 364 0
 24892 01c8 3B68     		ldr	r3, [r7, #0]
 24893 01ca 012B     		cmp	r3, #1
 24894 01cc 42D1     		bne	.L15
 365:../src/system_stm32f4xx.c ****   {
 366:../src/system_stm32f4xx.c ****     /* Enable high performance mode, System frequency up to 168 MHz */
 367:../src/system_stm32f4xx.c ****     RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 24895              		.loc 1 367 0
 24896 01ce 244B     		ldr	r3, .L23
 24897 01d0 234A     		ldr	r2, .L23
 24898 01d2 126C     		ldr	r2, [r2, #64]
 24899 01d4 42F08052 		orr	r2, r2, #268435456
 24900 01d8 1A64     		str	r2, [r3, #64]
 368:../src/system_stm32f4xx.c ****     PWR->CR |= PWR_CR_PMODE;  
 24901              		.loc 1 368 0
 24902 01da 224B     		ldr	r3, .L23+4
 24903 01dc 214A     		ldr	r2, .L23+4
 24904 01de 1268     		ldr	r2, [r2, #0]
 24905 01e0 42F48042 		orr	r2, r2, #16384
 24906 01e4 1A60     		str	r2, [r3, #0]
 369:../src/system_stm32f4xx.c **** 
 370:../src/system_stm32f4xx.c ****     /* HCLK = SYSCLK / 1*/
 371:../src/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_HPRE_DIV1;
 24907              		.loc 1 371 0
 24908 01e6 1E4B     		ldr	r3, .L23
 24909 01e8 1D4A     		ldr	r2, .L23
 24910 01ea 9268     		ldr	r2, [r2, #8]
 24911 01ec 9A60     		str	r2, [r3, #8]
 372:../src/system_stm32f4xx.c ****       
 373:../src/system_stm32f4xx.c ****     /* PCLK2 = HCLK / 2*/
 374:../src/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE2_DIV2;
 24912              		.loc 1 374 0
 24913 01ee 1C4B     		ldr	r3, .L23
 24914 01f0 1B4A     		ldr	r2, .L23
 24915 01f2 9268     		ldr	r2, [r2, #8]
 24916 01f4 42F40042 		orr	r2, r2, #32768
 24917 01f8 9A60     		str	r2, [r3, #8]
 375:../src/system_stm32f4xx.c ****     
 376:../src/system_stm32f4xx.c ****     /* PCLK1 = HCLK / 4*/
 377:../src/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE1_DIV4;
 24918              		.loc 1 377 0
 24919 01fa 194B     		ldr	r3, .L23
 24920 01fc 184A     		ldr	r2, .L23
 24921 01fe 9268     		ldr	r2, [r2, #8]
 24922 0200 42F4A052 		orr	r2, r2, #5120
 24923 0204 9A60     		str	r2, [r3, #8]
 378:../src/system_stm32f4xx.c **** 
 379:../src/system_stm32f4xx.c ****     /* Configure the main PLL */
 380:../src/system_stm32f4xx.c ****     RCC->PLLCFGR = PLL_M | (PLL_N << 6) | (((PLL_P >> 1) -1) << 16) |
 24924              		.loc 1 380 0
 24925 0206 164B     		ldr	r3, .L23
 24926 0208 174A     		ldr	r2, .L23+8
 24927 020a 5A60     		str	r2, [r3, #4]
 381:../src/system_stm32f4xx.c ****                    (RCC_PLLCFGR_PLLSRC_HSE) | (PLL_Q << 24);
 382:../src/system_stm32f4xx.c **** 
 383:../src/system_stm32f4xx.c ****     /* Enable the main PLL */
 384:../src/system_stm32f4xx.c ****     RCC->CR |= RCC_CR_PLLON;
 24928              		.loc 1 384 0
 24929 020c 144B     		ldr	r3, .L23
 24930 020e 144A     		ldr	r2, .L23
 24931 0210 1268     		ldr	r2, [r2, #0]
 24932 0212 42F08072 		orr	r2, r2, #16777216
 24933 0216 1A60     		str	r2, [r3, #0]
 385:../src/system_stm32f4xx.c **** 
 386:../src/system_stm32f4xx.c ****     /* Wait till the main PLL is ready */
 387:../src/system_stm32f4xx.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 24934              		.loc 1 387 0
 24935 0218 00BF     		nop
 24936              	.L21:
 24937              		.loc 1 387 0 is_stmt 0 discriminator 1
 24938 021a 114B     		ldr	r3, .L23
 24939 021c 1B68     		ldr	r3, [r3, #0]
 24940 021e 03F00073 		and	r3, r3, #33554432
 24941 0222 002B     		cmp	r3, #0
 24942 0224 F9D0     		beq	.L21
 388:../src/system_stm32f4xx.c ****     {
 389:../src/system_stm32f4xx.c ****     }
 390:../src/system_stm32f4xx.c ****    
 391:../src/system_stm32f4xx.c ****     /* Configure Flash prefetch, Instruction cache, Data cache and wait state */
 392:../src/system_stm32f4xx.c ****     FLASH->ACR = FLASH_ACR_ICEN |FLASH_ACR_DCEN |FLASH_ACR_LATENCY_5WS;
 24943              		.loc 1 392 0 is_stmt 1
 24944 0226 114B     		ldr	r3, .L23+12
 24945 0228 40F20562 		movw	r2, #1541
 24946 022c 1A60     		str	r2, [r3, #0]
 393:../src/system_stm32f4xx.c **** 
 394:../src/system_stm32f4xx.c ****     /* Select the main PLL as system clock source */
 395:../src/system_stm32f4xx.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 24947              		.loc 1 395 0
 24948 022e 0C4B     		ldr	r3, .L23
 24949 0230 0B4A     		ldr	r2, .L23
 24950 0232 9268     		ldr	r2, [r2, #8]
 24951 0234 22F00302 		bic	r2, r2, #3
 24952 0238 9A60     		str	r2, [r3, #8]
 396:../src/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_SW_PLL;
 24953              		.loc 1 396 0
 24954 023a 094B     		ldr	r3, .L23
 24955 023c 084A     		ldr	r2, .L23
 24956 023e 9268     		ldr	r2, [r2, #8]
 24957 0240 42F00202 		orr	r2, r2, #2
 24958 0244 9A60     		str	r2, [r3, #8]
 397:../src/system_stm32f4xx.c **** 
 398:../src/system_stm32f4xx.c ****     /* Wait till the main PLL is used as system clock source */
 399:../src/system_stm32f4xx.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS ) != RCC_CFGR_SWS_PLL);
 24959              		.loc 1 399 0
 24960 0246 00BF     		nop
 24961              	.L22:
 24962              		.loc 1 399 0 is_stmt 0 discriminator 1
 24963 0248 054B     		ldr	r3, .L23
 24964 024a 9B68     		ldr	r3, [r3, #8]
 24965 024c 03F00C03 		and	r3, r3, #12
 24966 0250 082B     		cmp	r3, #8
 24967 0252 F9D1     		bne	.L22
 24968              	.L15:
 400:../src/system_stm32f4xx.c ****     {
 401:../src/system_stm32f4xx.c ****     }
 402:../src/system_stm32f4xx.c ****   }
 403:../src/system_stm32f4xx.c ****   else
 404:../src/system_stm32f4xx.c ****   { /* If HSE fails to start-up, the application will have wrong clock
 405:../src/system_stm32f4xx.c ****          configuration. User can add here some code to deal with this error */
 406:../src/system_stm32f4xx.c ****   }
 407:../src/system_stm32f4xx.c **** 
 408:../src/system_stm32f4xx.c **** }
 24969              		.loc 1 408 0 is_stmt 1
 24970 0254 07F10C07 		add	r7, r7, #12
 24971 0258 BD46     		mov	sp, r7
 24972 025a 80BC     		pop	{r7}
 24973 025c 7047     		bx	lr
 24974              	.L24:
 24975 025e 00BF     		.align	2
 24976              	.L23:
 24977 0260 00380240 		.word	1073887232
 24978 0264 00700040 		.word	1073770496
 24979 0268 08544007 		.word	121656328
 24980 026c 003C0240 		.word	1073888256
 24981              		.cfi_endproc
 24982              	.LFE112:
 24984              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f4xx.c
     /tmp/ccGWXB3E.s:24578  .data:00000000 SystemCoreClock
     /tmp/ccGWXB3E.s:24575  .data:00000000 $d
     /tmp/ccGWXB3E.s:24584  .data:00000004 AHBPrescTable
     /tmp/ccGWXB3E.s:24602  .text:00000000 $t
     /tmp/ccGWXB3E.s:24607  .text:00000000 SystemInit
     /tmp/ccGWXB3E.s:24830  .text:00000170 SetSysClock
     /tmp/ccGWXB3E.s:24663  .text:00000050 $d
     /tmp/ccGWXB3E.s:24669  .text:0000005c $t
     /tmp/ccGWXB3E.s:24674  .text:0000005c SystemCoreClockUpdate
     /tmp/ccGWXB3E.s:24818  .text:0000015c $d
     /tmp/ccGWXB3E.s:24826  .text:00000170 $t
     /tmp/ccGWXB3E.s:24977  .text:00000260 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
